<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>SeanXP</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://seanxp.com/"/>
  <updated>2018-03-11T02:29:34.403Z</updated>
  <id>http://seanxp.com/</id>
  
  <author>
    <name>SeanXP</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>智齿列传第八</title>
    <link href="http://seanxp.com/2017/12/tooth8th/"/>
    <id>http://seanxp.com/2017/12/tooth8th/</id>
    <published>2017-12-10T00:44:41.000Z</published>
    <updated>2018-03-11T02:29:34.403Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><br><img src="https://www.artedentalclinic.com/wp-content/uploads/2017/03/dientes.jpg" width="540" height="540" alt="Teeth"><br>嗡 嘛 智 牟 耶 萨 列 德<br></div><a id="more"></a><h1 id="智齿列传第八（误"><a href="#智齿列传第八（误" class="headerlink" title="智齿列传第八（误"></a>智齿列传第八（误</h1><h2 id="智慧齿"><a href="#智慧齿" class="headerlink" title="智慧齿"></a>智慧齿</h2><p>第三大臼齿（Third Molar），学名<a href="https://www.wikiwand.com/zh-hans/%E6%99%BA%E9%BD%BF" target="_blank" rel="noopener">智慧齿（Wisdom Tooth）</a>，俗称「智齿」，是从中间门牙牙缝向里数的第8颗牙齿。<br>以往人类的智齿一共有4颗，上下颚各两颗，直到近几百年有许多人类智齿天生就会缺少，生物学家证实智齿缺乏已参与了人类的演化历程。<br>四颗智齿不是都必然会长全，某些人的智齿可能只长1至2颗，有的智齿甚至长到一半就不再生长，这种情况称为<a href="https://www.wikiwand.com/zh-hans/%E9%98%BB%E7%94%9F%E6%99%BA%E9%BD%BF" target="_blank" rel="noopener">智齿阻生</a>。</p><h2 id="智齿——智慧之源"><a href="#智齿——智慧之源" class="headerlink" title="智齿——智慧之源"></a>智齿——智慧之源</h2><!-- 误 --><p>人类漫长的童年期是在模仿和学习中度过的，在学习过程中，<font color="red">智齿咬合面和邻面由于咀嚼作用带来的机械摩擦而发生的均衡的生理性的硬组织丧失，即智齿智慧成分的脱离或溶解，伴随与牙表面接触的液态环境而进入人体，从而带来人类记忆的巩固与智慧的提升</font>，对人类的大脑发育具有重要影响，智齿因而得名。科学研究表明，智齿是哺乳纲灵长目智人种的智慧源泉。</p><p>古代人类虽然未能完全理解智齿的作用机理，但是在长期的医疗实践与经验总结中已经形成了相应的智齿学说，奠定了中医学的基础，是中国古代医学的重要成就。而人民大众也根据民间普遍经验与群体智慧，创造了一个个鲜活有趣的成语，其中包括：</p><ul><li><strong>味同嚼蜡</strong>，意思是味道如同嚼蜡一般，形容没有味道，多指说话或文章枯燥无味。其科学解释是这种学习行为如同咀嚼蜡一般，不会带动牙齿产生机械摩擦，没有智齿智慧成分的脱离或溶解，自然也就无法深入巩固知识，让人变得枯燥无味。</li><li><strong>不知肉味</strong>，原指被美妙的音乐所陶醉，因而辨不出肉味；后形容专心学习，吃东西辨不出味道。其科学解释是由于专心学习而带动智齿咬合面剧烈摩擦，溶解大量智齿硬组织成分，甚至导致味觉的短暂失灵。也说明只有好的东西，才能吸引人去学习、去咀嚼、去成长。</li><li><strong>浅尝辄止</strong>，意思是略微尝试一下就停下来，指不深入钻研。其科学解释是学习就好比吃东西，不放在嘴里细细咀嚼，怎么能摩擦溶解智齿呢？</li><li><strong>悬梁刺股</strong>，形容刻苦学习。其本质是通过外物对身体施加物理性创伤，利用痛觉来带动牙齿的剧烈摩擦，从而增强学习效果。但是这种方法会导致智齿的病理性磨损，如同饮鸩止渴一般，战国苏秦就是个例子（一个自称老实人的纵横家）。</li><li><strong>废寝忘食</strong>，顾不得睡觉，忘记了吃饭，形容专心努力。其科学解释是反复咀嚼智齿从而导致饥饿感降低。</li></ul><h2 id="拔智齿"><a href="#拔智齿" class="headerlink" title="拔智齿"></a>拔智齿</h2><!-- 谣言 --><p>现代很多人，尤其是大学生们，经常存在“智齿疼痛”的现象。那是因为在经历了高考之后，学习的热情陡然下降，已经长期没有咀嚼智齿获得智慧的提升了。</p><p>智齿无用是现代牙科医生的阴谋，好多人被忽悠着拔掉了。古人的智齿都长得好好的，不会到现代就长不好。智齿对人体健康有很重要的作用，不仅跟人体的智力记忆相关，还是健康的晴雨表。</p><!-- 请勿尝试 --><p>现代人类的一种新的趋势，是将人类的智慧源泉——智齿通过物理手段进行强行拔除，将拔除下来的智齿研磨成粉后温水吞服，以获得短暂的 IQ 增益。（遵照医嘱行事 -_- ）</p><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="牙齿"><a href="#牙齿" class="headerlink" title="牙齿"></a><a href="https://www.wikiwand.com/zh-cn/%E7%89%99%E9%BD%BF" target="_blank" rel="noopener">牙齿</a></h2><p>牙齿是存在于很多脊椎动物(鸟类除外)的头部（或口部）内、<font color="red">用于咀嚼食物的钙化组织</font>。肉食性动物尤其倚赖牙齿进行猎食或搏斗、御敌。<font color="red">牙齿的构成成分不是骨骼</font>，而是由动物体内不同密度与硬度的复杂组织组成，它的根部则由牙龈包覆、固定。</p><p>牙齿类型：</p><ul><li>门齿（切牙）用于切断食物</li><li>犬齿（尖牙）用于刺穿并撕裂食物</li><li>臼齿（磨牙）用于磨碎食物</li></ul><p><font color="red">大部分哺乳动物是双套牙的，即未成年时有乳齿，成年时换成恒齿。</font>但有一些哺乳动物比如齿鲸是单套牙的，即不换齿。牙齿的四种基本类型是门齿、犬齿、前臼齿和臼齿。对于许多哺乳动物来说，它们都是异型齿，即大小和形状都不同。</p><h2 id="人类牙齿"><a href="#人类牙齿" class="headerlink" title="人类牙齿"></a>人类牙齿</h2><p>人类有两组牙齿。第一组称为乳牙（乳齿或奶齿），在婴儿出生后约6个月出现。儿童有20只乳齿，平均上下两排分配。恒牙大致在六岁开始萌出，十八岁左右出齐，共32颗。有的人不长“尽头牙”（智齿），那么十二岁就出齐28颗。</p><ol><li>六岁以前全是乳牙，称“乳牙列期”。</li><li>六岁至十二岁正在换牙，称“替牙列期”。</li><li>十二岁以后乳牙掉完，称“恒牙列期”。</li></ol><p>乳恒牙替换对儿童牙颌发育影响很大。乳齿的发育为口腔定型打下了基础，并且决定恒齿的位置。因此这期间应该注意口腔卫生，防止龋齿。常有家长说，孩子换牙前牙齿长得很整齐，换牙后长乱了，既不易刷净，又影响美观。换牙时牙齿排练不齐，应尽快完成正畸，避免影响颌骨发育。</p><ul><li><a href="https://www.google.com/search?q=%E4%B8%80%E7%94%9F%E4%B8%AD52%E9%A2%97%E7%89%99%E9%BD%BF%E7%9A%84%E8%90%8C%E5%87%BA%E6%97%B6%E9%97%B4" target="_blank" rel="noopener">一生中52颗牙齿的萌出时间</a></li></ul><h3 id="乳牙（20颗）"><a href="#乳牙（20颗）" class="headerlink" title="乳牙（20颗）"></a><a href="https://www.wikiwand.com/zh-hans/%E4%B9%B3%E7%89%99" target="_blank" rel="noopener">乳牙</a>（20颗）</h3><p>乳牙（Deciduous Teeth）20颗，大致在半岁到两岁萌出，六岁左右开始脱落，一般到十二岁掉完。乳牙比恒牙小，表面珐琅质薄。按生长顺序为：</p><ul><li>下排2颗乳门齿</li><li>上排4颗乳门齿</li><li>下排2颗乳侧门齿</li><li>上下第一乳臼齿、乳犬齿，共8颗</li><li>上下第二乳臼齿。共4颗</li></ul><p><img src="http://img.mp.itc.cn/q_70,c_zoom,w_640/upload/20170314/dca10681fb58471096a81bdab9ac3cd4_th.jpg" style="zoom:50%"></p><h3 id="恒牙（28颗-4颗智齿）"><a href="#恒牙（28颗-4颗智齿）" class="headerlink" title="恒牙（28颗+4颗智齿）"></a>恒牙（28颗+4颗智齿）</h3><p><font color="red">人类在4至13岁之间，将会长出一组永久性的牙齿，称为恒牙或恒齿。恒齿在乳齿底下形成，把乳齿推出颌骨后取而代之。</font><br>新的一组牙齿共32只，相应长大了的颌骨加大。恒齿长出后，每半排牙齿会分别有：</p><ul><li>正门牙</li><li>侧门牙</li><li>犬齿</li><li>第一小臼齿</li><li>第二小臼齿</li><li>第一大臼齿</li><li>第二大臼齿</li><li>第三大臼齿（智慧齿）</li></ul><p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fmbm0pakvgj30cs08cacl.jpg" style="zoom:80%"></p><h3 id="智齿阻生"><a href="#智齿阻生" class="headerlink" title="智齿阻生"></a>智齿阻生</h3><ul><li><a href="https://www.guokr.com/article/436850/" target="_blank" rel="noopener">消逝中的智齿，拔还是不拔？</a></li></ul><p>所谓第三大臼齿，也即上下两排牙齿的两端，一共4颗牙齿，也即常说的智慧齿。<font color="red">智慧齿大部分时候都不会长出。不长出的原因可能是颌骨位置不够，或者有个别情况根本不存在，但通常最多是缺少其中一只。</font>由于绝大部分白种人和黄种人的颌骨都不够大，故而，为了防止因藏纳食物而导致蛀牙、发炎等问题，以及牙齿的强行长出迫使整副牙齿不整，一般而言都把智齿拔掉。</p><p>智齿其实是人类演化过程中“牺牲”的生物学性状，跟智力、记忆没有关系。由于人类颌骨回缩致使智齿没有足够的生存空间，所以它的萌出常导致各种口腔问题，需要拔除。但如果它能顺利萌出，不影响其他牙齿，是没必要拔除的。拔智齿也没有瘦脸的功效。</p><h3 id="牙齿构造"><a href="#牙齿构造" class="headerlink" title="牙齿构造"></a>牙齿构造</h3><p>虽然看起来和骨骼类似，但牙齿不是骨头，因为它不生产红血球，没有连接颌骨的关节，比骨头能承受更多更大的磨损。假若牙齿是骨骼，那么它将会极快被磨平。</p><!-- <img src="https://ws4.sinaimg.cn/large/006tNc79gy1fmbhl8f0ojj30dw0gtwlm.jpg" style="zoom:50%" />--><p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fmbht2po7kj30kg0q01kx.jpg" style="zoom:30%"></p><p>A-齿冠（Crown），B-齿根（Root）：</p><ol><li><font color="red">珐琅质（Enamel）</font></li><li><font color="red">象牙质（Dentin）</font></li><li><font color="red">齿髓组织（Root Canal）</font></li><li>牙肉（Gum Tissue）</li><li>白垩质（Cementum）</li><li>颚骨（Jaw Bone）</li><li>微血管（Blood Supply）</li><li>神经（Nerve）</li></ol><p>人类牙齿的三部主要细胞组织，分别是：</p><ul><li><a href="https://www.wikiwand.com/zh-cn/%E7%90%BA%E7%91%AF%E8%B3%AA" target="_blank" rel="noopener">珐琅质</a>（又称牙釉质）－钙质和磷肥质构成的外表硬层，是牙齿最外层的组织，为哺乳动物体内最坚硬的组织；牙釉质内部并不具神经与血管，受损后不会再生；</li><li><a href="https://www.wikiwand.com/zh-cn/%E7%89%99%E6%9C%AC%E8%B3%AA" target="_blank" rel="noopener">象牙质</a>（又称牙本质）－牙齿的躯体，牙齿主要的身躯，是构成牙齿主体的微黄色组织，介于牙釉质与牙髓之间。和牙釉质不同的是，它终身都会继续不断地生长，因此当有蛀洞产生会自行长出新的牙本质修复；</li><li><a href="https://www.wikiwand.com/zh-cn/%E7%89%99%E9%AB%93" target="_blank" rel="noopener">牙髓</a>－牙齿核心，包含神经线和血管。</li></ul><h3 id="牙位表示法"><a href="#牙位表示法" class="headerlink" title="牙位表示法"></a>牙位表示法</h3><p>牙位表示法是牙医学中给每颗人类牙齿编号表示的方法。常见的有：</p><ol><li><a href="https://www.wikiwand.com/zh-hans/FDI%E7%89%99%E4%BD%8D%E8%A1%A8%E7%A4%BA%E6%B3%95" target="_blank" rel="noopener">FDI牙位表示法（Fédération Dentaire Internationale）</a>，又称数字标记法，为世界通用。每颗牙用2个阿拉伯数字记录。</li><li><a href="https://www.wikiwand.com/zh-hans/Palmer%E7%89%99%E4%BD%8D%E8%A1%A8%E7%A4%BA%E6%B3%95" target="_blank" rel="noopener">部位记录法</a>，又称Palmer牙位表示法，用象限符号和一个阿拉伯数字记录。（常见于西方）</li><li><a href="https://www.wikiwand.com/zh-hans/%E9%80%9A%E7%94%A8%E8%AE%B0%E5%BD%95%E6%B3%95_(%E7%89%99%E7%A7%91" target="_blank" rel="noopener">通用记录法（Universal numbering system）</a>)，牙医学中的通用记录法是一种牙位表示法，以右上颌-左上颌-左下颌-右下颌的顺序编号，恒牙1-32，乳牙1d-20d或者字母A-T。</li></ol><h2 id="拔牙"><a href="#拔牙" class="headerlink" title="拔牙"></a>拔牙</h2><h3 id="拔牙前的准备"><a href="#拔牙前的准备" class="headerlink" title="拔牙前的准备"></a>拔牙前的准备</h3><ul><li>挂号预约，掌握医院口腔科放号的时间以及预约方式；</li><li>心理准备；</li><li>食物准备（拔牙后的流食）</li><li>拔牙尽量早些去，早上是人血压最低的时刻，这样手术完流血量会比下午少很多，有利于伤口恢复。</li><li>冰敷准备，拔牙后可以冰敷，因为拔牙可能会造成肿胀，冰块可以收缩毛细血管，减轻肿胀程度。采取冷敷可以减少局部血液供应。</li><li>生理期，女性一定避开生理期，因为在生理期，女性体内血小板会变少，不利于血液的凝血功能，伤口出血量会变大，结痂恢复也会受到影响，所以一定要避开这段时期。</li></ul><h3 id="拔牙后的保养"><a href="#拔牙后的保养" class="headerlink" title="拔牙后的保养"></a>拔牙后的保养</h3><p>拔牙术后主要是<strong>预防拔牙创口感染，口服抗生素和保持口腔清洁</strong>，因为拔牙创口一旦感染，就会延迟伤口愈合，还会出现剧烈疼痛。</p><p>拔牙当天要禁食或只吃半流食，第二天吃软和易消化的食物，两天后恢复正常饮食，一周后患侧也可恢复咀嚼。<br>拔牙创口会通过自身的组织变化自然愈合。拔牙创口完全愈合好（包括新生牙槽骨形成）要2—3个月。</p><p>拔牙当天不漱口，是为了保护拔牙窝内血凝块不脱落（为日后伤口愈合打好基础和防止拔牙窝感染），第二天恢复漱口刷牙，是为了更好地保持口腔清洁。<br>拔牙当天不要洗澡，因为会加速血液循环，创口不宜愈合。</p><p><a href="https://www.zhihu.com/question/21011397" target="_blank" rel="noopener">拔牙之后能吃什么？</a></p><ul><li>冷，包括冷饮如酸奶，果汁，冰激凌，目的是<strong>使血管收缩利于止血</strong>，并且可以减轻水肿和疼痛。在吃饭的时候一定要保证饭菜温度，饭菜以温为主千万不要过热。过热的食物会导致血管扩张并且引发创口出血。</li><li>软，粥是个很好的选择，因为粗糙的食物会刺激到伤口。</li><li>清淡，拔牙会导致口腔内形成一个创口，吃东西主要是要注意不要吃太刺激的、太上火的食物，尽量吃清淡一点，不要吃太烫的食物。不要吃荤腥、粗糙的东西，因为肉制品、韭菜、芹菜、硬米饭等这些东西都很容易嵌塞在牙缝间，很容易刺激到伤口，不利于愈合，同时吃这些东西也会引起牙疼的，所以应该吃清淡、较软的的食物为好。</li></ul><p>拔牙后的营养搭配：</p><ol><li>拔牙当天，尽量不要吃，避免食物残渣残留在拔牙创口造成发炎，影响创口恢复；</li><li>拔牙后两三天内，适量的吃一些半流质饮食和软食，以清淡为主；注意保持口腔清洁；</li><li>拔牙三天后，多摄取一些高营养、高蛋白食物；</li></ol><p>咽喉部的疼痛感：拔完牙一开始会疼的地方是咽喉部，就是拔牙的那一边的咽部，就像上火扁桃体发炎什么的疼，咽口水的时候会感觉到，所以会影响吃饭，不过可以忍受。</p><p>为什么不能漱口？（凝血块）<br>拔牙后24小时内不要刷牙漱口，因为拔牙后创口的止血和愈合恢复，都是依靠牙齿窝沟里面的凝血块，不让漱口是怕把凝血块一起吐了出来，使原本已经止血的创伤处再次出血。如果拔牙窝血块没有凝固好，那就很可能会产生干槽症。因此，从拔智齿开始，到拔完都不能漱口，还要尽量减少吐口水次数，也不能刷牙，等到24小时之后，创口部位有了一定恢复，才可以漱口和刷牙。禁止使用吸管，也是为了避免吮吸动作导致拔牙创口出血。</p><p>止血棉球：<br>止血的棉球一定要在一个小时之内吐掉，有些人觉得止血长久一点才好，其实是不对的，棉球在伤口里停留时间太长会反吸伤口内的血液组织液，反而对伤口止血不利。吐掉棉球后上牙洞里会流血，毕竟没有缝针，流血是难免的，咽下去就好。当然不要刻意去吸伤口和舔伤口，这是大忌。</p><h2 id="刷牙-tips"><a href="#刷牙-tips" class="headerlink" title="刷牙 tips"></a>刷牙 tips</h2><ul><li>巴斯刷牙法（45度），还可以避免横向刷牙带来的楔形缺损；</li><li>牙菌斑、牙结石、洗牙</li><li>温水刷牙</li><li>电动牙刷为主（声波式、机械式），漱口水为辅；</li><li>刷牙时间：三餐后；漱口水不能代替刷牙、早餐过后再刷牙、漱口频繁降低牙膏护齿成分效果；</li><li>酸性食物，热水漱口、及时刷牙、牙釉质再硬化；</li><li>牙刷使用寿命，牙刷与马桶圈的卫生程度对比；</li><li>牙线的科学使用；（牙线、牙线棒、水牙线）</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://www.artedentalclinic.com/wp-content/uploads/2017/03/dientes.jpg&quot; width=&quot;540&quot; height=&quot;540&quot; alt=&quot;Teeth&quot;&gt;&lt;br&gt;嗡 嘛 智 牟 耶 萨 列 德&lt;br&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Biology" scheme="http://seanxp.com/categories/Biology/"/>
    
    
      <category term="History" scheme="http://seanxp.com/tags/History/"/>
    
      <category term="Biology" scheme="http://seanxp.com/tags/Biology/"/>
    
  </entry>
  
  <entry>
    <title>茶#人在草木间</title>
    <link href="http://seanxp.com/2017/06/Tea-Story-of-the-Leaf/"/>
    <id>http://seanxp.com/2017/06/Tea-Story-of-the-Leaf/</id>
    <published>2017-06-14T04:56:19.000Z</published>
    <updated>2018-03-11T02:29:34.401Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><br><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fgkndhf05fj30go0b4768.jpg" width="600" height="400" alt="Tea"><br><blockquote class="blockquote-center"><br>一碗喉吻润，二碗破孤闷。<br>三碗搜枯肠，惟有文字五千卷。<br>四碗发轻汗，平生不平事，尽向毛孔散。<br>五碗肌骨清，六碗通仙灵。<br>七碗吃不得也，唯觉两腋习习清风生。<br>蓬莱山，在何处？玉川子乘此清风欲归去。<br></blockquote><br></div><a id="more"></a><h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>我没有喝茶的习惯，也不懂茶，不知诸如绿茶、红茶、乌龙茶有什么区别。<br>小时候爱好的是糖水汽水果汁牛奶，逢年过节往往也是大人喝酒小孩喝饮料，茶水往往只是接风、聊家常时稍微喝上一喝，没有什么讲究，也品不出什么味道来。<br>喝茶对我而言，真是应了那句话：「从来不喝茶，喝水如饮牛」。<br>长大后也开始“贪生怕死”起来，不再喝那些糖水汽水之类的饮品，生活上也有了诸多忌口。<br>最近恰巧看到几篇关于茶的文章，又看到一部关于茶的纪录片，勾起了我对茶的好奇和研究欲望，「什么是茶，茶真有那么好喝？」</p><ul><li><a href="https://zhuanlan.zhihu.com/p/25757897" target="_blank" rel="noopener">我们在学校里学了七年的茶学，现在来告诉你学茶的正确步骤</a></li><li><a href="https://movie.douban.com/subject/25769356/" target="_blank" rel="noopener">《茶，一片树叶的故事》</a></li></ul><h2 id="什么是茶？"><a href="#什么是茶？" class="headerlink" title="什么是茶？"></a>什么是茶？</h2><p><a href="https://www.wikiwand.com/zh-cn/%E8%8C%B6" target="_blank" rel="noopener">茶</a>，由茶树的叶（茶叶）加工制成的食物，多烹成茶汤饮用，也可以加入食物中调味，又有药用。现代的茶主要按发酵程度分为六类，绿茶、白茶、黄茶、青茶、红茶、黑茶。<br>普遍认为茶树起源于中国大陆的云南、四川一带。唐代开始茶在中国兴盛，并传播到周边地区，如日本等地。十七世纪，茶被带进欧洲，随后传遍世界。各个民族和地区之间发展出了不同的茶文化。</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/TeaprocessingZh.svg/1280px-TeaprocessingZh.svg.png?1497418310329" alt="制作过程"></p><h3 id="绿茶-Green-Tea"><a href="#绿茶-Green-Tea" class="headerlink" title="绿茶 Green Tea"></a><a href="https://www.wikiwand.com/zh-cn/%E7%B6%A0%E8%8C%B6" target="_blank" rel="noopener">绿茶 Green Tea</a></h3><p>绿茶是茶叶的一种。经过杀青、揉捻、干燥，大部分白毫脱落，浸泡后为绿汤绿茶。绿茶通过杀青工艺的不同可分为四种：炒青茶，蒸青茶，烘青茶，晒青茶。其中炒青是当前中国绿茶制作工艺中最广泛使用的一种，即将茶叶鲜叶在120摄氏度左右的铁锅中翻炒，使其水分散失，使其变得绵软，以便做形。传统工艺为徒手翻炒，来到现代为机械翻炒。绿茶没有焙火工序，所以可以称为生茶。</p><p>绿茶是所有茶中工艺环节最少的，只有杀青、成形、干燥三个环节，没有经过发酵，绿茶的干茶是绿色的，茶汤是黄绿色的，叶底也是绿的。</p><ul><li><a href="https://www.wikiwand.com/zh-cn/%E8%A5%BF%E6%B9%96%E9%BE%8D%E4%BA%95" target="_blank" rel="noopener">西湖龙井</a>，浙江省杭州西湖周边产，古代作为贡茶。</li><li><a href="https://www.wikiwand.com/zh-cn/%E9%BB%84%E5%B1%B1%E6%AF%9B%E5%B3%B0" target="_blank" rel="noopener">黄山毛峰</a></li><li><a href="https://www.wikiwand.com/zh-cn/%E7%A2%A7%E8%9E%BA%E6%98%A5" target="_blank" rel="noopener">碧螺春</a></li><li><a href="https://www.wikiwand.com/zh-cn/%E9%BB%83%E5%B1%B1%E7%B6%A0%E7%89%A1%E4%B8%B9" target="_blank" rel="noopener">黄山绿牡丹</a></li></ul><p>中国人对茶的起名很有讲究，诸如清明前采摘的“明前茶”（发芽时采摘，“莲心”或“银针”），谷雨前采摘的“雨前茶”（茶叶展开是为“旗枪”），立夏前采摘的“三春茶”（两叶展开是为“雀舌”），立夏后采摘的“四春茶”（叶片已厚是为“梗片”）等等。如不是喜茶、好茶、爱茶之人，断然记不得如此多的名字。</p><h3 id="白茶-White-Tea"><a href="#白茶-White-Tea" class="headerlink" title="白茶 White Tea"></a><a href="https://www.wikiwand.com/zh-cn/%E7%99%BD%E8%8C%B6" target="_blank" rel="noopener">白茶 White Tea</a></h3><p>白茶是指一种采摘后，不经过杀青或揉捻，只经过晒或文火干燥后加工的茶，保留自然原味。白茶白毫显露。比较出名的出自福建东北部地区，有白毫银针，白牡丹，贡眉等。白茶具有保健功效，已被人们普遍认可。研究表明白茶比绿茶更为具有抗病毒和抗细菌功效也具有更多的儿茶素（具有抗菌、除臭、防蛀等多种功效）、没食子酸、可可碱以及咖啡因。</p><p>白茶的特点是既不促进发酵也不抑制发酵，既不揉也不炒。但是相对绿茶，白茶的氧化程度稍微深一些，因为它经历了长达2天的自然氧化时间。制作白茶通常选用叶背绒毛比较多的品种，所以成堆的白茶远观是白色的。茶叶绒毛中的氨基酸含量比较高，再加上白茶长时间萎凋的工艺也有助于积累氨基酸。所以高等级的白茶滋味鲜爽。白茶汤色是很浅的黄色调、甚至无色，叶底没有绿茶那么绿，呈灰绿色。白茶工艺的感觉是柔和的、清淡的。</p><ul><li><a href="https://www.wikiwand.com/zh-cn/%E7%99%BD%E6%AF%AB%E9%93%B6%E9%92%88" target="_blank" rel="noopener">白毫银针</a> 产于中国福建省东北部的福鼎市，属于白茶，是白茶中的珍品。该茶色白如银、形状如针。</li></ul><h3 id="黄茶-Yellow-Tea"><a href="#黄茶-Yellow-Tea" class="headerlink" title="黄茶 Yellow Tea"></a><a href="https://www.wikiwand.com/zh-cn/%E9%BB%84%E8%8C%B6" target="_blank" rel="noopener">黄茶 Yellow Tea</a></h3><p>黄茶是一种与绿茶的加工工艺略有不同的茶，多了一道焖堆渥黄工序（轻微发酵）。焖堆后，叶已变黄，再经干燥制成，黄茶浸泡后是黄汤黄叶，名茶如湖南的<a href="https://www.wikiwand.com/zh-cn/%E5%90%9B%E5%B1%B1%E9%93%B6%E9%92%88" target="_blank" rel="noopener">君山银针</a>等，浸泡后每叶都在杯中立着，“如刀山剑硭”。黄茶可再细分为黄芽茶、黄小茶和黄大茶三类。</p><p><a href="https://www.wikiwand.com/zh-hans/%E8%92%99%E9%A1%B6%E9%BB%84%E8%8A%BD" target="_blank" rel="noopener">蒙顶黄芽</a>，是芽形黄茶之一，产于四川省雅安市蒙顶山。古时为贡品供历代皇帝享用，全国十大名茶之一，为黄茶之极品。</p><h3 id="青茶-Oolong-Tea"><a href="#青茶-Oolong-Tea" class="headerlink" title="青茶 Oolong Tea"></a><a href="https://www.wikiwand.com/zh-cn/%E9%9D%92%E8%8C%B6" target="_blank" rel="noopener">青茶 Oolong Tea</a></h3><p>青茶，中国茶的一种，其发酵程度介于绿茶与红茶之间（半发酵程度），茶水呈现黄褐色，以香气著称。青茶中以乌龙茶最为知名，因此也被称为<a href="https://www.wikiwand.com/zh-cn/%E4%B9%8C%E9%BE%99%E8%8C%B6" target="_blank" rel="noopener">乌龙茶</a>。此外，铁观音也属于青茶的一种，只差在发酵程度不一样。<br>乌龙茶是经过部分发酵，绿叶红边，既有绿茶的鲜香浓郁，又有红茶的甜醇。因此，在中国大陆，乌龙茶等同于青茶，青茶即是指乌龙茶，并被视为青茶的商品名称。<br>现在所说的乌龙茶则是安溪人仿照武夷山茶的制法，改进工艺制作出来的一种茶。</p><ul><li><a href="https://www.wikiwand.com/zh-cn/%E6%AD%A6%E5%A4%B7%E5%B2%A9%E8%8C%B6" target="_blank" rel="noopener">武夷岩茶</a>产于福建省北部的武夷山地区，是中国乌龙茶中之极品。中国十大名茶之一。武夷四大岩茶分别为大红袍、铁罗汉、水金龟及白鸡冠。大红袍原木只剩6株，每年产量只有少于1公斤的量，为世界上售价最高的茶。市售的大红袍都是接枝后的产茶。在青茶中较偏浓红茶色，具有丰厚浓郁的香甜气味，被称为是岩茶中的岩茶。</li><li><a href="https://www.wikiwand.com/zh-cn/%E9%90%B5%E8%A7%80%E9%9F%B3" target="_blank" rel="noopener">安溪铁观音</a>产于福建省南部的安溪县，由被称为铁观音种的茶树制成，又因外观形状如铁观音像般的浑厚美丽，故以之命名。安溪是铁观音茶树的发源地。铁观音起源于安溪西坪，有300多年的种植历史。优质的铁观音具有香气馥郁细长，滋味鲜爽，口感醇厚回甘的特点。</li><li><a href="https://www.wikiwand.com/zh-cn/%E5%8F%B0%E7%81%A3%E7%83%8F%E9%BE%8D%E8%8C%B6" target="_blank" rel="noopener">台湾乌龙茶</a></li></ul><h3 id="红茶-Black-Tea"><a href="#红茶-Black-Tea" class="headerlink" title="红茶 Black Tea"></a><a href="https://www.wikiwand.com/zh-cn/%E7%B4%85%E8%8C%B6" target="_blank" rel="noopener">红茶 Black Tea</a></h3><p>红茶是一种全发酵茶，是茶文化当中的主要茶品（占据世界 80% 的茶叶市场）。发酵是指茶叶在空气中氧化，发酵作用使得茶叶中的茶多酚和鞣质酸减少，产生了茶黄素、茶红素等新的成分和醇类、醛类、酮类、酯类等芳香物质。因此，红茶的茶叶呈黑色，或黑色中参杂着嫩芽的橙黄色；茶汤呈深红色；香气扑鼻；由于少了苦涩味，因而味道更香甜、醇厚。在中国，红茶可分为小种红茶、工夫红茶、红碎茶。</p><p>红茶与绿茶不同，绿茶会随着时间而失去味道，但红茶能够保存相当长的时间而味道不变，因此红茶能适应长途运输。这也许是红茶传到西方的重要关键原因之一。红茶是西方喜爱的茶，几百年的饮茶史使得西方发展出了不同于东方的茶文化。而最早红茶起源自1675年的英国，在当时红茶被称做”治病的万能药”。</p><p>小种红茶当中最知名的是正山小种，也是红茶的鼻祖，其诞生历史不过三四百年（清代初年），其诞生也是一个意外（本是制作绿茶，因未能及时处理茶青而发酵而制成了红茶），却成就了西方的红茶文化。<br>之所以红茶英文是「Black Tea」，是由于全发酵后的茶叶呈黑色而得以命名，而中国普遍以泡茶后的茶汤颜色命名，红茶茶叶虽黑，泡出来的茶汤却为深红色，故名红茶。与红茶相比，黑茶茶叶不仅为深黑色，泡出的茶汤也是黑褐色且浑浊。</p><h3 id="黑茶-Dark-Fermented-Tea"><a href="#黑茶-Dark-Fermented-Tea" class="headerlink" title="黑茶 Dark/Fermented Tea"></a><a href="https://www.wikiwand.com/zh-cn/%E9%BB%91%E8%8C%B6" target="_blank" rel="noopener">黑茶 Dark/Fermented Tea</a></h3><p>黑茶，属于后发酵茶（发酵时间长），陈放茶叶数个月或数年，让其中的麹菌发酵后制成，泡出的茶汤颜色呈黑褐色且混浊，并因此得名。生产历史非常悠久，已有四百年历史，最早的黑茶是由毛茶阿萨姆而成。中国的黑茶以云南最为出名。而云南普洱茶的前身就是阿萨姆所谓黑茶。</p><p>黑茶，在西藏被成为甘露之海，被藏民饮用以分解油腻并补充维生素。茶，在很多地区都被作为维生素的摄入来源，茶叶中含有多种维生素，其中维生素C的含量最多（由于维生素C非常容易氧化，所以氧化度较高的“乌龙茶”及“红茶”中所含的维生素C并不太多。春茶的维生素含量最为丰富），此外还有维生素A原、维生素B1、维生素B2。茶叶中的维生素A原即胡萝卜素的含量也比一般蔬菜都高。由于茶叶中含有多种维生素，而且维生素具有易溶于水的性质，所以说通过饮茶的方式来摄取维生素C是再适合不过的了。在正常冲泡情况下其浸出率可达80％左右。适量饮茶对补充人体一定量的某些维生素是大有裨益的。</p><h2 id="一片树叶的故事"><a href="#一片树叶的故事" class="headerlink" title="一片树叶的故事"></a>一片树叶的故事</h2><p>《<a href="https://movie.douban.com/subject/25769356/" target="_blank" rel="noopener">茶，一片树叶的故事</a>》是2013年出版的关于茶的纪录片，一共六集，记录不同国家地区的人民的茶文化。</p><h3 id="第一集：土地与手掌的温度"><a href="#第一集：土地与手掌的温度" class="headerlink" title="第一集：土地与手掌的温度"></a>第一集：土地与手掌的温度</h3><p>景迈山是中国六大茶山之一，其千年古茶的面积堪称茶山之最。<br>普洱茶属山茶科茶系树本，普洱茶以云南省内云南大叶种（普洱茶种）晒青毛茶为原料，经过发酵加工成的散茶和紧压茶（饼茶、沱茶、砖茶、方茶、紧茶、金瓜）。在制作上，分为普洱散茶和普洱紧茶两大类。普洱散茶，传统品类为毛尖、粗叶，今已发展为普洱绿茶、普洱青茶、普洱红茶、普洱黑茶、普洱黄茶、普洱白茶6个品类。</p><p>本集描述了布朗族人是如何制作景迈山古茶园云南普洱茶以及布朗族欢度茶祖节。<br>布朗族是云南最古老的民族之一，主要从事农业生产，善种植茶树，也很喜欢饮茶，是著名的普洱茶的产地。<br>茶祖，指的是茶的祖先。世界茶文化在中国，中国茶的祖先，神农也（“茶之为饮，发乎神农氏。”——《茶经》）。在云南，孔明（老人托梦，以茶祛病，种茶成林）被视为普洱茶茶祖。在蒙顶山，第一个种茶的吴理真被视为茶祖。在日本，荣西禅师被尊为茶祖。布朗族于每年四月举行一次隆重的茶祖节祭奠布朗族的祖先帕哎冷。（茶祖真的是多…）</p><p><a href="https://www.wikiwand.com/zh-hans/%E9%BE%99%E4%BA%95%E8%8C%B6" target="_blank" rel="noopener">龙井茶</a>得名于龙井（龙井村、龙井泉、龙井茶），龙井位于西湖之西翁家山的西北麓。是中国十大名茶之一，属于绿茶。现在主要产于浙江省中部一带，分为西湖、钱塘、越州三个产区。<br>龙井，属于不发酵绿茶，西湖龙井茶叶为一芽一叶或二叶，叶扁形且细，宽度条形整齐，颜色为绿、黄两色浑然天成。</p><p>中国人喝茶的历史悠久，西汉时期已有书面记载，唐代开始兴盛并传播到日本等地区。喝茶有茶道，倒茶也有讲究，如蒙顶山“禅茶”（寺院僧人种植、采制、饮用的茶，用于供佛、待客、自饮、结缘赠送等）中的「龙行十八式」，听起来是不是特别酷炫？<br><a href="http://baike.baidu.com/item/%E9%BE%99%E8%A1%8C%E5%8D%81%E5%85%AB%E5%BC%8F" target="_blank" rel="noopener">“龙行十八式”</a>茶技融传统茶道、武术、舞蹈、禅学、易理于一炉，充满玄机妙理。掺茶师手持嘴长一米多的长嘴铜壶，翻转腾挪，提壶把盏，准确将水注入杯盏中。每一式均模仿龙的动作，式式龙行云动，招招景驰浪奔，令人目不暇接，心动神驰。</p><p>西汉公元前52年，吴理真在四川蒙顶山种下七株茶树开创了世界上人工种植茶叶的先河，被认为是中国乃至世界有明确文字记载最早的种茶人，被称为蒙顶山茶祖、茶道大师。吴理真在蒙顶山脱发修行，亦佛亦茶，首创“佛茶一家”，被尊称为甘露禅师。</p><p>福建福鼎太姥山，还有寺庙的和尚下山远行为白茶古树去除地衣杂虫，采取茶叶制作白茶。虽然白茶的制作工艺很少，但是仅仅烘青这一项，对日照的要求就很高，光照太强会晒糊，光照太弱又无法除青。「眼观其色，手摸其干，烟消烘焙，方得银针」。太姥山顶晒白茶，和尚或坐或立或眠，于制茶途中修行禅宗。</p><p>云南景迈山古茶园普洱茶、西湖龙井绿茶、四川雅安皇茶园蒙顶黄芽、武夷山小种红茶、四川雅安黑茶、武夷岩茶乌龙茶、福建福鼎太姥山白茶，如此多的茶，制茶工艺各有不同（都在朝着现代机械工艺发展，传统人工制茶工艺越来越少），不同地区对茶的爱好也各有不同，却都映射出人对茶的爱好以及茶对人类的馈赠。</p><h3 id="第二集-路的尽头"><a href="#第二集-路的尽头" class="headerlink" title="第二集 路的尽头"></a>第二集 路的尽头</h3><p>这一集讲述了不一样的茶的故事，寻找昆仑雪菊的新疆汉子，歌颂广东凉茶的说唱乐队，种制古茶的云南人，行走在茶马古道的茶背子们，套马饮奶茶的蒙古青年，山中采茶制造虫茶的赤水农民，以及西藏酥油茶。<br>这些非茶之茶，被人们以茶的方式浸泡并饮用，融合自然的力量，给予人们生命的延续。</p><p>新疆昆仑山雪菊，生长环境极其恶劣，终年积雪，人烟绝迹，且周期慢，花期短，采摘非常艰难，产量极为稀少，拥有非常显著的药用及保健价值。近年来作为茶饮而被大面积种植。<br>维吾尔族汉子为了补帖家用想要种植雪菊，由于种子的昂贵决定放牧时节于山中寻找野生雪菊种子，其路途之遥远，行走之艰辛。</p><p>代用茶，非茶之茶，茶外茶，是指选用可食用植物的叶、花、果（实）、根茎等，采用类似茶叶的饮用方式（通过泡、煮等方式来饮用）的一类产品的俗称。<br>广东<a href="https://www.wikiwand.com/zh-hans/%E6%B6%BC%E8%8C%B6" target="_blank" rel="noopener">凉茶</a>，是中国传统凉茶文化的代表，取材自多种药草组合而成的茶水。因为广东地处之岭南，天气炎热，多雨地湿，自古多有瘴气。因此民间流行以药性寒凉，消暑解热的中草药，熬水来喝，称为各式各样的“凉茶”。凉茶除了有各种治病及保健的功效，还能清热去湿，对中国南方人很有帮助，所以凉茶主要于中国南方流传。<br>传统上，凉茶要在全凉掉以前喝下。一般凉茶都是接近黑色，部分味道苦中带甘。在广州、香港、澳门等地，专门卖凉茶的店铺随处可见。</p><p>云南西双版纳南糯山半坡老寨喜宴上的敬茶礼节，茶嫁妆，都显示了茶对当地哈尼族不可或缺的重要性。茶是半坡老寨车某的谋生之路，车某种植古茶制茶以维持一家五口的生计，家里还有一个患脑瘫的女儿，令人惋惜。车某参加斗茶大赛以求更高的知名度来提高茶叶价格，可惜现实生活没有电视剧那么一波三折或是顺风顺水，车某最终以一分差距拿到第二名，甚是遗憾，但是看到比赛过后车某一家五口在家安静地吃着晚餐，追求简单的生活，简单、知足地生活着，照顾着先天不足的女儿，追求着制茶技艺，这份情怀是很少人能够拥有的。</p><p>茶马古道是指存在于中国西南地区，以马帮为主要交通工具的民间国际商贸通道，是中国西南民族经济文化交流的走廊。茶马古道分川藏线、滇藏线两路。<br>川藏茶马古道是陕康藏茶马古道的一部分，东起雅州边茶产地雅安，经打箭炉（今康定），西至西藏拉萨。从古至今一直有一种职业叫茶背子（背夫），从十几岁开始一直背茶到老年，农忙时种地，农闲时背茶，一包茶二十斤，茶背子往往都是背十几包，还是行走在偏僻危险的山路上，其困乏劳累难以想象，甚至发明出“汗刮子”这样的器物。</p><p>蒙古族依靠茶来摄取维生素等营养元素，填补其饮奶吃肉的营养结构，因此混合奶与茶，得到奶茶。<a href="https://www.wikiwand.com/zh-hans/%E5%A5%B6%E8%8C%B6" target="_blank" rel="noopener">奶茶</a>是一种将茶和奶（或奶精、冲泡奶粉）混合的饮料，可加以调理饮用，世界各地都可见其踪影，而此饮料的起源和制作方式则因各地特色有所不同。蒙古族的奶茶以砖茶、牛奶或马奶、和以黄油煮成，加盐调理使味道偏咸。</p><p>虫茶是我国特有的林业资源昆虫产品，是传统出口的特种茶，虫茶又叫“茶精”，主要产在贵州、湖南、广西部分地区，三地各有特点，贵州黔东南虫茶产量第一，质量最优。其中赤水虫茶最为著名。赤水虫茶为茶中极品，市场罕见，价格昂贵，仅产于贵州赤水各乡镇。<br>贵轴赤水人上山采摘野生白茶嫩叶加工发酵，招引一种名叫“化香夜蛾”的昆虫繁殖幼虫，幼虫食酵叶后排泄出一粒粒比油菜籽小的虫屎，然后收集虫屎晾晒而成虫茶。虫茶并不是真正的茶，它实际上是一种名为弓须亥夜蛾（化香夜蛾）的粪便。<br>说到虫茶，就不得不提猫屎咖啡。和虫茶有异曲同工之妙，都是借助其他生物处理原始的茶或可可豆而进一步加工的饮品。<a href="https://www.wikiwand.com/zh-hans/%E7%8C%AB%E5%B1%8E%E5%92%96%E5%95%A1" target="_blank" rel="noopener">猫屎咖啡（civet coffee）</a>，是由印尼椰子狸（一种麝香猫）的粪便作为原料所生产，故叫“猫屎咖啡”。咖啡豆经过椰子狸食用并在其胃里完成发酵后，破坏蛋白质，产生短肽和更多的自由氨基酸，咖啡的苦涩味会降低（最大的效果是去酸去苦的，喝起来很有咖啡香），再排出来的粪便便是主要原料，由于咖啡豆不能被消化，会被排泄出来，经过清洗、烘培后就成了麝香猫咖啡。</p><p>蒙古人一般喝奶茶，西藏牦牛产奶量不大，普遍用酥油茶招待客人。<br>酥油茶（Butter Tea）是将砖茶用水煮好，加入酥油（牦牛的黄油）和盐，放到一个细长的木桶中，用一根搅棒用力搅打，使其成为乳浊液。另一种方式是将酥油和茶放到一个皮袋中，扎紧袋口，用木棒用力敲打。所以配置酥油茶叫“打”酥油茶。是女主人招待客人的一项非常费力的工作，现在也可以用电动搅拌机配置。藏族人民视茶为神之物，从历代“赞普”至寺庙喇嘛，从土司到普通百姓，因其食物结构中，乳肉类占很大比重，而蔬菜、水果较少，故藏民以茶佐食，餐餐必不可少。流传着“宁可三日无粮，不可一日无茶”的说法。在西藏，在每个藏胞家庭，随时随地都可以见到酥油。酥油是每个藏族人每日不可缺少的食品。藏族家庭里一天至少要饮三次茶，有的甚至多达十几次。<br>纪录片中的一位藏族妇女卓玛的拉萨朝拜之旅，每日朝拜七八公里，五步一拜、十步一跪，前往两百公里外的拉萨，信仰是其精神来源，而酥油茶是其能量来源，伴随朝圣者去寻找心灵的净土。</p><h3 id="第三集-烧水煮茶的事"><a href="#第三集-烧水煮茶的事" class="headerlink" title="第三集 烧水煮茶的事"></a>第三集 烧水煮茶的事</h3><p><a href="https://www.wikiwand.com/zh-hans/%E6%97%A5%E6%9C%AC%E8%8C%B6%E9%81%93" target="_blank" rel="noopener">日本茶道</a>是日本传统艺道，是将生活消闲活动提升至精神意识层次，成为一种独特传统礼仪，是宣扬文化之媒介。日本茶道是为客人奉茶之事，源自中国。是一种茶叙的仪式，日本人称之为“茶汤”（茶湯、茶の湯），而吃茶的叙会则称为“茶会”（CHAKAI）。往中国留学的僧侣，于唐朝把佛教和茶带回东瀛。日本最初是僧侣用茶来集中自己的思想，后来才成为分享茶食的仪式。现在的日本茶道分为「抹茶道」与「煎茶道」两种，但茶道一词所指的是较早发展出来的抹茶道。</p><p>提到日本茶道，就不得不提日本「天下三宗匠」之一的千利休，千利休是日本战国时代安土桃山时代著名的茶道宗师，日本人称茶圣。千利休继承历代茶道精神，创立了日本正宗茶道。我是在看日本大河剧《真田丸》与《秀吉》时了解到日本茶道以及千利休的。<br>丰臣秀吉虽是贫民出身，却十分喜爱茶道（浅井茶茶？？？），甚至建造「黄金茶室」用于饮茶（茶室是为了茶道所建的建筑。大小以四叠（塌塌米）半为标准，大于四叠半称做“广间”，小于四叠半者称作“小间”），日剧中经常看到丰臣秀吉与千利休饮茶的桥段，喝的是日本抹茶。</p><p>抹茶的直饮一般是按照中国原始的斗茶的方式饮用，有一些独特的方法，后来在日本被发展成日本茶道，形成更加严格复杂的规则。</p><ol><li>温碗，先把茶碗连同茶筅一起用开水烫过；</li><li>调膏，把抹茶调成浆糊状；</li><li>点茶，用茶筅按照W的轨迹贴着碗底前后刷搅，使之拌入大量的空气，形成浓厚的泡沫。<a href="https://www.wikiwand.com/zh-hans/%E9%BB%9E%E8%8C%B6" target="_blank" rel="noopener">点茶</a>，后人称点茶法，后衍生为日本之抹茶道，是东亚食茶方式之一种。抹茶是用天然石磨碾磨成微粉状的、覆盖的、蒸青的绿茶。</li></ol><p><a href="https://www.wikiwand.com/zh-hans/%E9%BB%9E%E8%8C%B6" target="_blank" rel="noopener">点茶</a>在中国流行于宋代，为宋代生活中的四艺之一，与花艺、鉴古、品香合称为“四般闲事”。后传入日本并延续至今，是茶道的主要茶艺。可惜点茶在明朝及其以后逐渐式微，反到是在日本一直流行到今天，成为日本茶道不可或缺的一部分。初次在日剧中看到点茶，还以为千利休是在“刷碗”，结果看到秀吉闷头喝完“刷碗水”，甚是不解，至今才了解是点茶，实在惭愧。</p><p>千利秀以茶道为谋利之道，虽然对日本茶道贡献巨大，但是其所作所为，很难称的上是和敬清寂。“和敬清寂”乃茶道之基本精神：“和”是指人与大自然之调和；“敬”是指由主客之间互相尊敬开始，以至对任何事物都抱有谦敬之心；“清”是指心无杂念，令心意纯朴清静，达致“禅”的意境；“寂”更是与大自然融合为一，无始无终之宁静感觉。</p><p><a href="http://baike.baidu.com/item/%E5%9C%9F%E5%AE%B6%E6%B2%B9%E8%8C%B6%E6%B1%A4" target="_blank" rel="noopener">土家油茶汤</a>，与藏族酥油茶、蒙古族奶茶，被誉为中国三大名饮。土家油茶汤是湖北省恩施土家族苗族自治州土家族具有代表性的文化现象之一，土家语称“色斯泽沙”，堪称中国茶文化一绝，源远流长。土人以油炸黄豆，包谷，米花，绿焦诸物，取水和油，煮茶叶和汤泡之，饷客致敬，名曰：‘油茶’。<br>土家油茶汤是土家传统四道茶（白鹤茶、泡米茶、油茶汤、鸡蛋茶）中制作最考究，代表礼遇最高的一道。用该汤待客是千百年来土家人沿袭下来的最高待客礼遇。</p><p>蒙古族奶茶还能理解，平常偶尔也喝，不过看到藏族酥油茶喝土家油茶汤的制作过程，真的是有种「打开新世界大门」的感觉，就像一个只吃甜粽子的北方人来到南方吃到第一口咸粽子，中国人对茶的开发程度令人叹为观止。</p><h3 id="第四集-他乡故乡"><a href="#第四集-他乡故乡" class="headerlink" title="第四集 他乡故乡"></a>第四集 他乡故乡</h3><p><a href="https://www.wikiwand.com/zh-hans/%E6%8B%89%E8%8C%B6" target="_blank" rel="noopener">拉茶</a>为奶茶的一种，拉茶起源自移民至马来西亚的印度人。拉茶是用两个杯子远距离倒来倒去，看似拉来拉去，故名“拉茶”，“拉”得越长，泡沫越多，味道就会好。</p><p>同样是倒茶的技巧，中国人研究出长嘴铜壶和龙行十八式这样的技艺，而马来西亚人则研究出拉茶，茶每到世界的一个地方驻足，就会以强大的生命力，与当地人文风俗相结合。其中拉茶的手法更是有些类似鸡尾酒的调制。</p><h3 id="第五集"><a href="#第五集" class="headerlink" title="第五集"></a>第五集</h3><h3 id="第六集"><a href="#第六集" class="headerlink" title="第六集"></a>第六集</h3><p>后面三集都是不同国家不同地区的茶叶发源以及故事，因为没有涉猎这些国家地区，无法仅从视频感受到这些茶文化，因此暂且作罢，以后有缘再深入研究吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tKfTcgy1fgkndhf05fj30go0b4768.jpg&quot; width=&quot;600&quot; height=&quot;400&quot; alt=&quot;Tea&quot;&gt;&lt;br&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;一碗喉吻润，二碗破孤闷。&lt;br&gt;三碗搜枯肠，惟有文字五千卷。&lt;br&gt;四碗发轻汗，平生不平事，尽向毛孔散。&lt;br&gt;五碗肌骨清，六碗通仙灵。&lt;br&gt;七碗吃不得也，唯觉两腋习习清风生。&lt;br&gt;蓬莱山，在何处？玉川子乘此清风欲归去。&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="Learning" scheme="http://seanxp.com/tags/Learning/"/>
    
      <category term="Life" scheme="http://seanxp.com/tags/Life/"/>
    
      <category term="Documentary" scheme="http://seanxp.com/tags/Documentary/"/>
    
      <category term="Chinese" scheme="http://seanxp.com/tags/Chinese/"/>
    
  </entry>
  
  <entry>
    <title>Music for the Degree of Master in Engineering</title>
    <link href="http://seanxp.com/2017/05/the-Music-of-Master/"/>
    <id>http://seanxp.com/2017/05/the-Music-of-Master/</id>
    <published>2017-05-19T22:58:22.000Z</published>
    <updated>2018-03-11T02:29:34.401Z</updated>
    
    <content type="html"><![CDATA[<div style="position: relative;"><div>国内图书分类号：J642</div><div style="position: absolute; right: 0px; top: 0px;">学校代码：1OO45</div></div><div style="position: relative;"><div>国际图书分类号：784.4</div><div style="position: absolute; right: 0px; top: 0px;">密级：绝密</div></div><p></p><h1 align="center">工学硕士学位音乐</h1><p></p><h2 align="center">披星戴月写毕设</h2><a id="more"></a><h1 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h1><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=30903117&auto=1&height=66"></iframe><h1 id="主要研究内容"><a href="#主要研究内容" class="headerlink" title="主要研究内容"></a>主要研究内容</h1><p>歌曲名:披星戴月写毕设<br>歌手:马斯特</p><blockquote><p>为你我用了半年的时间<br>披星戴月的写毕设<br>为了这次毕业<br>我连答辩时的注释都曾反复练习<br>仿真从来没能将我的思路<br>表达千万分之一<br>为了这个波形<br>我在夜里想了又想不肯睡去<br>误差它总是慢慢的累积<br>在系统中无法抹去<br>为了能够毕业<br>我在最绝望的时候都忍着不抄袭<br>陌生的公式啊<br>熟悉的绪论里<br>也曾彼此抄袭 也曾想搞创新<br>不管将会面对什么样的评委<br>在知网查重里望着高比率<br>我竟悲伤得不能自已<br>多盼能送点好礼直到顺利答毕<br>六月不要延期</p></blockquote><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>这首歌献给此刻依然在论文一线奋斗的毕业学子并警示即将毕业的师弟师妹们</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1]李宗盛. 漂洋过海来看你 [M]. 理性与感性作品音乐会, 1991,8(16):400-404<br>[2]周深. 漂洋过海来看你 [M]. 漂洋过海来看你, 2014,9(5):300-303</p>]]></content>
    
    <summary type="html">
    
      &lt;div style=&quot;position: relative;&quot;&gt;&lt;div&gt;国内图书分类号：J642&lt;/div&gt;&lt;div style=&quot;position: absolute; right: 0px; top: 0px;&quot;&gt;学校代码：1OO45&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;position: relative;&quot;&gt;&lt;div&gt;国际图书分类号：784.4&lt;/div&gt;&lt;div style=&quot;position: absolute; right: 0px; top: 0px;&quot;&gt;密级：绝密&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;&lt;h1 align=&quot;center&quot;&gt;工学硕士学位音乐&lt;/h1&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 align=&quot;center&quot;&gt;披星戴月写毕设&lt;/h2&gt;
    
    </summary>
    
      <category term="Music" scheme="http://seanxp.com/categories/Music/"/>
    
    
      <category term="Student" scheme="http://seanxp.com/tags/Student/"/>
    
      <category term="Life" scheme="http://seanxp.com/tags/Life/"/>
    
      <category term="Music" scheme="http://seanxp.com/tags/Music/"/>
    
      <category term="University" scheme="http://seanxp.com/tags/University/"/>
    
      <category term="Master" scheme="http://seanxp.com/tags/Master/"/>
    
      <category term="Fun" scheme="http://seanxp.com/tags/Fun/"/>
    
  </entry>
  
  <entry>
    <title>To the moon</title>
    <link href="http://seanxp.com/2017/05/To-the-moon/"/>
    <id>http://seanxp.com/2017/05/To-the-moon/</id>
    <published>2017-05-16T11:38:39.000Z</published>
    <updated>2018-03-11T02:29:34.402Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><br><img src="http://ww4.sinaimg.cn/large/006tNbRwgy1ffngsr3tnuj31kw16o47g.jpg" width="512" height="384" alt="To the moon"><br><blockquote class="blockquote-center"><br>亿万灯塔屹立，你我受制命运，终隔绝天际。<br>于梦境，与你，重新相遇；<br>在月下，与你，停止呼吸。<br></blockquote><br></div><a id="more"></a><h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>今天在少数派看到一篇文章（<a href="https://sspai.com/post/39235" target="_blank" rel="noopener">能让成年人哭泣的游戏并不多，而它必定是最特别的那个：To The Moon</a>），文章推荐视频游戏「<a href="https://www.wikiwand.com/zh-cn/%E5%8E%BB%E6%9C%88%E7%90%83" target="_blank" rel="noopener">To the moon</a>」，勾起了我的好奇心，而且该游戏还是这周的 App Store 首页推荐应用，于是下午花 ￥30 元购买游戏，迫不及待地开始了游戏之旅。￥30 元的价格，购买了一张可以游玩四个小时的电影票，拿起 iPad 启动记忆装置，进入 To the moon 的世界，拜访一位即将逝世的老人 John ，去完成他去月球（To the moon）的夙愿。</p><p>游戏通关，摘下记忆装置，退出游戏，内心却久久未能平静，闭上眼睛，听着游戏主旋律音乐《To the Moon - Main Theme》，脑海中依然能浮现出老人 John 与其妻子 River 的一幕幕画面。</p><p>这样的好游戏，竟然过了六年我才得以知晓、玩到，难民有些郁闷，周围也没有向我推荐此游戏的朋友。因此，推己及人，现在我将它分享给更多有兴趣的玩家，希望诸位能够在游戏 <to the="" moon=""> 中收获内心纯真的感动与美好。</to></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=1645064&auto=1&height=66"></iframe><h1 id="游戏简介"><a href="#游戏简介" class="headerlink" title="游戏简介"></a>游戏简介</h1><p><a href="http://freebirdgames.com/zh/to_the_moon/" target="_blank" rel="noopener">《去月球》（To The Moon）</a>是一款由 Kan “Reives” Gao（中文名：高瞰）和他的独立游戏开发团 <a href="http://freebirdgames.com/zh/" target="_blank" rel="noopener">Freebird Games</a>制作的第四款游戏，也是首款商业化发行的游戏，于2011年9月发布在作者的网站及其他下载门户网站上。这是一款使用 RPG 制作大师（另一款RPG神作《<a href="http://bbs.3dmgame.com/thread-3479260-1-1.html" target="_blank" rel="noopener">废都物语</a>》也是由 RPG Maker 制作的）制作的视觉小说。本作于2012年9月8日发布在 Steam 上，并提供 macOS 与 Linux 的版本。</p><p>「独立游戏开发团 Freebird Games」、整个游戏的开发、故事剧情设计、配乐，其实都是只有作者高瞰一个人而已。这个时候体现出一个会弹钢琴的程序员是多么有魅力（项目经理，我想学弹钢琴…）。<br>而 <a href="https://zhuanlan.zhihu.com/p/21632430" target="_blank" rel="noopener"><to the="" moon=""> 游戏开发的背景故事</to></a>，也是很感人的。</p><p>Kan Gao在2016年8月初公布iOS和android的移动版将会由心动网络（X.D. Network Inc.）进行高清重制（<a href="https://www.xd.com/games/single/4115" target="_blank" rel="noopener">与全球玩家再次享受这份感动，《To the Moon》手机版上线</a>），并于2017年5月12日全球同步登陆App Store、Google play和TapTap平台上架。</p><p>感谢心动网络，让我能够玩上六年无缘相见的好游戏。</p><ul><li><a href="http://store.steampowered.com/app/206440/To_the_Moon/" target="_blank" rel="noopener">Steam - To the moon</a>，发行日期: 2011年11月1日，平均评分：10/10 - ‎20,331 条评价，US$9.99；</li><li><a href="https://itunes.apple.com/us/app/to-the-moon/" target="_blank" rel="noopener">App Store - To the moon</a>，2017年5月11日上架，US4.99，CNY30；</li><li><a href="https://play.google.com/store/apps/details?id=com.xd.tothemoon" target="_blank" rel="noopener">Google Play - To the moon</a>，2017年5月11日上架，US$4.99；</li></ul><blockquote><p>“在不剧透的情况下怎么才能解释为什么是一款绝世佳作呢？” – Eurogamer 9/10</p></blockquote><blockquote><p>“它很简单, 悲伤, 充满了心与爱。” – PC World (GamePro) 10/10</p></blockquote><p>正如游戏测评中所讲的，我很难在不剧透的情况下向大家解释这是如何的一款佳作，但是作为视觉小说 RPG 游戏，最吸引人的也是剧情设计，如果在游戏前已经了解大概的剧情，甚至很多隐藏的伏笔，很多时候就失去了探索的乐趣，也没有了游戏效果。</p><p>游戏值得一玩，本文也无意谈论剧情影响大家的游戏体验。<br>建议大家挤出一个下午的时间，坐在阳光下，进入 To the moon 的世界，打开记忆装置，去聆听钢琴曲「To the moon / To River」，去追溯老人 John 的不同年龄的回忆与人生历程，去解密回忆道具在 John 的不同年龄段来回跳转，去体验 John 与 River 的生活，去探索 John 想要去月球的原因，去完成 John 的夙愿，最后结束游戏后和我现在一样回到这里静静地听歌。</p><font color="red">下面的内容涉及到剧透，强烈建议诸位在完成游戏后再回过头来看。</font><h1 id="John-回忆之旅（剧透）"><a href="#John-回忆之旅（剧透）" class="headerlink" title="John 回忆之旅（剧透）"></a>John 回忆之旅（剧透）</h1><p>在《去月球》的世界里，存在着借由改变记忆为弥留之际的人们完成愿望的服务。由于这种人工记忆是永久的，在病人醒来的时候会与病人的真实记忆产生冲突，也因此这种技术只能对临死的人实施。</p><p>罗莎莉恩医生（Dr. Rosalene）和沃茨医生（Dr. Watts）有一份非常特殊的工作：他们可以给人们重活一次的机会，从人生的最开始重头来过，当然这个机会只存在于将死之人的头脑里。</p><p>由于其带来的严重后果，新的人工记忆将取代真实记忆成为病人临终前记住的事，所以通过修改记忆去满足人们最后愿望的这种技术只能对临死的人实施。</p><p>这个特别的故事让玩家跟随两位医生为实现一个老人约翰尼（Johnny Wyles）的梦想而进入他的记忆。 </p><p>随着每一步时间的推移，约翰尼过去的一个个新的片段将被慢慢揭示。两位医生将约翰尼记忆中一直困扰他的许多事件重组在一起，他们试图找出究竟是何原因会让身体虚弱的老人临死前要实现这样的愿望。</p><p>而约翰尼的最后心愿竟是…去月球。</p><p><img src="http://ww3.sinaimg.cn/large/006tNbRwgy1ffngy6iqlpj31kw16oqcs.jpg" alt="Johnny"><br>游戏开始，Dr. Rosalene 与 Dr. Watts 两位工作人员来到老人 John 的居所（一所位居悬崖之上的别墅），来满足老人 John 最后的心愿 —— 去月球。此时老人已经昏迷不醒，只有尽快启动回忆装置进入老人的回忆中。</p><p><img src="http://ww1.sinaimg.cn/large/006tNbRwgy1ffnh022e5qj31kw16o77r.jpg" alt="dream"><br>而在 John 的回忆里， John 也不清楚自己为什么想去月球，「我就是…想去」，这一句话引起了玩家无限的遐想，也让故事变得开始具备悬疑特色，「是为了名？为了利？总的有个想去月球的理由吧！」。<br>为了搞清楚 John 想去月球的想法从何而来，我们要一步步向回忆的深处追溯，而在追溯的过程中 John 的一生也徐徐向我们展开…</p><p><img src="http://ww3.sinaimg.cn/large/006tNbRwgy1ffnh56ynyjj31kw16ogod.jpg" alt="River-John-1"><br>我们见证了 John 的妻子 River 的生命是如何走向终结，John 如何陪伴 River 走到生命的尽头，John 在失去 River 的孤独站立在灯塔下坟墓旁边，然后回到家里一遍遍弹奏那首为妻子谱写的钢琴曲《To River》，同时我们的心里却也埋下了疑惑的种子… 因为 John 与 River 的对话十分奇怪，River 一直试图通过折纸兔子向 John 暗示什么。（这段对话在通关之后才会理解，兔子真正的含义将会十分令人感动）</p><p>折纸兔子，盆栽，鸭嘴兽，这些都是 John 记忆中重要的东西，通过它们我们可以调整到更早的记忆，而对于玩家，是梳理记忆线和感情线的重要道具，玩家需要将逆行的记忆进行整理，从而不断梳理 John 的一生，去探索 To the moon 背后的故事。</p><p><img src="http://ww1.sinaimg.cn/large/006tNbRwgy1ffnhwfm7esj31kw16oadc.jpg" alt="River-John-2"><br>灯塔的存在对于 John 与 River 有着特殊的含义，他们为灯塔取名「Anya」，亲切称之为「她」，并在灯塔旁边盖下房子，甚至 River 放弃治疗也要 John 积攒费用坚持盖好房子，那么灯塔究竟意味着什么？</p><p>游戏的最后，年幼的 River 提出自己对灯塔的看法：「每个人都是灯塔，灯塔之间相隔万里，无法触碰无法沟通，唯一能做的就是用自己的光去照耀别人。」</p><p>通关之后将会对这句话有了更加深入的理解，游戏中看似是 River 存在严重的自闭症状难以和其他人甚至 John 交流，其实实际上，River 一直陪伴在 John 左右，默默地用自己的光去照耀着 John。</p><p>「结局永远也不会比过程重要」，同样精辟，游戏通关不是目的，而游戏的这个过程，John 的一生历程与 River 的坎坷经历，才是最重要的。</p><p><img src="http://ww3.sinaimg.cn/large/006tNbRwgy1ffnhaibo2hj31kw16odk4.jpg" alt="River-John-3"><br><img src="http://ww1.sinaimg.cn/large/006tNbRwgy1ffnhdhbdkij31kw16otbg.jpg" alt="River-John-4"><br>我们从后往前，见证了 River 与 John 的生活中的矛盾与不和谐，冲突的原因，River 的病情，有见证到 John 与 River 恩爱的生活，一直逆行到两人的婚礼。疑惑也越来越重，似乎两人之间矛盾的根源都是在更早的回忆中，同样 John 想要去月球的心愿也是在更早的回忆之中…</p><p>John 与 River 在婚礼当天于灯塔塔顶的跳舞，搭配游戏的主旋律 <to river="">，让一切都显得那么美好，在游戏充满悬疑的过程中，是一段可以闭着眼睛放松的桥段。</to></p><p><img src="http://ww2.sinaimg.cn/large/006tNbRwgy1ffnih8cx2xj31kw16o42v.jpg" alt="game"></p><p>游戏中的笔记画风很赞，没有一点冗余信息（大量剧透内容），每条笔记都是卡通风格涂鸦形式。最终集齐的四页笔记也是满满的回忆。</p><p>在抵达 John 最小年龄段的回忆时（游戏最大的伏笔，本文按下不表），我不由倒吸一口冷气，一个完美的伏笔，有细节观察的玩家可能提前就能发现。这段回忆，影响了 John 的一生，结合之前的很多笔记，很多细节都值得细细思考，也让故事变得开始具备悲剧色彩。</p><p><img src="http://ww1.sinaimg.cn/large/006tNbRwgy1ffnhjo9n7sj31kw16oe83.jpg" alt="River-John-5"><br>在 John 最早的回忆中，我们见证了 John 与 River 的初次相遇，真的是只有泪目，River 一直因为自己名字的特殊而被同学们取笑，而 John 正好相反，一直苦难自己有一个过于普通的名字，然而两人却在人群之中遇到特殊的彼此，相同的爱好，相同的心理问题，一切都已经明朗，「TO THE MOON」，完成彼此的约定。</p><p>玩到这里，我才发现游戏的五个章节名称都是有伏笔的，它们是 River 与 John 初次相遇的谈话，这段对话影响了 John 与 River 的一生。</p><ul><li>第一幕「我从未告诉过任何人……但我一直以为，他们，是灯塔。」</li><li>第二幕「仅仅是一次……可以有一个每个人都有的名字。」</li><li>第三幕「成千上万的灯塔……镶嵌在遥远的天际。」</li><li>第四幕「它们让那光芒照耀着其他灯塔，也照耀着我。」</li><li>第五幕「你试过……用星星做复活节兔子吗？」</li></ul><p>现在 John 的一生已经全部串联起来，John 因为童年原因背负了太多，而 River 却始终陪伴在 John 左右，不离不弃，始终等待着 John。<br>游戏的最后部分是 Dr. Rosalene 与 Dr. Watts 为 John 实现了去月球的真实梦想，一个美丽的梦，没有了遗憾，随着航天飞船驶离地球，背景中 John 的心跳声也越来越平静，直到最后…</p><p>亿万灯塔屹立，你我受制命运，终隔绝天际。<br>于梦境，与你，重新相遇；<br>在月下，与你，停止呼吸。</p><ul><li><a href="https://www.zhihu.com/question/20712730" target="_blank" rel="noopener">你在玩《去月球》（To The Moon）的时候有何感悟？</a></li><li><a href="https://www.zhihu.com/question/23822376" target="_blank" rel="noopener">如何评价独立 RPG 游戏《To the moon》（去月球）？</a></li></ul><p>THE END.</p><p>游戏的结束并不是故事的结束，游戏的结尾，作者又抛出一个伏笔分镜（将在游戏的 DLC 中解释清楚）。之前一直觉的 John 和 River 的故事是主线，而 Dr. Rosalene 和 Dr. Watts 的谈话很多都很鸡肋，现在发现其实也包含一条暗线，等待玩家去挖掘…</p>]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/006tNbRwgy1ffngsr3tnuj31kw16o47g.jpg&quot; width=&quot;512&quot; height=&quot;384&quot; alt=&quot;To the moon&quot;&gt;&lt;br&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;亿万灯塔屹立，你我受制命运，终隔绝天际。&lt;br&gt;于梦境，与你，重新相遇；&lt;br&gt;在月下，与你，停止呼吸。&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Game" scheme="http://seanxp.com/categories/Game/"/>
    
    
      <category term="Review" scheme="http://seanxp.com/tags/Review/"/>
    
      <category term="Game" scheme="http://seanxp.com/tags/Game/"/>
    
      <category term="Love" scheme="http://seanxp.com/tags/Love/"/>
    
      <category term="Life" scheme="http://seanxp.com/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>ゼルダの伝説</title>
    <link href="http://seanxp.com/2017/05/Zelda/"/>
    <id>http://seanxp.com/2017/05/Zelda/</id>
    <published>2017-05-13T02:00:13.000Z</published>
    <updated>2018-03-11T02:29:34.406Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><br><img src="http://ww4.sinaimg.cn/large/006tKfTcgy1ffjic3u5rcj30zk0k0tbb.jpg" width="1280" height="720" alt="Princess Zelda"><br><blockquote class="blockquote-center"><br>我为你翻山越岭，却沉迷看风景<br>我想你身不由己，当然是选择原谅你<br></blockquote><br></div><a id="more"></a><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="450" src="//music.163.com/outchain/player?type=1&id=35250042&auto=1&height=430"></iframe><h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p><a href="https://www.wikiwand.com/zh-hans/%E5%A1%9E%E5%B0%94%E8%BE%BE%E4%BC%A0%E8%AF%B4_%E8%8D%92%E9%87%8E%E4%B9%8B%E6%81%AF" target="_blank" rel="noopener">《塞尔达传说：荒野之息》（The Legend of Zelda: Breath of the Wild）</a> 由任天堂企划制作本部与任天堂旗下子公司 Monolith Soft 协力开发。游戏最早计划为 Wii U 平台独占发行（结果做完已经到了 Wii U时代的结束），之后（迫不得已）宣布将在任天堂新的混合型游戏主机任天堂 Switch 上发售，并将成为该主机的首发游戏之一。同时任天堂确认本作会是任天堂在Wii U上开发的最后一款游戏。</p><p>游戏最初于2013年公布，并计划于2015年发行。之后任天堂宣布游戏延期并最终定于2017年3月3日发行。游戏获得了业界的极高评价，多家媒体为本作给予满分。</p><p>作为一名（伪）游戏爱好者，在塞尔达传说火了将近三十年之后才知道这一系列游戏，实在惭愧。记得小时候就在小霸王学（You）习（Xi）机上玩过很多FC游戏，其中不乏任天堂的第一方游戏，但是当时却无缘玩到塞尔达，直到高中在一款步步高学（You）习（Xi）机的模拟器下玩了很多GB/GBC系列游戏，才接触过塞尔达一次。当时玩的是《塞尔达传说：梦见岛》，当时感觉攻击方式很是枯燥，也没有认真了解游戏的内容和玩法，随便玩了十几分钟就再也没有兴趣了，最后换成牧场物语回矿石镇种地去了。</p><p><a href="https://zhuanlan.zhihu.com/p/26614314" target="_blank" rel="noopener">为什么塞尔达系列中最好的三部，只有很少的中国主机玩家玩过？</a>，不都不说是因为国内游戏环境与个人玩家的局限性所导致的（当然也要考虑到历史的进程问题）。</p><p>大概是初中高中玩的游戏过多，自大学起，真正能让我感兴趣的游戏寥寥无几，网络游戏的套路已经摸透不再感兴趣，反而偏爱一些独立游戏和单机游戏。最近游戏荒，甚至翻出模拟器玩十几年前的游戏逆转裁判系列等等（GBA游戏我还能再玩两三年），为此甚至打算购买一部 3DS 掌机。</p><p>听说塞尔达传说荒野之息的时候，已经是2017年3月3日任天堂的新主机 Switch 发售日了。因为很多媒体都给予这款游戏满分的评价，严重勾起了我的好奇心，通过网络搜索到越来越多塞尔达传说的信息和评测，也开始在游戏直播间看荒野之息的直播。三月份的游戏直播，一大亮点就是很多拿到 Switch 主机的游戏主播进行荒野之息的直播了。在多次观看“核心游戏主播”（小Y_MRY）的游戏直播后，我决心为了玩塞尔达传说购置一款 Nintendo Switch 主机。（很多人都是为了玩某游戏才购买的游戏主机，不得不说任天堂的策略很机智）</p><ul><li><a href="http://www.g-cores.com/articles/17694" target="_blank" rel="noopener">《塞尔达传说》：30年的进化</a></li><li><a href="http://www.g-cores.com/articles/23644" target="_blank" rel="noopener">塞尔达的传说——传承和历史</a></li><li><a href="https://zhuanlan.zhihu.com/p/26201760" target="_blank" rel="noopener">《荒野之息》长文分析</a></li><li><a href="https://www.zhihu.com/question/22841151" target="_blank" rel="noopener">知乎-塞尔达传说</a></li><li><a href="https://zhuanlan.zhihu.com/p/26630073" target="_blank" rel="noopener">荒野之息：重新设计开放世界</a></li><li><a href="http://bbs.a9vg.com/forum-661-1.html" target="_blank" rel="noopener">A9VG-Switch综合讨论区</a></li></ul><h2 id="购机路漫漫"><a href="#购机路漫漫" class="headerlink" title="购机路漫漫"></a>购机路漫漫</h2><p>整个三月份，有关任天堂的百度贴吧、社区论坛、QQ群都是一片“哀鸿遍野”。只有一小部分任天堂核心玩家由于早早预购，在三月三日发售日当天就拿到了 Switch 游戏机并开始了荒野之息的冒险，而更多的玩家（包括我在内的新人），都只能含泪默默排队等待抢购。而且由于中国市场的特殊性，想要购买 Nintendo Switch，一般只有两条路可走。</p><p>一条是走官方正路，附近靠近游戏机销售点的玩家，开始了定期扫货，日本后来还出现了摇号购买，而位置“偏僻”的玩家，只能在任天堂官方网站或者各大亚马逊进行海外购买。<br>另一条是二手邪路，就是走某宝某鱼，从黄牛手中进行购买。不都不感叹黄牛的抢货速度，本来算小众的新游戏主机在黄牛的抢购下变得越发小的出货量。三四月份的某宝价格几乎是一天一个价格，首发期间货源充足因此坐地起价，平均涨幅三四百作用，三月下旬由于大量玩家选择日亚，因此降低 Switch 价格而抬高游戏价格，原因是大部分人还是选择在国内购买游戏。直到四五月份，价格才差不多维持在一个合适的水平。</p><p>我就是选择的是这一条耗时极长的正路，一则不想支持黄牛抢购倒卖的行为，二则为了设备的质量考虑，三则学习日本亚马逊海外购的流程。日亚出货的规律性强，每周四周五基本都会补货，加上网页监控，终于在三月底于日亚购入 Switch。期间还因为信用卡填写问题，差点被 JP Amazon 封号。<br>怎料到下单成功才仅仅是开始而已，之后还有漫漫物流路，由于账单问题出仓已经被拖延了一星期，发货到国内等待清关又拖了将近一星期，甚至晚买的塞尔达传说实体卡带都已经到货了，只能看着物流信息舔卡度日。</p><ul><li><a href="http://www.rttswitch.com/4219.html" target="_blank" rel="noopener">日本亚马逊日淘SWITCH购买教程</a></li><li><a href="http://best.pconline.com.cn/bbs/topic-69862.html" target="_blank" rel="noopener">日亚信用卡账单地址问题导致账户被封</a></li></ul><h2 id="海拉尔之旅"><a href="#海拉尔之旅" class="headerlink" title="海拉尔之旅"></a>海拉尔之旅</h2><p>虽然看了不少游戏直播，部分神祠解密已经被“剧透”，但是荒野之息的体验还是非常的棒！很久没有游戏可以让我能够如此全身心融入其中。</p><p>开始时还不熟悉键位（荒野之息真是合理利用了 Switch 手柄上的每一个按键），切换武器盾牌都手忙脚乱，加上前期武器装备都很简单，常因为操作问题被博哥布林一棒撸倒。之后，在林克不断成长和冒险的过程中，渐渐开始上手，开始有意识地去刷守护者来练习盾反技巧，找博哥布林骑兵练习马上射箭，找大蜥蜴练习回旋标，找人马哥练习极限闪避等等。海拉尔大陆还有很多小游戏 NPC 分布在各地，20 卢比就可以玩一个小游戏。</p><p>经过150个小时的探索，我基本探索了海拉尔的大部分土地（之所以是大部分，是依然存在一大半的 Yahaha Korok Seeds 没有找到呢，而这一部分就占据了一大半的地图完成度），第一次通关的地图完成度为 54%，而且由于十二个回忆点中的最后一个回忆点处于海拉尔城堡附近（十分恶意，因为很多玩家都是决定打 BOSS 才会来海拉尔城堡），导致虽然完成了十二回忆的探索，但是由于打 BOSS 而没有来得及去 Kakariko 村庄提交回忆主线人物，导致结局可能是不完美结局（Bad End?）塞尔达公主提问「Link, can I ask … Do you remember me?」，当时真的是一脸「黑人问号？？？」，费尽千辛万苦，爬雪山过草地，踏遍整个海拉尔大陆去寻找古代神祠，最终来到你的身边，你却给我讲这个？<br>网上也是有不少网友在谈论这个结局，表示对结局有些失望。<a href="https://www.gamefaqs.com/boards/189707-the-legend-of-zelda-breath-of-the-wild/75088264" target="_blank" rel="noopener">Where you disappointed with the Ending?</a></p><p>不过后来我发现，其实很多时候故事并不是要靠结局来支撑的，十二个回忆加最终回忆，塞尔达的日记，还有风琴手 Kass 的皇家诗人师父的故事，很多细节都在为我们描述 Princess Zelda &amp; Link 的故事。</p><p>这里也谈不上什么攻略，因为我认为很多东西没有必要看攻略，自行探索是最大的乐趣所在，照着攻略“高效率”地拿到各种神器各种宝箱解密各种神祠，直到快速通关后，这款游戏又真正给你留下了什么呢。自己探索玩通关之后，再看<a href="http://www.g-cores.com/articles/23857" target="_blank" rel="noopener">《荒野之息》全收集中文剧情攻略</a>，我也是侧重于看文章中关于海拉尔历史和人物细节的挖掘，发现专业玩家（俗称「赛学家」，赛学家真是的从各个版本的塞尔达游戏内容中进行历史考究）在玩的过程中探索的深度和广度和普通玩家判若云泥，也发现任天堂在设计游戏时的细节掌控令人发指，所以说花费四百元购买荒野之息，我个人觉得很值。</p><p><img src="http://ww4.sinaimg.cn/large/006tKfTcgy1ffjn5rn2v9j30zk0k078a.jpg" alt="新的开始"><br>游戏开始，从棺木中醒来的我是一脸懵蔽的，对海拉尔大陆是一无所知。开始只引导基本的移动和抓取投掷操作，其他复杂的按键之后才会慢慢引导，拿到第一把弓的时候告诉你如何射箭，拿到第一面盾时引导你如何防御。整体上游戏的游戏引导做的十分到位，还有很多 NPC 通过聊天对话的形式告诉你很多操作和战斗技巧。</p><p>当从苏醒祠堂（The Shrine of Resurrection）一路小跑出来，耳边开始响起了荒野之息的第一首背景音乐——《メインテーマ》，随着林克的脚步前进，眼前景色越来越明亮，音乐节奏越来越快，直到站立在祠堂门口的悬崖上，玩家第一次看到整个海拉尔大陆的全貌，音乐开始变得舒缓。看着广袤无垠的海拉尔大陆，在一颗探索的好奇心驱使下，信仰之跃纵身跳下悬崖，海拉尔我来啦！（随着林克的一声惨叫，才发现现在还没有滑翔伞，拍拍身上的尘土，本勇士决定先从悬崖边上退下来从长计议）</p><p>后来才发现，苏醒祠堂的教学仅仅是开头，整个高原也就是第一章大地图（Great Plateau）才是整个游戏的新手教学指导。<br>这里由于地理问题与世隔绝，新手玩家可以流程地体验早期游戏的大部分内容（几乎裸着身子的情况下的低防御力体验，其他套装衣服都是出了新手地图后才能拿到的）。</p><p><img src="http://ww1.sinaimg.cn/large/006tKfTcgy1ffjnns0braj30zk0k0ady.jpg" alt="爬山模拟器"><br>荒野之息作为开（Pa）放（Shan）世（Mo）界（Ni），任天堂定义一个新词叫作 「Open Air」 来形容荒野之息的开放世界之辽阔。虽然貌似整个海拉尔大陆在高处天气晴朗时可以一览无遗，但是无数的赶路苦难真是教会我什么叫做「望山跑死马」，很多时候看上去很近的东西，来来回回爬上爬下跑了能有十多分钟才能到。更别说在各种深山老林犄角旮旯藏身的神祠和Yahaha了。<br>作为一款爬山模拟器，爬山爬到一半突然下雨是最气的，既没有篝火可以坐下快进时间，又无法再爬动（下雨爬一步能下滑三步喂！），真的只能是爬在半山坡上淋着小雨看风景喽。开始看游戏直播时，感觉荒野之息的画面也不是那么高清，但是游戏机拿到手，跑在 TV 模式下，就再也不想玩掌机模式了。一旦接收这个游戏风格设定就会爱上主机模式的风景，真的是随便截一张图都能当作壁纸用，而且主机模式下的字体清晰，物品栏中的物品也十分精致。换一把武器，全视角我能看上五分钟，武器带来的衣服装饰细节也都不同，小火剑是有剑鞘背着，而大火剑就是用防火带绑在背上的，每把武器上的装饰花纹也都各有不同。</p><p><img src="http://ww1.sinaimg.cn/large/006tKfTcgy1ffjnm6j2d7j30zk0k0jvj.jpg" alt="林克害怕限定版"><br>最先集齐的就是在 Kakariko Village 花重金购买的潜行套装（当时几乎花光我所有的积蓄，服装店老板你知道我洗劫了多少博哥布林和挖多少矿才积攒下来的吗！），玩起来有种上古卷轴潜弓的感觉，而且潜行暴击也很高（我这一棒下去你可能会死 XD）。在游戏初期，手头资源很紧张，血量不足，根本莽不起来，哥布林一棒子下去就是一个小精灵借尸还魂。因此我在游戏的一大半时间都是穿着潜行装各种偷袭怪物，触发陷阱，捕捉蝴蝶甲虫青蛙（蛤？）蜥蜴精灵，潜弓狩猎，夜间跑路，跟踪 NPC 等等（感觉 Link 才是海拉尔大陆大魔王，毕竟 Ganon 一直在海拉尔城堡里“安分守己”，突然发现头顶一片绿是怎么回事）。</p><p><img src="http://ww4.sinaimg.cn/large/006tKfTcgy1ffjnz5hwt5j30zk0k00xk.jpg" alt="Cucco"><br>Kakariko Village 是我遇到的第一个村子，在村里遇到一个视鸡（Cucco）如命的人，作为村中领袖 Impa 的守卫（你旁边可是有一个Yiga间谍哎！），一天不想着如何保家卫国抵抗Yiga，就想着自己家园子里的鸡有没有跑出来呀，有没有吃饱挨饿呀，有没有被雨淋到受冻呀，而且还为了Cucco鸡甚至和老婆闹掰了，注孤生啊！我曾经也一直很不理解他的做法，直到有一次我抱着Cucco跳下悬崖时，被鸡神带我飞过高山流水山丘小河返回 Kakariko村，我就成了鸡神的大粉丝（什么攻击鸡神被秒以及打不过鸡神才崇拜鸡神都是子虚乌有的！），每次回村“搜刮”我都会把鸡神举高高。</p><p>Kakariko村的背景音乐根据昼夜分为《カカリコ村 (昼)》和其变奏曲《カカリコ村 (夜)》，越听越有感觉，透露出一股宁静祥和的气息。荒野之息做为开放世界，支线任务不影响主线进度，但是和海拉尔大陆的每个NPC对话都很重要，他们中有的告诉你一些小技巧，有的告诉你一些山头河流的传言，还有的迫切需要你的帮助。很多支线任务，尤其是Kakariko村的支线，十分值得一做。比如潜行任务，让我了解到平时白天在服装店吆喝的女村民，晚上会偷偷跑到村外的坟头思念丈夫而哭泣，白天看管李子园林的老婆婆，晚上会在老头子回来之前偷偷出门啃一根老头讨厌的胡萝卜。<br>还有一对幼年丧母的姐妹，姐姐每天早晨起来瞒着父亲和妹妹去村外大树下哭泣，早晨和妹妹听父亲讲故事，中午父亲去做守卫，自己就想办法给妹妹做饭。而妹妹中午到下午很无聊，让我陪她玩捉迷藏。后来发现父亲也是大有故事的人呢。</p><p>荒野之息不仅有时间的流逝，而且每个NPC都是有起居习惯的，更具有真实感。（不过无所不在的手风琴手 Kass 还有杂货店掌柜 Beedle 以及画家 Pikango 就例外啦）因此，如果打怪打累了，可以蹲在屋顶（草丛什么的是勇士蹲的地方吗！），「暗中观察」NPC的之间对话和昼夜行为。有的玩家除了暗中观察，竟然还公然裸体调戏村中长者 Impa 的孙女 Paya。 Paya 的名字由来是意外的萌呐。游戏中的 NPC 对话设计的很丰富，有的 NPC 会在你站在桥边时跑过来让你不要自寻短见（可是 Yahaha 是下面喂！），有的 NPC 会在你站在销售桌子上警告你赶紧下来不要影响他做生意，很多 NPC 会在你掏出武器时做出防御反应，甚至商人 NPC 在下雨时着急避雨时的物品售价都是有差别的！</p><p><img src="http://ww1.sinaimg.cn/large/006tKfTcgy1ffjsnn9xitj30zk0k0tca.jpg" alt="Purah"><br>不过说到萌，又有谁萌的过她呢，「震惊！知名古代兵器研究学家兼人体机理重构科学家的实际年龄究竟是…」。</p><p><img src="http://ww2.sinaimg.cn/large/006tKfTcgy1ffjoot3n1pj30zk0k00vz.jpg" alt="Farosh"><br>晚上散步抓萤火虫时，突然耳边响起了二胡声，一种神秘宁静的气息，周围也开始起风了，抬头定睛一看竟然是一条硕大的雷龙。初到海拉尔大陆，不知这条雷龙是从哪里来，又到哪里去，累死累活终于跑到桥上打算一睹真龙风采时却发现雷龙已经消失的无影无踪了。「神龙见尾不见首」，这是我对雷龙的第一印象。后来体力槽上限上来以后，加上清楚了神龙的飞行路线，还向神龙借了不少龙鳞龙角升级装备呢。</p><p><img src="http://ww4.sinaimg.cn/large/006tKfTcgy1ffjpxp9j4zj30zk0k0jvz.jpg" alt="Naydra-0"><br><img src="http://ww3.sinaimg.cn/large/006tKfTcgy1ffjov08f0ij30zk0k0jur.jpg" alt="Naydra-1"><br>相比悠哉悠哉的雷龙Farosh，冰龙Naydra的日子就不好过了，可能是被困在雪山上困了一百年了，加上雪山山峰寒冷无比，人烟罕至，就一直没有人来过。我还是在一次躲避人马哥的追捕攀爬雪山到快要冻死时，在山头远远眺望到的。本勇士都快冻死了，还坚持学雷锋做好事的精神，一边喝辣椒汤保持温暖一边帮冰龙 Naydra 从 Ganon 的污染中解救了出来。Naydra 变身过程很是惊艳，开始是被 Ganon 污染导致的黑紫色身体，被救赎后变成了上图的靛青色，更具有神圣性的感觉。但是像兔子一样的耳朵简直不要太萌，让我用人马弓给你打几个耳钉吧！之前射龙身拿龙鳞，射龙脸拿龙角，不知道有没有试过射龙眼睛的 :-)。荒野之息里存在太多的独眼怪而且眼睛是弱点的了。<br>很多玩家利用篝火反复刷龙素材来卖钱，实在是过分，像神龙射箭是一种勇士的证明，而神龙掉下的素材是神龙的奖励，怎么能反复刷神龙呢！想挣钱老老实实和哥隆矿工去挖矿呗 :-)<br>不过由于玩游戏经常守财奴的性质，攒了很多很多的素材以及冰箭、火箭、爆炸箭等没有使用，直到游戏通关结束。现在想想，攒了不用，跟没有有什么区别？（要说区别还是有的，起码本财主的底气是足够强硬的嘛）</p><p><img src="http://ww3.sinaimg.cn/large/006tKfTcgy1ffjpbrb79nj30zk0k040z.jpg" alt="Mipha"><br>Zora Domain 是我去的第一个神兽区域，当时正在湿地打蜥蜴，突然远处一个声音，找了半天才发现是河流中露出一个脑袋来，是 Zora 的人鱼族，就这样开始了 Zora 之旅。因为大象神兽 Divine Beast Vah Ruta 的影响，Zora境内一直下雨，爬山模拟器启动失败，只能走羊肠小道穿越层层阻碍抵达 Zora 城。期间蜥蜴弓箭手的雷箭简直不要太痛，根本莽不起来，被雷箭射中就得麻痹到“缴械”。</p><p>Zora 城的背景音乐是《ゾーラの》的昼夜版，也十分好听。在城中乱逛，发现城里的长者们都对我充满了敌意，尤其是丞相 Muzu。在 King Dorephan 的解释下，我才了解到这样一段和人鱼公主 Mipha 的往事。穿上 Mipha 量身定做的 Zora 盔甲（这是 Zora 王族公主亲手为未来夫婿量身定做的盔甲），我感觉力量倍增，必须要承担百年前的失败导致的责任，然后上山就被人马哥教做人射成了雷马蜂窝。。。<br>每次抬头看，天色阴沉大雨纷纷，就会想，这雨是否是 Mipha 公主的眼泪呢？</p><p>每个神兽都是一个大迷宫，每个迷宫都根据特性不同，具有独特的操控体验，解密起来感觉非常过瘾，而且神兽迷宫的 BOSS 难度不大，因此才有人调侃海拉尔大陆最可怕的不是 Ganon 而是白银人马哥。<br>解救了大象神兽 Divine Beast Vah Ruta，终于又和人鱼公主 Mipha 的灵魂见面了，Mipha 还赠与了 「Mipha’s Grace」这样的原地复活一次的能力。我很少使用这样的能力，一直当作最后的+1大招留着，不过听说有很多玩家为了听 Mipha 的特性配音而疯狂送人头呢 XD。</p><p><img src="http://ww3.sinaimg.cn/large/006tKfTcgy1ffjpo8bh5qj30zk0k0tdd.jpg" alt="Lynel"><br>说到人马哥，真是一部血与泪的斗争史。在游戏前期只有几颗心血量时，于第一次回忆处的大门口与人马哥初次邂逅，就被人马哥一刀斩虐好几次，以后的海拉尔冒险看到人马哥都要绕道行走。直到游戏后期需要遇到装备升级时才想起海拉尔的高山——人马哥，虽然已经有了四级装备防御力很高，但是被人马哥一棒槌砸下来还是蛮痛的（攻击100+的人马棒槌就问你怕不怕）。于是某天刷了整整一上午人马哥来练习极限闪避，直到身上所有的弓箭都更新成了三连、五连弓，最后背对黑色的人马背影，插起大师剑，“白银人马也不过如此”。</p><p>除了正经打怪之外，还可以带上特制面具来进行迷惑敌人。<br><img src="http://ww2.sinaimg.cn/large/006tKfTcgy1ffjpzh3x19j30zk0k0q7d.jpg" alt="female-link"><br>额，不是这张。。。不过这套衣服让我印象深刻，我永远不会忘记那日那时的赠衣之人，起风之时面纱被风揭起，「他」的音容笑貌犹在。<br><img src="http://ww2.sinaimg.cn/large/006tKfTcgy1ffjq06d5kyj30zk0k0q6r.jpg" alt="fun"><br><img src="http://ww2.sinaimg.cn/large/006tKfTcgy1ffjq0h1d5mj30zk0k0jw0.jpg" alt="fun-2"><br>带上怪物面具不移动时，林克会自动模仿怪物的动作（戴上人马面具的模仿动作也是贱贱的），行走是还会模拟怪物的叫声。海拉尔有善口技者，一人一帽一剑而已，满屋寂然，未几，夫齁声起，众博哥布林无敢哗者而围观之，忽一人持皇家大剑大呼，博哥布林亦大呼，回旋斩若秋风扫落叶，忽然跳劈一下，群响毕绝。</p><p><img src="http://ww3.sinaimg.cn/large/006tKfTcgy1ffjq0ocyynj30zk0k0n0p.jpg" alt="heart"><br>游戏中还有四十几个神祠是需要各种破解谜题才能解锁的，游戏性大大提高。不得不惊叹游戏设计师的绝妙创意，玩家要将游戏世界的一切都要利用起来加以考虑，又是靠时间，又是靠太阳映射的倒影，又是靠风向，又是靠音乐，才能破解谜题完成任务。</p><p><img src="http://ww2.sinaimg.cn/large/006tKfTcgy1ffjtnjy89wj30zk0k0afu.jpg" alt="blue-flame"><br>「传火」现场！你能想想费劲心思从山脚村庄点燃火把一路上山有惊无险，却在山顶突然下起一阵小雨浇灭火把是什么心情吗？！点火时还有一帮村里的小屁孩屁颠地跟在背后跑啊跑呢。<br>后来才发现沿途灯座的存在，真是惭愧。而且在山坡上一个灯座旁边，有一对夫妇，妻子白天坐在这里值班监督，丈夫晚上坐在这里值班监督，两个人为了守卫没有时间相处在一起。</p><p><img src="http://ww4.sinaimg.cn/large/006tKfTcgy1ffjtsettrej30zk0k0q7k.jpg" alt="the Lord of the Mountain"><br>山神，「the Lord of the Mountain」，样子很像宫崎骏动画《幽灵公主》中的山神，当初是在远处眺望到山中一道绿光直冲云霄，爬上来发现马厩中传言的山神真的存在。山神的警惕性十分高，好不容易才骑上去。当时打算骑着山神下山，让马厩的众屁民张张见识，没想到下山过程中，山坡上出现了好多好多山羊以及其他动物，一路上畅通无阻，连博哥布林也没有，想想真的是山神的庇佑。骑到马厩结果把马厩中人吓坏了，「完蛋啦，你怎么把山神骑下来了，我们都要被诅咒了！」。</p><p>马厩的音乐是《馬宿》，悠远宁静。马厩中存在各式各样的旅行者和形商，当然少不了大画家 Pikango 和风琴手 Kass 啦。不过我看 Pikango 在那里龙飞凤舞地画画，可以画出来的作品且很迷，「迷之抽象」，我打算将来开新存档，要把 Pikango 的画作截图保留下来，万一将来火了呢～<br>不过 Pikango 现在也真是穷，晚上也舍不得掏20卢比，只能坐在马厩宿舍地上打盹。</p><p>荒野之息中的坐骑也是千奇百怪：<br><img src="http://ww3.sinaimg.cn/large/006tKfTcgy1ffju3ti5csj30zk0k0tda.jpg" alt="skullhorse"><br>某天晚上逛见骷髅兵骑着骷髅马，果断抢回来骑，骑起来咯咯作响，骑到马厩想要登记，马厩老板竟然说「我的神啊，这是怪物吧！我可不能登记它，不然他得把我的马都吃了！」，正准备回头骑马，骷髅马就在日光下灰飞烟灭了，哎。<br><img src="http://ww1.sinaimg.cn/large/006tKfTcgy1ffju4ng2xcj30zk0k0425.jpg" alt="deer"><br>雄鹿骑起来也很威风，可惜图片中的鹿兄不给面子，没有拍到正脸。而且雄鹿与雌鹿往往是一同出没，对周围的声音极其敏感，一点风吹草动就撒腿就跑。不过天降神兵鹿兄你怕不怕。雄鹿骑起来蹦蹦跳跳，没有马快。<br><img src="http://ww4.sinaimg.cn/large/006tKfTcgy1ffju51bduxj30zk0k0gqb.jpg" alt="Giant-horse"><br>有天下山，从山顶就看到一匹马，真的是太大了，和周围的小马比起来简直鹤立鸡群。天降神兵下来骑上巨马来张摆拍。巨马太大，难以掌控，体型大也无法加速冲刺。不过就这巨马的体型，直接撞翻了博哥布林骑手，结果没想到翻车连人带马掉到了河里。。。</p><p><img src="http://ww1.sinaimg.cn/large/006tNbRwgy1ffo5yra6nwj30zk0k046v.jpg" alt="Kass"><br>完成手风琴手 Kass 的所有的谜题之后，在 Kass 的故乡鸟村 Rito Village 又再一次遇见了他。没想到他竟然是这五只小鸟的爸爸！也终于可以站在 Rito Village 的起飞台上，完整地听一遍 Rito Village 的主题曲（手风琴合唱版本）《リトの村》。游戏的细节之一，在 Rito Village 会自动播放这首 BGM，而当你靠近 Kass 一家的合唱台时，BGM 会无缝切换到手风琴版本的音乐，真的是很赞的小细节。</p><p>而和 Kass 的最终谈话，了解到 Kass 经常提起的诗人老师的故事，还有 Kass 的八卦爆料：<br><img src="http://ww3.sinaimg.cn/large/006tNbRwgy1ffo68cp2jij30zk0k0gs1.jpg" alt="princess-eys"></p><blockquote><p>But the princess herself only had eyes for her escort, her own knight attendant.</p></blockquote><p>最后 Kass 为我们演奏了最后一首音乐：</p><p><img src="http://ww1.sinaimg.cn/large/006tNbRwgy1ffo6afcjj5j30zk0k0dmr.jpg" alt="Kass-2"></p><blockquote><p>The princess’s love for her fallen knight awakens her power<br>And within the castle the Calamity is forced to cower</p></blockquote><p><img src="http://ww2.sinaimg.cn/large/006tNbRwgy1ffo6bdfs0vj30zk0k0dhq.jpg" alt="last-memory"><br><img src="http://ww2.sinaimg.cn/large/006tNbRwgy1ffo6dvtcs2j30zk0k0af8.jpg" alt="last-memory-2"></p><p>十二回忆的主线任务最后，就是去最后的回忆地点，回忆林克受伤被送进苏醒祠堂（The Shrine of Resurrection）的事情。所有的事情都经过回忆串联起来，从 Link 被任命为公主私人骑士开始，到最终为保护塞尔达公主而重伤昏迷。是时候了，是时候去结束一百年前的战斗，去解救塞尔达公主！</p><blockquote><p>It is now time for you to defeat Ganon.</p></blockquote><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>现在听着荒野之息的配乐（大爱《メインテーマ コンサートバージョン》，越来越有感觉），寥寥数笔写下这篇拙劣的文字，来描述我对塞尔达传说荒野之息的喜爱。最近时而陷入海拉尔大陆的冒险回忆中，想起那些曾经爬过的双子山，想起那些曾经击杀的平原人马，想起那些曾经路过的村庄，想起那海边的荒岛之行，想起逆流而上的瀑布顶端的日出，想起翱翔于天空中的神兽安抚之旅，想起那遥远的森林还有一把属于我的佩剑，想起中央海拉尔城堡中还有等待我百年的公主，海拉尔大陆遍地都是我曾经的回忆，内心久久难以平静。</p><p><img src="http://ww2.sinaimg.cn/large/006tKfTcgy1ffjq124ylyj30zk0k00w1.jpg" alt="master-sword"><br><img src="http://ww1.sinaimg.cn/large/006tKfTcgy1ffjq1szdisj30zk0k0tbl.jpg" alt="Zelda"></p><p>以上的诸多截图，仅仅是我游戏过程中的一小部分内容而已，每张截图都能说上很长的一段话，就好像荒野之息中的每一个 NPC 都有一个值得挖掘的小故事一样。<br>第一次的通关至此告一段落，地图中仍有很多值得探索的内容，想想在未来的某一天（两个 DLC 发售之日），我会打开 Switch，再次进入海拉尔大陆，从苏醒祠堂走出来，纵身信仰之跃！</p><p>人生不也是如此，每一天都值得期待，存在那么多美好事物值得去奋斗。塞尔达传说固好，但也只是人生的一个小插曲。我们也许不像林克，从苏醒过来就有了明确的目标任务，但是我们所处的世界是比海拉尔大陆更为庞大的次元世界，我们拥有的技能比起荒野之息的解密道具更多，我们周围存在更多值得了解和解密的事情，而如何提高自己并巧妙利用自身技能，去使自我不断成长，领悟出自己的“大师剑”，则是荒野之息这150个游戏时间所教会我的。</p><font color="white"> Yahaha! You found me! </font>]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/006tKfTcgy1ffjic3u5rcj30zk0k0tbb.jpg&quot; width=&quot;1280&quot; height=&quot;720&quot; alt=&quot;Princess Zelda&quot;&gt;&lt;br&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;我为你翻山越岭，却沉迷看风景&lt;br&gt;我想你身不由己，当然是选择原谅你&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Game" scheme="http://seanxp.com/categories/Game/"/>
    
    
      <category term="Review" scheme="http://seanxp.com/tags/Review/"/>
    
      <category term="Game" scheme="http://seanxp.com/tags/Game/"/>
    
      <category term="Nintendo" scheme="http://seanxp.com/tags/Nintendo/"/>
    
  </entry>
  
  <entry>
    <title>IEEE 802.11</title>
    <link href="http://seanxp.com/2017/02/IEEE-802.11/"/>
    <id>http://seanxp.com/2017/02/IEEE-802.11/</id>
    <published>2017-02-18T01:56:55.000Z</published>
    <updated>2018-03-11T02:29:34.394Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center"><br>NO Wi-Fi NO LIFE<br>NO IEEE 802.11 NO Wi-Fi<br></blockquote><br><a id="more"></a></p><h1 id="IEEE-802-11"><a href="#IEEE-802-11" class="headerlink" title="IEEE 802.11"></a><a href="https://www.wikiwand.com/zh-hans/IEEE_802.11" target="_blank" rel="noopener">IEEE 802.11</a></h1><p>IEEE 802.11 是现今无线局域网通用的标准，它是由国际电机电子工程学会（IEEE）所定义的无线网络通信的标准。IEEE 在 1997 年为无线局域网制定了第一个版本标准 IEEE 802.11。其中定义了媒体存取控制层（MAC 层）和物理层。<br>物理层定义了工作在 2.4GHz 的 ISM 频段上的两种扩频作调制方式和一种红外线传输的方式，总数据传输速率设计为 2Mbit/s。两个设备可以自行构建临时网络，也可以在基站（Base Station, BS）或者接入点（Access Point，AP）的协调下通信。为了在不同的通讯环境下取得良好的通讯质量，采用CSMA/CA（Carrier Sense Multiple Access/Collision Avoidance）硬件沟通方式。</p><h2 id="Wi-Fi"><a href="#Wi-Fi" class="headerlink" title="Wi-Fi"></a>Wi-Fi</h2><p>虽然有人将Wi-Fi与802.11混为一谈，但两者并不一样。（实际上Wi-Fi是Wi-Fi联盟的一个商标，该商标仅保障使用该商标的商品互相之间可以合作，与标准本身实际上没有关系。）<br><a href="https://www.wikiwand.com/zh-hans/Wi-Fi" target="_blank" rel="noopener">Wi-Fi</a> 是 Wi-Fi 联盟制造商的商标做为产品的品牌认证，是一个建立于 IEEE 802.11 标准的无线局域网技术。基于两套系统的密切相关，也常有人把 Wi-Fi 当做 IEEE 802.11 标准的同义术语。「Wi-Fi」常被写成 WiFi 或 Wifi ，但是它们并没有被 Wi-Fi 联盟认可。<br>1999年工业界成立了 Wi-Fi 联盟，致力解决符合 802.11 标准的产品的生产和设备兼容性问题。Wi-Fi 为制定 802.11 无线网络的组织，并非代表无线网络。苹果公司把自己开发的802.11标准起名叫AirPort。</p><h2 id="IEEE-802-11-List"><a href="#IEEE-802-11-List" class="headerlink" title="IEEE 802.11 List"></a>IEEE 802.11 List</h2><ul><li><font color="red">IEEE 802.11，1997年，原始标准（2Mbit/s，播在2.4GHz）。</font></li><li><font color="red">IEEE 802.11a，1999年，物理层补充（54Mbit/s，播在5GHz）。</font></li><li><font color="red">IEEE 802.11b，1999年，物理层补充（11Mbit/s，播在2.4GHz）。</font></li><li>IEEE 802.11c，符合802.1D的媒体接入控制层桥接（MAC Layer Bridging）。</li><li>IEEE 802.11d，根据各国无线电规定做的调整。</li><li>IEEE 802.11e，对服务等级（Quality of Service, QoS）的支持。</li><li>IEEE 802.11f，基站的互连性（IAPP，Inter-Access Point Protocol），2006年2月被IEEE批准撤销。</li><li><font color="red">IEEE 802.11g，2003年，物理层补充（54Mbit/s，播在2.4GHz）。</font></li><li>IEEE 802.11h，2004年，无线覆盖半径的调整，室内（indoor）和室外（outdoor）信道（5GHz频段）。</li><li>IEEE 802.11i，2004年，无线网络的安全方面的补充。</li><li>IEEE 802.11j，2004年，根据日本规定做的升级。</li><li>IEEE 802.11k，该协议规范规定了无线局域网络频谱测量规范。该规范的制订体现了无线局域网络对频谱资源智能化使用的需求。</li><li>IEEE 802.11l，预留及准备不使用。</li><li>IEEE 802.11m，维护标准；互斥及极限。</li><li><font color="red">IEEE 802.11n，更高传输速率的改善，基础速率提升到72.2Mbit/s，可以使用双倍带宽40MHz，此时速率提升到150Mbit/s。支持多输入多输出技术（Multi-Input Multi-Output，MIMO）。</font></li><li>IEEE 802.11o，针对VOWLAN（Voice over WLAN）而制订，更快速的无限跨区切换，以及读取语音（voice）比数据（Data）有更高的传输优先权。</li><li>IEEE 802.11p，这个通讯协定主要用在车用电子的无线通讯上。它设定上是从IEEE 802.11来扩充延伸，来符合智慧型运输系统（Intelligent Transportation Systems，ITS）的相关应用。</li><li>IEEE 802.11q</li><li>IEEE 802.11r：快速BSS切换（FT）（2008）</li><li>IEEE 802.11s：Mesh Networking, Extended Service Set（ESS）（July 2011）</li><li>IEEE 802.11t：Wireless Performance Prediction (WPP)—test methods and metrics Recommendation cancelled</li><li>IEEE 802.11u：Improvements related to HotSpots and 3rd party authorization of clients, e.g. cellular network offload (February 2011)</li><li>IEEE 802.11v：Wireless network management（February 2011）</li><li>IEEE 802.11w：Protected Management Frames (September 2009)</li><li>IEEE 802.11x</li><li>IEEE 802.11y：3650–3700 MHz Operation in the U.S.（2008）</li><li>IEEE 802.11z：Extensions to Direct Link Setup (DLS)（September 2010）</li><li>IEEE 802.11-2012：A new release of the standard that includes amendments k, n, p, r, s, u, v, w, y and z (March 2012)</li><li>IEEE 802.11aa：Robust streaming of Audio Video Transport Streams (June 2012)</li><li>IEEE 802.11ab</li><li><font color="red">IEEE 802.11ac，802.11n的潜在继承者，更高传输速率的改善，当使用多基站时将无线速率提高到至少1Gbps，将单信道速率提高到至少500Mbps。使用更高的无线带宽（80MHz-160MHz，802.11n只有40MHz），更多的MIMO流（最多8条流），更好的调制方式（QAM256）。</font></li><li><font color="red">IEEE 802.11ad：Very High Throughput 60 GHz (December 2012) - see WiGig</font></li><li>IEEE 802.11ae：Prioritization of Management Frames（2012年3月）</li><li>IEEE 802.11af：运用过往电视白区（TV White Space，TVWS）的频段所订立标准，由于使用白区频段（VHS的54MHz～216MHz及UHF的470MHz～698MHz），有时IEEE 802.11af也称为White-Fi（取Wi-Fi一词的衍生变化）。</li><li>IEEE 802.11ah：用来支援无线感测器网路（Wireless Sensor Network，WSN），以及支援物联网（Internet of Thing，IoT）、智慧型电网（Smart Grid）的智慧电表（Smart Meter）等应用。</li><li>IEEE 802.11ai：为IEEE 802.11的修正案，新增部分机制，以及加速建立网路连线的等待时间。</li><li>IEEE 802.11aj：为IEEE 802.11ad的增补标准，开放45GHz的未授权频宽带使世界上部分地区可以使用。</li><li>IEEE 802.11aq：为IEEE 802.11的修正案，增加网路探索的效率，以加快网路传输速度。</li><li>IEEE 802.11ax：以现行的IEEE 802.11ac做为基底的草案，以提供比现行的传输速率加快4倍为目标。</li></ul><h2 id="IEEE-802-11a-5G-Hz-54-Mbps"><a href="#IEEE-802-11a-5G-Hz-54-Mbps" class="headerlink" title="IEEE 802.11a (5G Hz, 54 Mbps)"></a><a href="https://www.wikiwand.com/zh-hans/IEEE_802.11a" target="_blank" rel="noopener">IEEE 802.11a</a> (5G Hz, 54 Mbps)</h2><p>IEEE 802.11a 是 802.11 原始标准的一个修订标准，于1999年获得批准。802.11a标准采用了与原始标准相同的核心协议，工作频率为 5GHz，使用 52 个正交频分多路复用副载波，最大原始数据传输率为 54Mb/s，这达到了现实网络中等吞吐量（20Mb/s）的要求。<br>由于 2.4G 频段日益拥挤，使用 5G 频段是 802.11a 的一个重要的改进。但是，也带来了问题。传输距离上不及 802.11b/g；理论上5G信号也更容易被墙阻挡吸收，所以802.11a的覆盖不及801.11b。802.11a同样会被干扰，但由于附近干扰信号不多，所以802.11a通常吞吐量比较好。<br>802.11a产品于2001年开始销售，比802.11b的产品还要晚，这是因为产品中5GHz的组件研制成功太慢。由于802.11b已经被广泛采用了，802.11a没有被广泛的采用。</p><h2 id="IEEE-802-11b-11Mbps-2-4G-HZ-11-Mbps"><a href="#IEEE-802-11b-11Mbps-2-4G-HZ-11-Mbps" class="headerlink" title="IEEE 802.11b (11Mbps) (2.4G HZ, 11 Mbps)"></a><a href="https://www.wikiwand.com/zh-hans/IEEE_802.11b" target="_blank" rel="noopener">IEEE 802.11b (11Mbps)</a> (2.4G HZ, 11 Mbps)</h2><p>IEEE 802.11b是无线局域网的一个标准。其载波的频率为2.4GHz，可提供1、2、5.5及11Mbit/s的多重传送速度。在2.4-GHz的ISM频段共有11个频宽为22MHz的频道可供使用，它是11个相互重叠的频段。IEEE 802.11b的后继标准是IEEE 802.11g。</p><h2 id="IEEE-802-11g-54Mbps-2-4G-HZ-54-Mbps"><a href="#IEEE-802-11g-54Mbps-2-4G-HZ-54-Mbps" class="headerlink" title="IEEE 802.11g (54Mbps) (2.4G HZ, 54 Mbps)"></a><a href="https://www.wikiwand.com/zh-hans/IEEE_802.11g" target="_blank" rel="noopener">IEEE 802.11g (54Mbps)</a> (2.4G HZ, 54 Mbps)</h2><p>IEEE 802.11g在2003年7月被通过。其载波的频率为2.4GHz（跟802.11b相同），共14个频段，原始传送速度为54Mbit/s，净传输速度约为24.7Mbit/s（跟802.11a相同）。802.11g的设备向下与802.11b兼容。其后有些无线路由器厂商因应市场需要而在IEEE 802.11g的标准上另行开发新标准，并将理论传输速度提升至108Mbit/s或125Mbit/s。</p><h2 id="IEEE-802-11n-2-4G-amp-5G-HZ-300M-600Mbps"><a href="#IEEE-802-11n-2-4G-amp-5G-HZ-300M-600Mbps" class="headerlink" title="IEEE 802.11n (2.4G &amp; 5G HZ, 300M/600Mbps)"></a><a href="https://www.wikiwand.com/zh-hans/IEEE_802.11n" target="_blank" rel="noopener">IEEE 802.11n</a> (2.4G &amp; 5G HZ, 300M/600Mbps)</h2><p>IEEE 802.11n，由IEEE于2009年9月正式批准。该标准增加了对MIMO的支持，允许40MHz的无线频宽，最大传输速度理论值为600Mbit/s。同时，通过使用Alamouti提出的空时分组码，该标准扩大了数据传输范围。<br>802.11n增加了对于MIMO的标准，使用多个发射和接收天线来允许更高的数据传输率，并使用了Alamouti于1998年提出的空时分组码来增加传输范围。802.11n支持在标准带宽（20MHz）上的速率包括有（单位Mbit/s）：7.2, 14.4, 21.7, 28.9, 43.3, 57.8, 65, 72.2（短保护间隔，单数据流）。使用4xMIMO时速度最高为300Mbit/s。</p><ul><li>20MHz 带宽，MIMO 链路带宽 7.2, 14.4, 21.7, 28.9, 43.3, 57.8, 65, 72.2，最高 72.2 Mpbs，支持 4 MIMO（4 * 72.2，300Mbps）</li><li>40MHz 带宽，MIMO 链路带宽 15, 30, 45, 60, 90, 120, 135, 150，最高 150 Mpbs，支持 4 MIMO（4 * 150，600Mbps）</li></ul><h2 id="IEEE-802-11ac-5GHz-867M-1-73G-3-47G-6-93Gbps"><a href="#IEEE-802-11ac-5GHz-867M-1-73G-3-47G-6-93Gbps" class="headerlink" title="IEEE 802.11ac (5GHz, 867M/1.73G/3.47G/6.93Gbps)"></a><a href="https://www.wikiwand.com/zh-hans/IEEE_802.11ac" target="_blank" rel="noopener">IEEE 802.11ac</a> (5GHz, 867M/1.73G/3.47G/6.93Gbps)</h2><p>IEEE 802.11ac，俗称5G WiFi （5th Generation of Wi-Fi），是一个802.11无线区域网路（WLAN）通讯标准，它透过5GHz频带进行通讯。理论上，它能够提供最少1Gbps频宽进行多站式无线区域网通讯，或是最少500Mbps的单一连线传输频宽。<br>IEEE 802.11ac是一个正在发展中的802.11无线计算机网路通信标准，它透过6GHz频带（也就是一般所说的5GHz频带）进行无线区域网（WLAN）通信。理论上，它能够提供最少每秒1 Gigabit频宽进行多站式无线区域网（WLAN）通讯，或是最少每秒500 megabits（500 Mbit/s）的单一连线传输频宽。<br>它采用并扩展了源自802.11n的空中接口（air interface）概念，包括：更宽的RF频宽（提升至160 MHz），更多的MIMO空间串流（spatial streams，增加到8），MU-MIMO，以及高密度的解调变（modulation，最高可达到256 QAM）。它是IEEE 802.11n的潜在的继任者。</p><ul><li>20MHz 带宽，单MIMO链路最大87.6Mpbs；</li><li>40MHz 带宽，单MIMO链路最大200Mpbs；</li><li>80MHz 带宽，单MIMO链路最大433.3Mpbs；</li><li>160MHz 带宽，单MIMO链路最大866.7Mpbs（支持8 MIMO，8MIMO * 160MHz, 6.93Gpbs）；</li></ul><h2 id="802-11ad-WiGig-2-4G-5G-60GHz-6756-75-Mbps"><a href="#802-11ad-WiGig-2-4G-5G-60GHz-6756-75-Mbps" class="headerlink" title="802.11ad / WiGig (2.4G/5G/60GHz, 6756.75 Mbps)"></a><a href="https://www.wikiwand.com/zh-hans/WiGig" target="_blank" rel="noopener">802.11ad / WiGig</a> (2.4G/5G/60GHz, 6756.75 Mbps)</h2><p>无线千兆联盟（英语：Wireless Gigabit Alliance，缩写为WiGig）是一个商业与工业组织，致力于推动在无需执照的 60GHz 频带上运行数千兆位元（multi-gigabit）速度的无线装置资料传输技术。该联盟在2009年5月7日宣布成立，2013年1月4日并入到Wi-Fi联盟，以共同推动60GHz高速网路。</p><ul><li>高性能：WiGig技术规格允许设备在不使用线缆的情况下进行数千兆的高速通信，这将使高性能的无线数据传输、显示和音频应用成为可能，并可作为过去的无线局域网技术的互补。</li><li>多频段：WiGig三频段设备可以在2.4GHz、5GHz和60GHz频段上工作，最高可以以7Gbit/s的速度传输数据，几乎与8个频段的802.11ac一样快。这相当于802.11n最高速率的11倍——但同时与现有的Wi-Fi设备保持兼容。</li><li>不穿墙：60GHz的信号通常无法穿透墙壁，但信号可以被墙壁、天花板、地板和其他内建WiGig系统“波束成形”特性的物体反射。在漫游离开主房间时，无线协议可以自动利用更低的频段在低速下工作，比如2.4GHz和5GHz，这两种频段均可穿墙。</li></ul><h1 id="frequency-channel"><a href="#frequency-channel" class="headerlink" title="frequency channel"></a>frequency channel</h1><p>802.11b 和 802.11g 将 2.4 GHz 的频段区分为 14个重复标记的频道，每个频道的中心频率相差 5 兆赫兹（MHz）。<br><strong>一般常常被误认的是频道 1，6 和 11（还有有些地区的频道 14 ）是互不重叠所以利用这些不重叠的频道，多组无线网络的互相涵盖，互不影响，这种看法太过简单。</strong>802.11b 和 802.11g 并没有规范每个频道的频宽，规范的是中心频率和频谱屏蔽（spectral mask）。802.11b的频谱屏蔽需求为：在中心频率±11 MHz处，至少衰减30 dB，±22 MHz处要衰减50 dB.<br>应该要修正为：<strong>频道1，6和11，三个频段互相之间的影响比使用其它频段小。</strong> 即使是频段相差最远的频道1和11，也是会互相干扰的。频道距离在1，6和11之间虽然会对彼此造成干扰，而却不会强烈地影响到通讯的传输速率。<br><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/2.4_GHz_Wi-Fi_channels_%28802.11b%2Cg_WLAN%29.svg/1440px-2.4_GHz_Wi-Fi_channels_%28802.11b%2Cg_WLAN%29.svg.png" alt="802.11b/g 信道"><br>图注：14信道仅在日本使用；信道12-13在美国等一些国家不允许使用。</p><p><a href="https://www.wikiwand.com/zh-hans/ISM%E9%A2%91%E6%AE%B5" target="_blank" rel="noopener">ISM</a> 频段（Industrial Scientific Medical Band），中文意思分别是工业的(Industrial)、科学的(Scientific)和医学的(Medical)，因此顾名思义 ISM 频段就是各国挪出某一段频段主要开放给工业，科学和医学机构使用。应用这些频段无需许可证或费用，只需要遵守一定的发射功率（一般低于1W），并且不要对其它频段造成干扰即可。ISM频段在各国的规定并不统一。如在美国有三个频段902-928 MHz、2400-2484.5 MHz及5725-5850 MHz，而在欧洲900MHz的频段则有部份用于GSM通信。<br><strong>而2.4GHz为各国共同的ISM频段。因此无线局域网（IEEE 802.11b/IEEE 802.11g），蓝牙，ZigBee等无线网络，均可工作在2.4GHz频段上。</strong></p><p>关于无线路由器频段的选择，最好是通过软件扫描电脑所在的无线网络环境，查看其他无线信号所在的频率，然后选择一个干扰较少的频率。</p><h1 id="MIMO"><a href="#MIMO" class="headerlink" title="MIMO"></a><a href="https://www.wikiwand.com/zh-hans/MIMO" target="_blank" rel="noopener">MIMO</a></h1><p><strong>多输入多输出（Multi-input Multi-output, MIMO）是一种用来描述多天线无线通信系统的抽象数学模型，能利用发射端的多个天线各自独立发送信号，同时在接收端用多个天线接收并恢复原信息。</strong><br>该技术最早是由马可尼于1908年提出的，他利用多天线来抑制信道衰落（fading）。由于MIMO可以在不需要增加频宽或总发送功率耗损（transmit power expenditure）的情况下<strong>大幅地增加系统的资料吞吐量（throughput）及传送距离</strong>，使得此技术于近几年受到许多瞩目。MIMO的核心概念为利用多根发射天线与多根接收天线所提供之空间自由度来有效提升无线通讯系统之频谱效率，以提升传输速率并改善通讯品质。</p><p>实例：<br>一个具有双天线的 2.4G 802.11n 300Mbps 路由器，在 Macbook 下的速度只有 5M?</p><ul><li>802.11n 支持 20MHz/40MHz 带宽，但是 2.4G 下的 Macbook 只能使用 20MHz 带宽，因此单 MIMO 链路最高带宽是 72.2Mbps；</li><li>Macbook 没有多天线，因此只能是两个天线发送一根天线接收（多发单收，带宽是单 MIMO 链路带宽，但信号比单天线强），即 Macbook 在此路由器下的最高带宽是 72Mbps；</li><li>Macbook 下打开 Network Utility 应用，查看<code>Link Speed: 72 Mbit/s</code>，确实如此；</li><li>72Mbit/s = 72/8 byte/s = 9MB/s，加上其他无线信号的干扰，通讯的冗余信息等，局域网下也是 5M 、6M 的网速了。</li></ul><h2 id="802-11-b-g"><a href="#802-11-b-g" class="headerlink" title="802.11 b/g"></a>802.11 b/g</h2><p><a href="http://news.mydrivers.com/1/469/469885.htm" target="_blank" rel="noopener">无线路由器1/2/3根天线有啥区别？</a><br>由于发射端到接收端之间存在各种各样的障碍物，收发时几乎不存在直射信号的可能。那怎么办？我们管这个办法叫做多径传输，也叫多径效应。<br>那么问题来了，既然是多径，传输的路程就有长有短，有的可能是从桌子反射过来的，有的可能是穿墙的，这些携带相同信息但是拥有不同相位的信号辗转最终一起汇集到接收端上。<br><strong>现代通信用的是存储转发的分组交换，也叫包交换，传输的是码（Symbol）。由于障碍产生不同的传输时延，就造成了码间干扰ISI（Inter Symbol Interference）。为了避免ISI，通信的带宽就必须小于可容忍时延的倒数。对于802.11a/b/g协议，即使加装再多的天线也没有任何意义。假设这些天线可以同时工作，反而会使多径效应更加恶劣。</strong><br>只要 IEEE 802.11n 以上的路由器，即支持 MIMO 的路由器，才有多天线的必要。</p><h2 id="iPad-MIMO"><a href="#iPad-MIMO" class="headerlink" title="iPad MIMO"></a><a href="https://www.zhihu.com/question/21875970/answer/21676942" target="_blank" rel="noopener">iPad MIMO</a></h2><ul><li>假设两个发射天线都发相同的内容，这样就能增强天线的覆盖范围，称为发射分集。</li><li>两个接收天线都接收相同的内容、提高接收的稳定性称为接收分集。</li><li>分集不能提高传递信息的速率，只能提高覆盖区间或者稳定性。而MIMO完全不同，它能成倍提高传递信息的速率，2x2（双发双收，路由器和设备都有两个天线）的MIMO速率变为2倍，4x4（4发4收）的MIMO速率变为4倍。成倍提高通信速率的优势是MIMO最吸引人的地方，所以4G、WIFI才会采用。</li></ul><p>MIMO的原理是个数学问题，无法用物理学的概念说清楚。假设一个天线发射信息为X，另一个天线发射信息为Y。信息X和Y传递到接收天线1和接收天线2上。接收天线1的信号为aX+bY，接收天线2的信号为cX+dY，（a，b，c，d是空间传输的衰减系数）。根据接收天线1和2的信号来得到发射天线的信号X和Y，其实就是一个解方程的问题，也就是必须要知道a,b,c,d系数。如果知道a,b,c,d这些空间传播系数，解出X和Y就不成问题了，MIMO通过双发双收传递双份信息的目的也就实现了。</p><p>关于多天线MIMO技术，有一个形象的比喻，觉得挺有意思的：</p><ol><li>用两只手拎一个桶，这个就是分集增益，你会比较省劲，对你的体力要求较低，哪怕你没有吃晚饭，也能保证里面的水不洒出来，安全的运送到目的地。这时候体现的增益是，左右手比一只手强。</li><li>如果你吃了晚饭，体力很充沛，那你可以一手拎一只桶，这个就是空分复用。一趟就运了2桶水，并仍然能够安全运送到目的地。<br>总结：你的体力就相当于链路的传输能力，链路自适应的原则就是力所能及，同时又不浪费掉你多余的骨油。</li></ol><h2 id="300M-450M-750M"><a href="#300M-450M-750M" class="headerlink" title="300M/450M/750M"></a>300M/450M/750M</h2><p><a href="https://www.zhihu.com/question/23319546" target="_blank" rel="noopener">为什么大部分450M的无线路由器都是三根天线的？</a><br>802.11n支持的单天线（MIMO单链路）收发的最高速率是150M，多一根天线，速率就可以增加150M，所以三根就可以达到450M。同理，300M 路由器一般是两根天线。<br><strong>但是前提是发送和接收双方的天线都有3根，理论上才能达到450M的速率</strong>，而实际上终端上天线数一般为一根，ipad有两根就已经可以作为卖点了。<br>所以如果终端只有一根天线，而路由器有3根天线，理论最高速率也只有150M。多两根天线带来的好处就是信号更稳定了，并不能提升理论速率，因为802.11n并不支持多个用户同时收发数据。<br>802.11n除了支持2.4G这个频段之外，还支持5G，所以有些路由器有多达5根天线，一般是三根天线工作在2.4G，两根天线工作在5G，两个频段同时工作可以达到750M （2.4G 450M + 5G 300M）的理论最高速率。<br>反过来，3根天线不等于450Mbps，市场上很多假3根天线，最坑的是第3根天线直接空接，其次是第3根天线仅做数据备份作用，数据最高还是300Mbps，信号理论上比2根天线稳定一些。<br>802.11AC的又是另外一回事，1x1 MIMO最高433Mbps（很多文章里写450Mbps），2x2 MIMO最高867Mbps，3x3 MIMO最高1300Mbps，但很多1x1 MIMO的802.11AC路由器又是3根天线的，原因在于该路由器需要同时支持802.11n，实际是2x2 300Mbps 802.11n + 1x1 433Mbps 802.11AC，号称750M路由器。</p><h1 id="wireless-bandwidth"><a href="#wireless-bandwidth" class="headerlink" title="wireless bandwidth"></a>wireless bandwidth</h1><h2 id="M-1024-1000"><a href="#M-1024-1000" class="headerlink" title="M = 1024 ? 1000 ?"></a>M = 1024 ? 1000 ?</h2><ul><li>在电信和电脑运算领域，<a href="https://www.wikiwand.com/zh/%E6%AF%94%E7%89%B9%E7%8E%87" target="_blank" rel="noopener">比特率</a>（英语：Bit rate，变量R）是单位时间内传输送或处理的比特的数量。比特率规定使用「比特每秒（bit/s 或 bps）」为单位，经常和国际单位制词头关联在一起，如「千（kbit/s, kbps, kilobit per second）」，「兆（Mbit/s, Mbps, megabit per second）」，「吉（Gbit/s, Gbps, gigabit per second）」和「太（Tbit/s, Tbps, terabit per second）」。<ul><li>比特率经常在电信领域用作连接速度、传输速度、信息传输速率和数字带宽容量的同义词。例如：联通 20M 宽带安装；</li><li>在数字多媒体领域，比特率是单位时间播放连续的媒体如压缩后的音频或视频的比特数量。在这个意义上讲，它相当于术语数字带宽消耗量，或吞吐量。</li><li>虽然经常作为「速度」的参考，比特率并不测量「距离 / 时间」，而是被传输或者被处理的「二进制码数量/时间」，所以应该把它和传播速度区分开来，传播速度依赖于传输的介质并且有通常的物理意义。</li><li><font color="red">1Mbps = 1000Kbps = 1000 * 1000 bps = 10^6 bit/s，在 SI 中 Kilo 是指 1000，Mega 是指 1000000。</font>这种用法通常用于数据传输速率、计算机网络、cpu时钟等。</li></ul></li><li>在计算机领域，<a href="https://www.wikiwand.com/zh/%E5%AD%97%E8%8A%82" target="_blank" rel="noopener">字节</a>（英语：Byte）用作计算机信息计量单位。一个字节（Byte）代表八个比特（Bit）。字节存在两种次方单位「SI」的十进制前缀和「IEC 60027」的二进制前缀，但是网络上依然很多地方并没有区分清楚 MB（megabyte）与 MiB（mebibyte），因此需要根据上下文语境进行判断是二进制前缀还是十进制前缀。<ul><li><font color="red">国际单位制（<a href="https://www.wikiwand.com/zh/%E5%9B%BD%E9%99%85%E5%8D%95%E4%BD%8D%E5%88%B6" target="_blank" rel="noopener">SI</a>）的十进制前缀，1 MB = 10^3 KB = 10^6 Byte = 10^6*8 bit；</font></li><li><font color="red">国际电工委员会的电气技术用字母符号标准（<a href="https://www.wikiwand.com/zh-hans/IEC_60027" target="_blank" rel="noopener">IEC 60027</a>）的二进制前缀，1999年新增的IEC 60027-2 定义了 <strong>kilobit不可代表kibibit</strong>，1 MiB(mebibyte) = 2^10 KiB(kibibyte) = 2^20 byte = 2^20*8 bit；</font></li><li>在存储领域，尤其是硬盘，厂商都是使用国际单位制 SI 计算硬盘容量（十进制计算有多少个扇区），而操作系统一般使用二进制计算硬盘容量，因此彼此计算的数据不同。例如一块 3TB 的硬盘，5814021 柱面 16 磁头 63 扇区，一共是 5814021<em>16</em>63 = 5860533168 个扇区，每个扇区是 512 字节，容量是 5860533168 * 512 = ，3000592982016 字节，按 3TB 容量销售，而操作系统计算出的未格式化容量是 3000592982016/1024^3 = 2794.519981 GB；</li></ul></li></ul><h2 id="Mbps"><a href="#Mbps" class="headerlink" title="Mbps"></a>Mbps</h2><p><a href="https://www.zhihu.com/question/19908717" target="_blank" rel="noopener">150M 无线路由器里的 M 是什么意思？</a><br>网络通讯里面常用的单位是比特每秒（bit per second, bps）：</p><ul><li>100Mbps / 11.92 MBps = 100 <em> 10^6 bps = 100 </em> 10^6 / 8 B/s = 100 * 10^6 / 8 / 1024 / 1024 MB/s = 11.920928955 MB/s</li><li>150Mbps / 17.88 MBps = 150 <em> 10^6 bps = 150 </em> 10^6 / 8 B/s = 150 * 10^6 / 8 / 1024 / 1024 MB/s = 17.881393433 MB/s</li><li>300Mbps / 35.76 MBps</li><li>1Gbps / 1000Mbps / 119.2 MBps</li></ul><p>802.11g 的理论上限是 54Mbps，所以 150Mbps 通常是 802.11n 的路由器才支持。即便是 802.11n，标称 150Mbps 的无线路由在实际使用中通常不可能达到这个速度的，平均值能有 50Mbps 就不错了。<br>理论值和实际值会相差这么远，原因有很多，例如无线电信号在空气中传播时的损耗，还有就是电脑无线网卡是否支持802.11n，还有其他无线信号干扰。<br>冗余：「包转发」这个过程中，本身也是有「冗余信息」的（这种冗余是指，在包转发过程中必须、但并非终端期待接收的真实信息；这种冗余也可能是网络传输协议本身必须引入的），这些「冗余」也要占用带宽。150Mbps，是指空口理论传输速度，中间有802.11控制协议开销，各种报文重传损耗，因此实际文件传输速度要低于150M。<br>另外，150M 的传输速率也只是你的理论最高局域网速率，并不是外网的速率，外网的速率还是拉的电信、网通等运行商的带宽和线路决定的。无线受干扰很大，所以家庭的一些电器也造成干扰，现在无线的频段是2.4G，这是个免费频段，所以很多设备都是用这个频段。但一般情况下，近距离的内网的速率还是可以达到60到90Mbps的。</p><h2 id="150M-Wireless-Router"><a href="#150M-Wireless-Router" class="headerlink" title="150M Wireless Router"></a>150M Wireless Router</h2><p>是指最高支持20MHz带宽的 2*2 收发模式的无线路由器。当此无线路由器的两根天线同时发挥作用，2条空间流同时收发，并采用802.11n的最高级别的编码技术（64-QAM），工作在20MHz带宽并使用最短的GI（Guard Interval，可简单理解为两个帧的间隔）的时候，它的速率为144.4Mbps，厂商为了方便，就直接用150Mbps宣传了。</p><h2 id="300M-Wireless-Router"><a href="#300M-Wireless-Router" class="headerlink" title="300M Wireless Router"></a>300M Wireless Router</h2><p>是指最高支持40MHz带宽的 2*2 收发模式的无线路由器。这种路由器与150M路由器唯一差别就是传输时，使用的信道带宽为40MHz，所以速率高一倍。<br>由于无线路由器通常运行在2.4GHz频段上。而2.4GHz的公共频段带宽其实很小，如果使用40MHz带宽，那么传输过程中，会基本占用2.4G整个频段。如果采用40M模式，任何无线设备（其它AP，2.4G鼠标等）都会造成干扰，因此速率可能很难达到300M。因此，选择300M路由器时，最好看看是否支持5GHz，该频段比较宽，干扰小，比较容易达到高速率，用户体验要好些。</p><h2 id="450M-Wireless-Router"><a href="#450M-Wireless-Router" class="headerlink" title="450M Wireless Router"></a>450M Wireless Router</h2><p>是指最高支持40MHz带宽的 3*3收发模式的无线路由器。此无线路由器传输数据时，有3条空间流同时收发，速度也可以达到450Mbps。</p><h2 id="bandwidth-test"><a href="#bandwidth-test" class="headerlink" title="bandwidth test"></a>bandwidth test</h2><p><a href="http://www.hinas.net/thread-304-1-1.html" target="_blank" rel="noopener">实际测试 802.11n 和 802.11ac 最大无线传输速度</a></p><ul><li>WiFi存在利用率问题，1.0Gbps有线网远比1.3Gbps无线网快。</li><li>WiFi无线网络中数据传输存在重新封包/解包、校验帧等机制，另外还会受到信号干扰，所以真正的带宽利用率最高只有50%左右（这一规律适用于802.11a/b/g/n/ac等所有WiFi无线网络）。</li></ul><h2 id="iperf"><a href="#iperf" class="headerlink" title="iperf"></a>iperf</h2><p><a href="https://github.com/esnet/iperf" target="_blank" rel="noopener">iperf3</a>, network bandwidth measurement tool<br>iperf is a tool for active measurements of the maximum achievable bandwidth on IP networks. It supports tuning of various parameters related to timing, protocols, and buffers. For each test it reports the bandwidth, loss, and other parameters.</p><p>通信两端，一段启动 iperf server，默认启动 5201 端口:</p><pre><code>$ iperf3 -s-----------------------------------------------------------Server listening on 5201-----------------------------------------------------------</code></pre><p>另一端启动 iperf client 连接 iperf server：</p><pre><code>$ iperf3 -c 192.168.1.100</code></pre><p>实例：<br>局域网内的两台电脑，使用 Cat.5E （超5类）网线通过企业级路由器（包含交换机功能）连接，同一个子网段的不同 IP，通过 iperf3 测试带宽是 90Mbps，即每秒最高 11 MB/s。</p><ul><li>因为是局域网内通讯，只有两台电脑与路由器参与通讯，没有牵扯到网关服务器，网关不是瓶颈所在；</li><li>使用超5类网线，支持千兆以太网，即带宽在网线长度 100 米以内时最高可达 1000Mbps，因此网线也不是瓶颈所在；</li><li>两台电脑网卡均支持千兆以太网，通过命令（ethtool）查询，发现当前网卡的工作模式是 <code>Speed: 100Mb/s</code>；</li><li>查询企业级路由器型号，发现该路由器已停产，仅支持 10/100M 以太网，因此判定局域网的网络瓶颈为路由器。</li></ul><p>说明千兆局域网必须是千兆网卡、千兆网线、千兆路由器才可以，任意一个地方都可能是网络瓶颈。那么外网环境要经过还要经过多重路由器跳转，平时速度能上几兆就已经很不错了。</p><h1 id="20MHz-40MHz"><a href="#20MHz-40MHz" class="headerlink" title="20MHz/40MHz"></a>20MHz/40MHz</h1><ul><li><a href="https://www.zhihu.com/question/20404191" target="_blank" rel="noopener">Wi-Fi 20mhz 和 40mhz 频段带宽的区别是什么？如果做桥接，哪个更好？</a></li><li>[<a href="https://www.zhihu.com/question/20404191/answer/15036354]" target="_blank" rel="noopener">https://www.zhihu.com/question/20404191/answer/15036354]</a></li></ul><p>2.4G,5G,60G，都是路由器工作的中心频率，平时常说的20M/40M是指路由器的带宽。<br>20Mhz和40Mhz的区别，可以想象成道路的宽度，宽度越宽当然同时能跑的数据越多，也就提高了速度。<br>当然，无线网的“道路”是大家共享的，一共就这么宽（802.11 b/g/n的频带是 2.412Ghz ~ 2.472Ghz，一共60Mhz。802.11a/n在中国可用的频带是5.745Ghz ~ 5.825Ghz，同样也是60Mhz），你占用的道路宽了，跑得数据多了，当然就更容易跟别人撞车，一旦撞车大家就都会慢下来，比你在窄路上走还要慢，参考这个图：<br><img src="https://pic1.zhimg.com/6a797af2077f0ff0b2269036a77f5a0c_b.jpg" alt="Wi-Fi 翻车指南"></p><p>当然，一个比较好用的方法就是采用未经许可的频段，比如802.11a/g/n的频段你可以找朋友从其他国家弄一个，然后设定在比如4.915Ghz，这样就跟谁都不干扰了，可以舒舒服服地用40Mhz的。当然这个仅限于极小的公司或者个人用户，规模太小用户国家一般也不会去管你，规模大了可就保不准了。<br><strong>（但是采用未经许可的频段不一定可行，在无线路由器上使用中国非授权的频率固然可以，不过也需要客户端支持。但凡通过正规渠道在国内上市的产品，均通过国内3C严格质检，不允许支持非授权频段，否则根本不让进入中国销售。所以要想使用国内非授权频段，要无线路由器、客户端同时支持这些频段才行。）</strong><br>一个关于错误信道无法连接路由器的例子：[<a href="https://www.v2ex.com/t/340589]" target="_blank" rel="noopener">https://www.v2ex.com/t/340589]</a></p><p>提到20M和40M的区别，显然用的是802.11n的无线网卡，它采用了OFDM和MIMO的技术，OFDM中文意思为正交频分复用，而且对抗频率重叠的方法来自于“正交”两个字。对于2.4ghz频段的无线设备，干扰源非常多。举几个例子，无线耳机，无线键鼠，微波炉，这些东西发送的无线电波都会占用一定的带宽。而wifi频段带宽越窄，和这些干扰源频率重合的可能性就越小。<strong>所以如果无线信号覆盖的区域内有较多干扰源，建议你使用20mhz频宽，否则使用40mhz。</strong><br><strong>2.4GHz和5GHz都可自由选择20MHz或40MHz频宽，但一些装置只允许在5GHz下使用40MHz频宽，例如MacBook。如果用家购买一台只支援2.4GHz的150Mbps路由器，就只能使到72Mbps，即是20MHz频宽下的最快速度（72 Mbps / 8.58MBps）。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;NO Wi-Fi NO LIFE&lt;br&gt;NO IEEE 802.11 NO Wi-Fi&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Internet" scheme="http://seanxp.com/tags/Internet/"/>
    
      <category term="Learning" scheme="http://seanxp.com/tags/Learning/"/>
    
      <category term="History" scheme="http://seanxp.com/tags/History/"/>
    
      <category term="Router" scheme="http://seanxp.com/tags/Router/"/>
    
  </entry>
  
  <entry>
    <title>OpenWrt Router</title>
    <link href="http://seanxp.com/2017/02/OpenWrt-Router/"/>
    <id>http://seanxp.com/2017/02/OpenWrt-Router/</id>
    <published>2017-02-17T13:39:43.000Z</published>
    <updated>2018-03-11T02:29:34.398Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>Free As The Wind<br>路由器是要带给人们幸福的东西啊！<br>不发光的路由器不是好路由器，是黑暗路由器。<br></blockquote><a id="more"></a><p>该方案提供一套 OpenWrt 完整的网络访问策略，使用 shadowsocks-libev 实现网络代理，dnsmasq + ChinaDNS 实现国内外代理分流与 DNS 防污染。</p><h1 id="install-shadowsocks-libev"><a href="#install-shadowsocks-libev" class="headerlink" title="install shadowsocks-libev"></a>install shadowsocks-libev</h1><p><a href="https://github.com/shadowsocks/openwrt-shadowsocks" target="_blank" rel="noopener">openwrt-shadowsocks</a>，是一个专门为 OpenWrt 路由器定制过的 SS 软件包。<br>不懂如何交叉编译的朋友，可以直接下载编译过的 ipk 包在 OpenWrt 中直接安装，例如<a href="https://dl.bintray.com/aa65535/opkg/shadowsocks-libev/" target="_blank" rel="noopener">aa65535/shadowsocks-libev</a>，选择适配自己路由器芯片架构（可通过网络查询）的最新的 SS 软件包和相关依赖库。<br><strong>注意：下载他人的编译的软件包一定要谨慎，并确认可靠性。</strong></p><p>例如 WR703N 的相关 ipk 软件包 <a href="https://dl.bintray.com/aa65535/opkg/shadowsocks-libev/3.0.2/OpenWrt/ar71xx/" target="_blank" rel="noopener">aa65535/shadowsocks-libev/3.0.2/ar71xx/</a> 中包括：</p><ul><li>shadowsocks-libev_3.0.2-1_ar71xx.ipk，要运行在路由器上的ss程序；</li><li>libev_4.22-1_ar71xx.ipk，依赖包；</li><li>libmbedtls_2.4.0-2_ar71xx.ipk，依赖包；</li><li>libpcre_8.39-1_ar71xx.ipk，依赖包；</li><li>libsodium_1.0.11-2_ar71xx.ipk，依赖包；</li></ul><p>另外可以下载 <a href="https://github.com/shadowsocks/luci-app-shadowsocks" target="_blank" rel="noopener">luci-app-shadowsocks</a>，luci-app-shadowsocks 软件包是 shadowsocks-libev 的 LuCI 控制界面，方便用户控制和使用「透明代理」「SOCKS5 代理」「端口转发」功能。<br>下载完 ipk 软件包以后，scp/rsync 拷贝到 OpenWrt 并安装，安装时注意依赖关系，按顺序安装，如果出现错误可根据错误提示 Google 解决：</p><pre><code># opkg install libev*.ipk libmbedtls*.ipk libpcre*.ipk libsodium*.ipk# opkg install shadowsocks-libev*.ipk luci-app-shadowsocks*.ipk</code></pre><h1 id="configure-shadowsocks-libev"><a href="#configure-shadowsocks-libev" class="headerlink" title="configure shadowsocks-libev"></a>configure shadowsocks-libev</h1><ol><li>登录 LuCI 后台（web 浏览器输入路由器地址），输入 root 密码，在菜单栏会看到新安装的 <code>Services - ShadowSocks</code>；</li><li><code>Services -&gt; ShadowSocks -&gt; Servers Manage</code>，添加 SS 服务器信息（可购买或自行VPS搭建），可以同时添加多个服务器的配置信息。且服务器地址必须填入实际 IP 地址而非域名；</li><li><code>Services -&gt; ShadowSocks -&gt; General Settings</code>，<code>Transparent Proxy（透明代理）</code>选择刚才添加的服务器，<code>SOCKS5 Proxy（SOCKS5 代理）</code>也选择刚才添加的服务器，<code>Port Forward</code> 不修改（依然是 Disable，具体原因会讲，将使用 dns-forwarder 代替）；</li><li>查看配置信息，确认无误后，点击 <code>Save &amp; Apply</code>，路由器会自动启动 SS，且默认开机自启动；</li><li>局域网下，其他设备，关闭之前配置的代理信息，打开浏览器，「It just works!」；</li></ol><p>注意：这样配置，「It just works!」，但是不够优雅，因为这样是 SS 全局代理，虽然可以代理国外网站，但是国内网站的速度由于走代理会慢不少。因此下面使用 ChinaDNS + DNS-Forwarder 实现国内外 IP 分流。</p><h2 id="Transparent-Proxy"><a href="#Transparent-Proxy" class="headerlink" title="Transparent Proxy"></a>Transparent Proxy</h2><p>透明代理（Transparent Proxy）：对应程序 ss-redir，是 shadowosocks 代理的基础服务，提供 TCP/UDP 透明代理。ss-redir 将客户端的原始数据封装成 shadowsocks 协议内容，转发（常用 ss-redir 作为 iptables REDIRECT 的代理服务器程序）给 shadowsocks server，实现透明转发。</p><ul><li>主服务器：透明代理使用的默认服务器（TCP 透明代理、端口转发两个功能会使用这里选择的服务器），此处从列表中选择你需要使用的服务器。</li><li>UDP服务器：UDP 透明代理使用的服务器，可以和主服务器一致，也可以不同（也就是可以使用不同的服务器分别代理 TCP 和 UDP 连接）。在代理一些外服网络游戏的时候可能比较有用，其他多数情况下可以关闭。开启此项需要服务器支持，服务器端需要开启 UDP 功能。</li><li>本地端口：shadowsocks 服务需要占用一个路由器端口，推荐保留默认，但不能和其他运行的程序有冲突，也不能和下面「SOCKS5 代理」和「端口转发」中的本地端口冲突。<br>ss-redir 与 ss-tunnel 的关系：<a href="https://github.com/shadowsocks/openwrt-shadowsocks/issues/82" target="_blank" rel="noopener">ss-redir已经支持udp了，还需要ss-tunnel吗？</a></li></ul><h2 id="SOCKS5-Proxy"><a href="#SOCKS5-Proxy" class="headerlink" title="SOCKS5 Proxy"></a>SOCKS5 Proxy</h2><p>SOCKS5 代理，对应程序 ss-local，实现 shadowsocks 的 SOCKS5 代理功能，路由器作为 SOCKS5 代理服务器。默认端口 1080。<br><a href="https://www.wikiwand.com/zh-hans/SOCKS" target="_blank" rel="noopener">SOCKS</a> 是一种网络传输协议，主要用于客户端与外网服务器之间通讯的中间传递。SOCKS 是 “SOCKetS” 的缩写。当防火墙后的客户端要访问外部的服务器时，就跟 SOCKS 代理服务器连接。这个代理服务器控制客户端访问外网的资格，允许的话，就将客户端的请求发往外部的服务器。这个协议最初由 David Koblas 开发，而后由NEC的 Ying-Da Lee 将其扩展到版本4。最新协议是版本5，与前一版本相比，增加支持 UDP、验证，以及 IPv6。<br>根据OSI模型，SOCKS是会话层的协议，位于表示层与传输层之间。（shadowsocks 只代理传输层数据 TCP/UDP，使用网路层 ICMP 协议的 ping 命令无法走 shadowsocks 代理，即使可以代理访问 google.com 也无法 ping 通）</p><h2 id="Port-Forward"><a href="#Port-Forward" class="headerlink" title="Port Forward"></a>Port Forward</h2><p>Port Forward（端口转发），对应程序 ss-tunnel，通常用作转发 DNS。ss-tunnel 将监听 5300 端口（可修改），将监听到的数据包经过 SS 代理，转发给 8.8.4.4:53（可修改），因此可以通过此方法防止 DNS 污染。<br>在局域网下的其他电脑进行指定端口进行 DNS 解析，解析出来的 IP 可通过网络查询是否是真实IP。</p><pre><code>$ dig @192.168.1.1 www.youtube.com -p5300</code></pre><p>注意：由于性能问题（<a href="https://github.com/breakwa11/shadowsocks-rss/issues/264" target="_blank" rel="noopener">ss-tunnel 在使用混淆之后的udp通讯经常被阻断</a>），本文方案中的端口转发改用 DNS-Forwarder，因此这里 Port Forward 设置为 disable。</p><h2 id="Access-Control"><a href="#Access-Control" class="headerlink" title="Access Control"></a>Access Control</h2><p>Access Control（访问控制），这里可以选择配置 SS 的代理范围。分外网（Zone WAN）与内网（Zone LAN）两部分。</p><h3 id="Zone-WAN"><a href="#Zone-WAN" class="headerlink" title="Zone WAN"></a>Zone WAN</h3><p>被忽略IP列表（Bypassed IP List），可以指定一份避免走代理的 IP 列表，例如构造列表 <code>/etc/shadowsocks/ignore.list</code>，里面枚举了国内的 IP 列表，可以避免访问国内网站走代理。（这种方法已不再使用，而是改为 ChinaDNS方案，IP 列表为 <code>/etc/chinadns_chnroute.txt</code>，原理类似）<br>创建国内IP段列表，用于忽略国内目标主机。防止走代理，可以将 IP 添加到 ignore.list 中。</p><pre><code># mkdir /etc/shadowsocks# wget -O- &apos;http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest&apos; | awk -F\| &apos;/CN\|ipv4/ { printf(&quot;%s/%d\n&quot;, $4, 32-log($5)/log(2)) }&apos; &gt; /etc/shadowsocks/ignore.list</code></pre><p>代理方法（<code>Access Control - Zone WAN - Proxy method</code>）选择忽略列表（ignore list），并在 –custom– 中填入 <code>/etc/shadowsocks/ignore.list</code>。代理协议（Proxy protocol）选择 TCP+UDP。<br>注意：本文使用 ChinaDNS 方案，安装 ChinaDNS 后，这里的 ignore list 选择 ChinaDNS 即可。</p><p>额外被忽略IP（Bypassed IP）：这个列表中的 IP 强制绕过 shadowsocks 代理，如果有多组 shadowsocks 服务器的可以将所有服务器的 IP 填进去，如果是单服务器不用填；其他按需添加。<br>强制走代理IP（Forwarded IP）：这个列表中的 IP 强制走 shadowsocks 代理，填入 8.8.8.8 和 8.8.4.4，其他按需添加。</p><h3 id="Zone-LAN"><a href="#Zone-LAN" class="headerlink" title="Zone LAN"></a>Zone LAN</h3><p>内网区域（Zone LAN），控制特定内网 IP 的代理方式。</p><ol><li>网络接口：shadowsocks 只作用于勾选了的网络接口。默认 OpenWrt 只有一个LAN区域，此处也只会显示一个接口，也就是：“桥接：br-lan”；一般情况勾选它就行。当路由配置了多个LAN区域时候，则会显示多个。</li><li>代理类型：内网区域默认的代理方式。<ul><li>正常代理：使用外网区域设置的方式。</li><li>直接连接：忽略外网区域的设置，不走代理。</li><li>全局代理：忽略外网区域的设置，强制走代理。</li></ul></li><li>代理自身：路由设备自身的代理方式。</li><li>内网主机：单独配置内网特定IP的代理方式。</li></ol><h1 id="Pure-DNS"><a href="#Pure-DNS" class="headerlink" title="Pure DNS"></a>Pure DNS</h1><h2 id="DNS-cache-poisoning"><a href="#DNS-cache-poisoning" class="headerlink" title="DNS cache poisoning"></a>DNS cache poisoning</h2><p>只要安装好第一节的 shadowsocks-libev，就已经可以访问众多网站了。但是依然有几个问题：</p><ol><li>全局代理的弊端：最简单的配置，直接添加 SS 服务器信息，并打开（Transparent Proxy）和（SOCKS5 Proxy），这样的路由器是 SS 全局代理。可以通过添加 ignore list 的办法禁止国内 IP 走代理。</li><li>DNS 污染，只要是 53 端口的 DNS 报文，都会面临 DNS 污染的情况。<ul><li>直接污染：使用国外的知名 DNS 服务器（8.8.8.8 / 8.8.4.4），会在出口被篡改 DNS 报文的 IP 地址（DNS 攻击）。</li><li>间接污染：使用国内的知名 DNS 服务器（114.114.114.114 / 119.29.29.29），在访问国外网站时会上溯至国外根服务器访问，依然面临 DNS 报文中 IP 地址被篡改的问题，并且有投毒效果，一人访问，多人中毒。</li></ul></li></ol><p><a href="https://www.wikiwand.com/zh-hans/%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BC%93%E5%AD%98%E6%B1%A1%E6%9F%93" target="_blank" rel="noopener">域名服务器缓存污染（DNS cache poisoning）</a>，又称域名服务器缓存投毒（DNS cache poisoning），是指一些刻意制造或无意中制造出来的域名伺服器封包，把域名指往不正确的IP位址。一般来说，在互联网上都有可信赖的网域伺服器，但为减低网络上的流量压力，一般的域名服务器都会把从上游的域名服务器获得的解析记录暂存起来，待下次有其他机器要求解析域名时，可以立即提供服务。一旦有关网域的局域域名服务器的缓存受到污染，就会把网域内的电脑导引往错误的服务器或伺服器的网址。<br>对所有经过出口的 DNS 报文（UDP:53）进行 IDS 入侵检测，匹配到黑名单关键词时，立刻伪装目标域名的解析服务器返回虚假的查询结果。由于通常的域名查询没有任何认证机制，而且域名查询通常基于无连接不可靠的UDP协议，查询者只能接受最先到达的格式正确结果，并丢弃之后的结果。</p><p>想要检测目前的 DNS 是否被篡改，很简单的方法：</p><pre><code>$ dig www.youtube.com$ dig @119.29.29.29 www.youtube.com$ dig @114.114.114.114 www.youtube.com</code></pre><p>解析到的 IP 地址，上网检索 IP 地址或 DNS 污染知名 IP 即可，网络上有收录注明污染 IP 地址列表。</p><h2 id="ChinaDNS"><a href="#ChinaDNS" class="headerlink" title="ChinaDNS"></a>ChinaDNS</h2><ul><li><a href="https://github.com/aa65535/openwrt-chinadns" target="_blank" rel="noopener">openwrt-chinadns</a></li><li><a href="https://github.com/aa65535/openwrt-dist-luci" target="_blank" rel="noopener">luci-app-chinadns</a></li></ul><p>ChinaDNS 用于解决 DNS 污染问题，同时可加速国内网站的访问。<br>其原理如下：<br>提供至少一个国内 DNS 服务器和一个国外 DNS 服务器（通过设置 ChinaDNS 的上游服务器），ChinaDNS 收到来自用户的 DNS 请求后，同时向这两个服务器发 DNS 请求。如果从国内 DNS 服务器返回的解析结果为国外 IP，则选择国外 DNS 服务器的解析结果，否则选择国内 DNS 的解析结果（解析速度比国外解析快很多），最后返回给用户。<br>下载对应版本（路由器 CPU 架构）的 <code>ChinaDNS*.ipk</code> 与 <code>luci-app-chinadns*.ipk</code>，并生成国内的 IP 地址列表，用作绕 SS 代理。</p><pre><code># opkg install ChinaDNS*.ipk luci-app-chinadns*.ipk# wget -O- &apos;http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest&apos; | awk -F\| &apos;/CN\|ipv4/ { printf(&quot;%s/%d\n&quot;, $4, 32-log($5)/log(2)) }&apos; &gt; /etc/chinadns_chnroute.txt</code></pre><p>安装完成后，登录路由器的 luci 管理页面 <code>Services -&gt; ChinaDNS</code>，勾选 <code>Enable（启用）</code>和 <code>Enable Bidirectional Filter （启用双向过滤）</code>，其他设置保持默认即可（也可修改本地端口）。<br>默认开启 <code>127.0.0.1:5353</code> 端口，监听 DNS 请求。<code>国内路由表（CHNRoute File）</code>默认位置 <code>/etc/chinadns_chnroute.txt</code>，上游服务器 <code>114.114.114.114,127.0.0.1:5300</code>。（可将国内 DNS 114.114.114.114 改成当前你所在网络的 ISP 所提供的 DNS 服务器 IP，以加快国内域名的解析速度）。<br>这里的国外 DNS 设置为 <code>127.0.0.1:5300</code>，是因为无法直接设置 <code>8.8.8.8</code>，否则会在网络出口被直接污染，需要通过走代理的方法避免污染。<br>走代理有两种方法：</p><ul><li>ss-tunnel，即开启 <code>ShadowSocks - General Settings - Port Forward</code>，将默认监听端口 5300 的 DNS 请求，并转发到目的地（默认为 8.8.4.4:53），实现 DNS 代理。<a href="https://github.com/aa65535/openwrt-chinadns/wiki/Use-DNS-Forwarder" target="_blank" rel="noopener">但是部分 ISP 下使用 ss-tunnel 不稳定，导致 ChinaDNS 无法正常工作，其根本原因是这类的 ISP 的 UDP 不稳定。</a></li><li>DNS-Forwarder，实现类似 ss-tunnel 的端口转发功能，但是使用 ss 代理并 TCP 协议，可靠的多。</li></ul><h2 id="DNS-Forwarder"><a href="#DNS-Forwarder" class="headerlink" title="DNS-Forwarder"></a>DNS-Forwarder</h2><ul><li><a href="https://github.com/aa65535/openwrt-dns-forwarder" target="_blank" rel="noopener">openwrt-dns-forwarder</a></li><li><a href="https://github.com/aa65535/openwrt-dist-luci" target="_blank" rel="noopener">luci-app-dns-forwarder</a></li><li><a href="https://github.com/aa65535/openwrt-chinadns/wiki/Use-DNS-Forwarder" target="_blank" rel="noopener">Wiki - Use DNS Forwarder</a></li></ul><p>安装 <code>dns-forwarder*.ipk</code> 和 <code>luci-app-dns-forwarder*.ipk</code>，录路由器的 luci 管理页面，<code>Services -&gt; DNS-Forwarder</code>，点击 Enable，修改监听端口为 5300，DNS Server 为 8.8.8.8，然后点击 <code>Save &amp; Apply</code>。</p><h2 id="DNS-bridge"><a href="#DNS-bridge" class="headerlink" title="DNS bridge"></a>DNS bridge</h2><p>现在只是启动了 ChinaDNS 与 DNS-Forwarder，还没有把 DNS 桥接通顺（配置端口映射和转发关系）。</p><ol><li><code>luci - Network - Interfaces - WAN - Advanced Settings - Use DNS servers advertised by peer</code> 关闭，避免 WAN 接口连接外网时被上层路由器指定 DNS 服务器。</li><li><code>luci - Network - DHCP and DNS - Server Settings - DNS forwardings</code>，设置为 <code>127.0.0.1#5353</code>，实现 端口 53 到本机端口 5353 的 DNS 转发，即将路由器接收到的 DNS 请求交给 ChinaDNS 处理。</li><li><code>luci - Network - DHCP and DNS - Server Settings - Resolv and Hosts Files - Ignore resolve file</code> 关闭，虽然禁止了 WAN 接口指定 DNS，但是本机的 <code>/etc/resolv.conf</code> 还在，DNS 将会查询其中的 nameservers，这里也关闭。</li><li>局域网内的其他上网设备，将预设的 DNS 删除，则连接 Wi-Fi 后默认 DNS 地址为路由器的 IP 地址，这样就将 DNS 解析交由路由器处理。</li></ol><p>DNS 线路解析：</p><ul><li>国外线路：<code>dnsmasq(:53)</code> –(dnsmasq-china-list)–(DNS forwardings)–&gt; <code>ChinaDNS(:5353)</code> –(CHNRoute File &amp; Upstream Servers)–&gt; <code>ss-tunnel / dns-forwarder (:5300)</code> –( Port Forward / DNS-Forwarder)–&gt; <code>ss server</code> –&gt;8.8.8.8:53</li><li>国内线路：<code>dnsmasq(:53)</code> –(dnsmasq-china-list)–(DNS forwardings)–&gt; <code>ChinaDNS(:5353)</code> –(CHNRoute File &amp; Upstream Servers)–&gt; 114.114.114.114:53</li></ul><ol><li><code>dnsmasq(:53)</code>，路由器的默认 DNS 监听端口，监听局域网内的 DNS 请求，其他设备将 DNS 设置为路由器 IP 后，DNS 请求交由路由器处理；</li><li><code>dnsmasq-china-list</code>，提供一份国内域名的加速列表，国内域名可以直接通过指定的 DNS 服务器解析，并由 dnsmasqn 提供长时间的缓存，提高命中率，没有在加速列表中的国内域名，还可能会再走 ChinaDNS 的加速，所以不用担心列表不足；</li><li><code>DNS forwardings</code>，/etc/config/dhcp（Network - DHCP and DNS），配置 DNS 转发为 <code>127.0.0.1#5353</code>（ChinaDNS），则路由器会将 53 端口的 DNS 转发给 5353 端口的 ChinaDNS 处理；</li><li><code>ChinaDNS(:5353)</code> 的上游 DNS 服务器 配置为 114.114.114.114,127.0.0.1:5300，ChinaDNS 根据 CHNRoute File 确认 IP 的位置，国内默认走 114.114.114.114，国外默认走 127.0.0.1:5300；</li><li><code>DNS-Forwarder(:5300)</code> 监听 5300 端口，并通过转发到 <code>8.8.8.8:53</code>，且在 ShadowSocks - Access Control 已经明确配置 8.8.8.8 必须走代理，最终绕开污染源。</li></ol><h2 id="dnsmasq"><a href="#dnsmasq" class="headerlink" title="dnsmasq"></a>dnsmasq</h2><p><a href="https://www.wikiwand.com/zh-hans/Dnsmasq" target="_blank" rel="noopener">Wiki - dnsmasq</a><br>Dnsmasq 是一个开源的轻量级 DNS 转发和 DHCP、TFTP 服务器，使用C语言编写。Dnsmasq 针对家庭局域网等小型局域网设计，资源占用低，易于配置。<br><strong>对于 OpenWrt 来说默认就安装了 dnsmasq，dnsmasq 监听了 53 端口，是系统的默认 DNS server。</strong><br>Dnsmasq 提供 DNS 缓存和 DHCP 服务功能。作为域名解析服务器（DNS），dnsmasq 可以通过缓存 DNS 请求来提高对访问过的网址的连接速度。作为 DHCP 服务器，dnsmasq 可以用于为局域网电脑分配内网 IP 地址和提供路由。</p><p>编辑配置文件 <code>/etc/dnsmasq.conf</code>，在最后添加一行：</p><pre><code>conf-dir=/etc/dnsmasq.d</code></pre><p>该配置让 dnsmasq 去加载 <code>/etc/dnsmasq.d</code> 目录下所有的配置。例如，生成一个 <code>/etc/dnsmasq.d/gfw.conf</code> 文件，把需要代理的域名代理给 ChinaDNS：</p><pre><code># /etc/dnsmasq.d/gfw.conf --- googleserver=/.google.com/127.0.0.1#5353server=/.googlecode.com/127.0.0.1#5353server=/.googleapis.com/127.0.0.1#5353server=/.gmail.com/127.0.0.1#5353server=/.youtube.com/127.0.0.1#5353</code></pre><p>然后重启 dnsmasq 服务即可：</p><pre><code># /etc/init.d/dnsmasq restart</code></pre><p>因为需要代理的域名很多而且很繁琐，因此这里使用 <a href="https://github.com/felixonmars/dnsmasq-china-list" target="_blank" rel="noopener">dnsmasq-china-list</a> 的代理配置：</p><pre><code># mkdir -p /etc/dnsmasq.d/ &amp;&amp; mv /etc/dnsmasq.d/# wget --no-check-certificate https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/accelerated-domains.china.conf# wget --no-check-certificate https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/bogus-nxdomain.china.conf# wget --no-check-certificate https://raw.githubusercontent.com/felixonmars/dnsmasq-china-list/master/google.china.conf</code></pre><p>配置文件解析：</p><ul><li><code>accelerated-domains.china.conf</code>: Acceleratable Domains. The domain should have a better resolving speed or result when using a Chinese DNS server. 指定了国内的域名直接使用 <code>114.114.114.114</code> 即可，加速国内域名访问。</li><li><code>bogus-nxdomain.china.conf</code>: Known addresses that are hijacking NXDOMAIN results returned by DNS servers. 一些常用的 DNS 劫持 IP。</li><li><code>google.china.conf</code>: Acceleratable Google domains. 加速 Google 域名访问，使用 114 解析 Google 的 IP，只要部分可以，例如 youtube.com 即使 114 也可能是解析错误的。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;Free As The Wind&lt;br&gt;路由器是要带给人们幸福的东西啊！&lt;br&gt;不发光的路由器不是好路由器，是黑暗路由器。&lt;br&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Tutorial" scheme="http://seanxp.com/categories/Tutorial/"/>
    
    
      <category term="Tutorial" scheme="http://seanxp.com/tags/Tutorial/"/>
    
      <category term="Internet" scheme="http://seanxp.com/tags/Internet/"/>
    
      <category term="Router" scheme="http://seanxp.com/tags/Router/"/>
    
      <category term="Shadowsocks" scheme="http://seanxp.com/tags/Shadowsocks/"/>
    
      <category term="DNS" scheme="http://seanxp.com/tags/DNS/"/>
    
  </entry>
  
  <entry>
    <title>異議あり！</title>
    <link href="http://seanxp.com/2017/02/GBA-Ace-Attorney/"/>
    <id>http://seanxp.com/2017/02/GBA-Ace-Attorney/</id>
    <published>2017-02-06T13:48:57.000Z</published>
    <updated>2018-03-11T02:29:34.392Z</updated>
    
    <content type="html"><![CDATA[<p><div align="center"><br><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fch3qkki7sj30go0afaod.jpg" width="480" height="300" alt="逆转裁判全人物"></div></p><p><blockquote class="blockquote-center"><br>人与人的邂逅充满了神奇，各种刑案更是迷题重重，能够遇到你真是有缘。<br>唯一看透了事件真相的，却是外表看似常人智慧却过于小孩的成步堂龙一。<br></blockquote><br><br><a id="more"></a></p><h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>今天通关了《逆转裁判2》，很喜欢这款 GBA 游戏，特此记之，并安利给其他 GBA 游戏爱好者（含轻微剧透）。</p><h2 id="逆转裁判"><a href="#逆转裁判" class="headerlink" title="逆转裁判"></a><a href="https://www.wikiwand.com/en/Phoenix_Wright:_Ace_Attorney" target="_blank" rel="noopener">逆转裁判</a></h2><p>《逆转裁判》最早于2001年由卡普空（CAPCOM）发行于日本 Game Boy Advance 平台。逆转裁判系列（日语：逆転裁判）是 Capcom 制作的法庭战斗冒险游戏，游戏中玩家扮演辩护律师，通过侦查收集证据，然后在假想规则的日本法庭上质疑检察官和证人的证词来为嫌疑人获得“无罪”的判决作为胜利目的。<br><img src="https://ww1.sinaimg.cn/large/006tNbRwly1fch3q35q4jj30k50deta9.jpg" alt="1"><br>初次玩《逆转裁判》，感觉真是太赞了，后悔没有早一点接触这款游戏神作！作为一款 2001 年发售的经典 GBA 游戏，却因为种种原因一直无缘玩到这款游戏，直到近日才入坑，通关《逆转裁判》。</p><ul><li>第一章牛刀小试，主要是指导玩家具体的「法庭」玩法，出场人物与证据都很少，让玩家熟悉「威慑」与「举证」操作。</li><li>当时才玩到第二章，我原认为的女主「绫里千寻」就牺牲了！虽然是引出灵媒师的剧情杀，但是感觉剧情处理得太随意了吧。真女主「绫里真宵」登场，由于开始已经透露凶手，所以这一章主要是指导玩家进行「侦探」环节。找齐足够的证据，才能触发「法庭」阶段，然后通过「威慑」获取足够的信息，通过「举证」反驳证人的观点，最终指出真正的犯人。玩到这一章才算真正有了「辩驳公堂」的感觉。  <blockquote class="blockquote-center"><br>  当人们开始回避问题，意味着问题触及到答案的本质。<br>  真相只有一个！<br>  小中大，接受正义的制裁吧！<br>  </blockquote></li><li>第三章故事开始变得扑朔迷离起来，不再透露凶手，需要玩家自己在各个场所「调查」并搜集「证据」，并与多个事件关键人物「对话」触发剧情发展。而且游戏节奏也拉长，变成了「侦探」-&gt;「法庭」-&gt;「侦探」-&gt;「法庭」的节奏。不过游戏的套路也逐渐被玩家所掌握。</li><li>第四章是节奏最长的一章，也是最具有「逆转」感的一章。而且因为前几章节的铺垫，故事越来越吸引人。证据变多，证人变多而且各种漏洞证词。「法庭」环节变得越来越紧张，律师与检察官之间「異議あり！」的相互逻辑碰撞，一个小证据就可以被用来阐述好几种观点。</li></ul><p>不到 10 MB 的一款 GBA 游戏，能把故事讲的富有条理并且前后铺垫，不同人物虽然只有几种表情动作，但是通过大量的文字对话把人物性格描述出来，配乐也是恰到好处，游戏节奏有欢乐、悲伤、欣喜、悬疑、惊恐等要素，真是不可多得。而且细节到位，例如上面的通关图片，各个人物的表情动作，还有半透明的千寻老师，制作组真用心了！相比现在的一些大型单机游戏，「十分无脑」，画质自然因为时代原因精细了不少，但是游戏剧情有漏洞，人设崩盘前后矛盾，玩过之后可能没有留下多少回忆。<br>当然这款游戏也存在瑕疵，游戏自由度不高，很多内容触发不了，干扰玩家的选项很少，证据来来回回就那么多，很多时候玩家可能「先果后因」，即一个个证据拿来试验，中了触发剧情，才能理解为什么是用这个证据。所以这种游戏真的全当娱乐，存在逻辑推理是真，但真要到实际生活中，没有了游戏的限制，案发现场那么多东西，你知道哪个才是决定性证据吗？同样的道理，类似的侦探题材的动漫，很多不是你推断不出来，是由于漫画动画的限制，你获取不到破案足够的信息点。例如柯南突然像摸了电门一样，脑后一道闪电劈过，可以镜头前的我什么也看不到，真的只能「？？？」了。<br>总之，瑕不掩瑜，《逆转裁判》是一款极佳的 GBA 侦探题材游戏，虽然可能不会再玩第二遍了，但偶尔听听配乐还是感觉到满满的回忆啊！</p><h2 id="逆转裁判2"><a href="#逆转裁判2" class="headerlink" title="逆转裁判2"></a><a href="https://www.wikiwand.com/zh/%E9%80%86%E8%BD%89%E8%A3%81%E5%88%A42" target="_blank" rel="noopener">逆转裁判2</a></h2><p><img src="https://ww3.sinaimg.cn/large/006tNbRwly1fch3p8whzmj30jw0jkjsu.jpg" alt="2"><br>《逆转裁判2》今天通关了，玩出了和《逆转裁判》不一样的感觉！</p><ul><li>第一章依旧是「法庭」环节的牛刀小试，编剧也是煞费苦心，为了能够指导新手玩家，竟然让龙一「强行失忆」，成为一个新手律师，又可以出新手指导喽！不过也是因为事先被剧透，整个过程毫无压力，亦无逆转可言。</li><li>第二章之后就是正式的游戏玩法，「侦探」环节与人物对话并搜集证据，「法庭」环节通过「威慑」与「举证」反驳证人的证言。不过游戏创新性提出一个「心灵枷锁」，用「举证」功能增加「侦探」的难度，有时候可能多个人物连环「心灵枷锁」。不过套路是出现「心灵枷锁」后，必然先去其他地方搜集证据，然后去「破壁」。话说游戏开始信息量太少，玩家总是在「法庭」环节通过「威慑」证人获取到足够的信息得以破案（那么上法庭之前都干嘛去了～），不过这是游戏本质限制的，毕竟开庭就知道凶手就没有「逆转」的感觉了。这一章节很巧妙的利用的「招魂改变容貌」与「姐妹容貌可相似」，造成逆转效果，最后还有一个「狸猫换太子」的逆转，不过我看到「打开左门逃出」的时候就猜到了这个可能性。</li><li>第三章，套路很明显。为了强调「逆转」，肯定是「侦探」到「法庭」，然后证据不足，继续「侦探」，此时必定出现上次由于各种原因没能露面的新人物，不用怀疑，八成就是 TA 没跑了。《逆转裁判1》也是这样的套路。故事是一个悲伤的故事，所有事故都是因“小公主”米莉卡而起，很难想象她竟然还能这样的笑对镜头（可怕的是她对自己的所作所为一无所知，父亲猝死的第二天还在为狮子莱恩的死而伤心），很是同情轮椅上的阿库罗与老好人团长。</li><li>第四章，前面每个章节都要铺垫一句好基友「御剑怜侍」，还故意说的很吓人「御剑怜侍已经不在了」诸如此类，就猜到最后又是和他对决了。不过游戏的高度上升到「律师的目的是“无罪”还是“正义”」这样的地步，很像《胜者即是正义（Legal High）》（也是我十分喜欢的一部日剧，强力推荐）。故事虽然扑朔迷离但是中途已经暴露了真正凶手，最后只是成布堂龙一内心的拷问与战略上的缓兵之计。第四章出现了好几个第一作的游戏人物，这种人物的复用虽然可以看到之前的很多人物，但总给人一种“世界很小”的感觉。另外剧情对杀手「虎狼死家」的模糊化处理，可能会让未成年小孩子意外觉得老管家很酷很仁义，法庭对证也是用了一个颇为可爱的录音机形象，最后逃离警方追捕逃之夭夭。这种处理让我有一些不适，虽然「虎狼死家」满口“仁义”、“信赖”，说话也很有礼貌，偶尔说话很调皮，但是仔细一想却让人头皮发麻，你相信一名职业杀手的“仁义”？他的“仁义”与“信赖”不过是追求更高知名度以便更好盈利接单的方式，不分青红皂白就接单杀人（藤见野君虽然因为明星竞争变得越来越可恶，最后甚至伪造遗书陷害他人，但也罪不致死，且被他人私法制裁），这样的行为根本不能被原谅。</li></ul><h3 id="Legal-High"><a href="#Legal-High" class="headerlink" title="Legal High"></a>Legal High</h3><ul><li><a href="https://movie.douban.com/subject/10491666/" target="_blank" rel="noopener"> 豆瓣 - 《胜者即是正义（Legal High）》</a></li><li><a href="https://movie.douban.com/subject/23997724/" target="_blank" rel="noopener"> 豆瓣 - 《胜者即是正义2（Legal High 2）》</a></li><li><a href="https://www.bilibili.com/video/av637684/" target="_blank" rel="noopener">bilibili - Legal High</a></li><li><a href="https://www.bilibili.com/video/av1126368/" target="_blank" rel="noopener">bilibili - Legal High 2</a></li><li><a href="https://www.zhihu.com/question/28226028" target="_blank" rel="noopener">《Legal High》呈现的是怎样的三观？</a></li><li><a href="https://www.zhihu.com/question/30716612" target="_blank" rel="noopener">为什么律师会帮罪大恶极的人辩护？律师会有负罪感吗？</a></li></ul><p>因为《逆转裁判2》第四章的主题升华为「律师的目的是“无罪”还是“正义”」，这里需要安利一下《胜者即是正义（Legal High）》的观点。<br>《Legal High》在第一集就抛出这样的一个观点：<strong>不管他杀没杀人，都和我无关。检察厅的证据不足，所以他被无罪释放了，这就是法。律师不是神，是不可能知道真相的。</strong></p><p><a href="https://www.zhihu.com/question/28226028" target="_blank" rel="noopener">《legal high》呈现的是一个典型的“法律人”的三观</a>：</p><ul><li>法律事实是根据通过质证、没有被排除的证据认定的推断的事实，法律事实不是真实，而仅仅是一种推测。</li><li>法律人相信证据，而不轻信一面之词，更不诉诸情感，对“我弱我有理”更是嗤之以鼻，这就是所谓的“证据意识”。</li><li>法律人不是机器猫，不执着所谓的“真相”，只要经过质证后的证据形成了一个法律事实，那么法律人就相信它就是真的，这就是所谓的“程序正义”。</li><li>实体正义是我们最终的追求，但实体正义非人力所能够掌握，而且容易被公权力以实体正义的借口侵犯个人的权利，因此我们只能相信程序正义。</li></ul><p><strong>为自己委托人的利益全身而战，我们律师能做的只有这个。</strong><br>所以最后为了防止委托人被「虎狼死家」定为“下一目标”，我选择了“判其有罪”。 :-)</p><h2 id="逆转裁判3"><a href="#逆转裁判3" class="headerlink" title="逆转裁判3"></a><a href="https://www.wikiwand.com/zh-hans/%E9%80%86%E8%BD%89%E8%A3%81%E5%88%A43" target="_blank" rel="noopener">逆转裁判3</a></h2><p><img src="http://ww4.sinaimg.cn/large/006tKfTcgy1fek52nm9v7j30kl0dotam.jpg" alt="v3"></p><p>2017年4月，通关了逆转系列三部曲的《逆转裁判3》！</p><p>逆转系列真是经典，十几年前的GBA游戏，大小也不过10MB左右，在现在不过是一部高音质MP3音乐文件的大小罢了，CAPCOM公司却能用这么短小精悍的游戏空间下讲述这样一个完美的故事。<br>逆转系列虽然由于年代限制，并没有现在的诸多开放世界自由，但是逆转系列的每一个人物，都是用心去构建的人设，前几话甚至是前几部中的人物都可以仍然在逆转世界中生活着（虽然也有些偷懒的感觉，例如矢张政志真的是各种职业龙套），让人感觉很温馨。</p><p>不过依然有些许瑕疵，就是这个系列难以避免的问题，过于单流程化。虽然逆转3的剧情很棒，但是“设计感”也很强，因此对于一些人就很容易卡关。因为如果你没有确切地调查某一个证据或触发某一个时间，可能游戏进程就会一直卡住；其次就是游戏中给出的选择较小，对于一个特定人物可以触发的证物不多，这样很多人就可以通过Save/Load大法以及穷举法来强行通关，这样就是当成步堂龙一已经举出证据开始反驳时，玩家才恍然大悟。</p><ul><li>第一章《回忆中的逆转》，这章很关键，一是作为游戏开头，需要有玩家指引的部分，这一部就很巧妙的通过引入绫里千寻的第二次辩护来进行新手指导。当然作为新手指导关卡，还是我们熟悉的老朋友亚内武文检察官作为检察官进行诉讼，最后也讲述了亚内武文检察官发型的由来～这一章节引入了成步堂龙一与绫里千寻相识的故事，这次案件也是成步堂龙一决心作为一名律师的重要原因之二（另一个就是为了御剑怜侍）。</li><li>第二章《被盗的逆转》，独立关卡，和主线剧情没有关系。</li><li>第三章《逆转的配方》，也是独立关卡。独立关卡的套路基本一致，经过就是「引子」=&gt;「侦探」=&gt;「法庭」=&gt;「侦探」=&gt;「法庭」这个套路模式，第二章重点是「角色的逆转」，第三章重点是「时间的逆转」，这里不多剧透了。</li><li>第四章《最初的逆转》，这章节的印象很深，因为这章节也算是本系列的前传，讲述了绫里千寻的第一次“失败”辩护的故事，该故事由第一章已经引入悬念，直到这一章节才徐徐展开，也是逆转系列诸多主角的人生相遇点与转折点。因为第一章，因此看到美柳千奈美很容易猜到结局，逆转易如反掌。不过最后的结局实在让人唏嘘不已。<br><img src="http://ww1.sinaimg.cn/large/006tKfTcgy1fek5u7alcgj30kj0dn0v6.jpg" alt="c4"></li><li>第五章《最终的逆转》，篇幅最长，也是主线剧情，花了一天的时间通关。此章节由玩家对样貌与美柳千奈美相似的尼姑引入，也让我一度以为是美柳千奈美的越狱。最后的「真相」让人震惊，为一对母女感到悲哀，而为另一对母亲感到欣慰。悲哀的是，自己一直反感的美柳千奈美，不过是父母失败婚姻下导致的产物。其母亲对宗家掌门的觊觎之情一直到深陷囚牢也不甘心，甚至想出陷害自己亲生女儿的计划也要夺回掌门宝座，真是悲哀。14岁就学会利用周围的人来向自己的父亲复仇，19岁残忍杀死自己的同父异母的姐姐，20岁又为隐瞒真相杀害陷害好几人，最后竟然到死也要向仇人复仇，在这样美丽可爱的外表下隐藏着多么一颗丑陋的心。与之相比，能够从小脱离父亲与姐姐，在偏远的叶樱院长大的绫美真是幸运地得以健康成长。而另一对母女，绫里舞子因为自身灵力得到掌门之位，却因为掌门之位遭人陷害，不仅一直被自己的妹妹所仇视，还无法与自己的两位女儿相见。而当掌门最重要的信物被拆开时，我们得以一窥这位母亲的内心。虽然仓院之罐可能金钱价值为零，但是供子的灵魂却一直仍在守护着绫里一脉吧。<br><img src="http://ww3.sinaimg.cn/large/006tKfTcgy1fek6ovntxgj30js0cvtak.jpg" alt="c5"><br>结果一位女儿为了母亲走上律师道路最终残遭杀害，而另一位女儿屡次遭分家陷害。作为母亲，也只有默默的旁边守护却不敢与女儿相认，着实另人感动。在这样相互仇视的宗家与分家，真宵与春美之间的亲情真是难能可贵。<br><img src="http://ww4.sinaimg.cn/large/006tKfTcgy1fek6ucgp7fj30kl0d6jtr.jpg" alt="c51"><br>而这系列的迷之检察官戈德，戴着科幻面具，喝着品质咖啡，似乎对什么都不在乎的人，原来也是一位可怜人。对千寻的第一次辩护帮助很大（简直是宠溺），却因为此事被牵连，不仅残疾昏迷，醒来还失去了“一切”，生存的意义就是去守护「曾经的一切」。最后留下红色眼泪说着“男人只会一切都结束的时候哭泣”。让我郁闷的事，事情的发展其实不用这样收场吧？<br>为何不事先预防事情的发生，可以解释是预防这次还有下次，但是检察官完全可以控制牢中的“源头”，没有必要等待事情的发成，结果发生了那样的事情，死亡。<br>其实一拳一棍敲晕的事情，何必动刀呢？感觉逆转世界很迷，很多事情其实不需要人命吧？不过看看现实世界况且有那么多的命案呢。<br>最后，即使被妹妹纪妹子仇恨，且多次陷害自己的女儿，绫里舞子也依然爱护着春美，这份爱甚至超越了春美的母亲纪美子与姐姐千奈美。纪美子只是当春美是夺回掌门之位的工具，从有目的地生育春美与教育就看出来了。而千奈美，无论是对母亲、父亲、双胞胎妹妹、同母异父妹妹、同父异母妹妹、前男友等等，都没有感情，过度自私的人，最后只能回到自己的世界，为自己的失败永远懊悔下去。<br><img src="http://ww2.sinaimg.cn/large/006tKfTcgy1fek52vbumjj30kk0cxjsp.jpg" alt="c5-3"><br>这一系列最出彩的就是这一、四、五主线剧情，情节也是迭代起伏颇具逆转色彩。通关之后久久难以平复心情，再看本文开头那张逆转系列全人物图，又是一番不同的滋味。<br>这大概就是逆转系列的魅力所在吧。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://ww1.sinaimg.cn/large/006tNbRwly1fch3qkki7sj30go0afaod.jpg&quot; width=&quot;480&quot; height=&quot;300&quot; alt=&quot;逆转裁判全人物&quot;&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;人与人的邂逅充满了神奇，各种刑案更是迷题重重，能够遇到你真是有缘。&lt;br&gt;唯一看透了事件真相的，却是外表看似常人智慧却过于小孩的成步堂龙一。&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Game" scheme="http://seanxp.com/categories/Game/"/>
    
    
      <category term="Review" scheme="http://seanxp.com/tags/Review/"/>
    
      <category term="Game" scheme="http://seanxp.com/tags/Game/"/>
    
      <category term="GBA" scheme="http://seanxp.com/tags/GBA/"/>
    
  </entry>
  
  <entry>
    <title>The GNU Privacy Guard</title>
    <link href="http://seanxp.com/2017/02/gpg/"/>
    <id>http://seanxp.com/2017/02/gpg/</id>
    <published>2017-02-03T11:15:35.000Z</published>
    <updated>2018-03-11T02:29:34.393Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://www.gnupg.org/" target="_blank" rel="noopener">The GNU Privacy Guard</a></li><li><a href="https://www.wikiwand.com/zh-hans/GnuPG" target="_blank" rel="noopener">GPG 维基百科</a></li><li><a href="http://www.ruanyifeng.com/blog/2013/07/gpg.html" target="_blank" rel="noopener">GPG 入门教程</a></li><li><a href="https://www.madboa.com/geek/gpg-quickstart/" target="_blank" rel="noopener">GPG Quick Start</a></li><li><a href="https://help.ubuntu.com/community/GnuPrivacyGuardHowto" target="_blank" rel="noopener">Gnu Privacy Guard Howto</a></li><li><a href="https://wiki.archlinux.org/index.php/GnuPG" target="_blank" rel="noopener">ArchLinux GunPG</a></li></ul><a id="more"></a><h1 id="Why-Use-GnuPG"><a href="#Why-Use-GnuPG" class="headerlink" title="Why Use GnuPG?"></a><a href="https://www.phildev.net/pgp/gpgwhy.html" target="_blank" rel="noopener">Why Use GnuPG?</a></h1><p>PGP is useful for two things:</p><ol><li>Privacy and Security</li><li>Authenticity</li></ol><p>对比《连城诀》，第一步是「唐诗选辑」（不过用口水解密不够文雅），第二部是「唐诗剑法」（没有师傅认证亲传武功是不行的），最后才解密出「江陵城南偏西天宁寺大殿佛像向之虔诚膜拜通灵祝告如来赐福往生极乐」。<br>当然也有类似凌退思这样“密码字典暴力破解”的方法 :-)<br>所以我们的 GPG 钥匙长度要设置的长长长一些。</p><h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><h2 id="Generate-GPG-Keys"><a href="#Generate-GPG-Keys" class="headerlink" title="Generate GPG Keys"></a>Generate GPG Keys</h2><pre><code>$ gpg --gen-key</code></pre><p>细节参考<a href="http://www.ruanyifeng.com/blog/2013/07/gpg.html" target="_blank" rel="noopener">GPG入门教程</a>，写的非常详细，这里不再赘述。</p><p>查看本机公钥（<code>.gnupg/pubring.gpg</code>）：<code>$ gpg --list-keys</code><br>查看本机私钥（<code>.gnupg/secring.gpg</code>）：<code>$ gpg --list-secret-keys</code></p><p>本文假设生成的 GPG Public Key ID 是 <code>0x5655CA935F09337F</code>。<br>生成公私钥后，可以进行下列配置：</p><ol><li><p>Set your key as the default key by entering this line in your ~/.bash_profile (along with any other environment variables to be exported):</p><pre><code>export GPGKEY=0x5655CA935F09337F</code></pre><p> 设置 shell 变量 <code>$GPGKEY</code> ，这样以后不再需要记住 Key ID ：</p><pre><code>$ gpg --list-keys $GPGKEY$ gpg --list-secret-keys $GPGKEY</code></pre></li><li><p>Now restart the gpg-agent and set the relevant environment variable:</p><pre><code>$ killall -q gpg-agent$ eval $(gpg-agent --daemon)$ export GPGKEY=0x5655CA935F09337F</code></pre><p> 启动<code>gpg-agent</code>（功能类似<code>ssh-agent</code>），输入一次 GPG 私钥密码以后，<code>gpg-agent</code> 自动将私钥密码拷贝到内存中供下次使用，下次不用再输入密码。<br> 注意：安全性与便捷性之间需要取舍。<code>gpg-agent / ssh-agent</code> 固然便捷许多，但是也为他人大开方便之门。如果他人连接进本机，也无需输入密码而使用 GPG / SSH 。</p></li></ol><h2 id="Export-Public-Key"><a href="#Export-Public-Key" class="headerlink" title="Export Public Key"></a>Export Public Key</h2><pre><code>$ gpg --armor --output key.pub.asc --export $GPGKEY$ gpg --output key.pub --export $GPGKEY</code></pre><p>导出本机的公钥，提供给他人。</p><ul><li><code>--armor</code>, create ASCII armored output; 导出文字版本的 GPG 公钥，故用后缀 <code>.asc</code> 表示，这种格式比较常用，可直接公布在网站页面中；</li><li>无<code>--armor</code>参数，导出二进制格式的 GPG 公钥；</li></ul><h2 id="Sends-Public-Key-to-Keyserver"><a href="#Sends-Public-Key-to-Keyserver" class="headerlink" title="Sends Public Key to Keyserver"></a>Sends Public Key to Keyserver</h2><p>除了直接导出公钥提供给他人以外，也可以将公钥发布到钥匙服务器 keyserver，供他人搜索下载：</p><pre><code>$ gpg --keyserver hkp://keys.gnupg.net --send-keys $GPGKEYgpg: sending key 5F09337F to hkp server keys.gnupg.net</code></pre><p>服务 <code>keys.gnupg.net</code> 背后是一组服务器，它们之间的信息同步需要一定的时间，刚刚提交公钥可能不会立即搜索就有结果，只要过一段时间（最长可能要几小时或者几天）就好了。<br>公钥服务器会保存发布的公钥，直到其过期<code>expire</code>为止。建议不要发布永不过期的公钥，毕竟 <code>Shit happens</code> 。或者事前未雨绸缪，生成一份撤销证书线下保存好。</p><p>注意：任何人都可以冒充你的名义上传公钥到 GPG 服务器，所以对方搜到以你的名义发布的公钥，不一定真的是你发布的。为了避免这个问题，你需要公布主钥的指纹。GPG 导入公钥后需要手动设置信任度。这时候对方就可以通过对比计算得到的主钥指纹和你提供的主钥指纹，来确定导入的主钥的合法性。</p><pre><code>$ gpg --fingerprint &lt;key ID&gt; | perl -nE &apos;$.-2 or s/^\h+// and print&apos; | tee fingerprint</code></pre><h2 id="Generate-Revocation-Key"><a href="#Generate-Revocation-Key" class="headerlink" title="Generate Revocation Key"></a>Generate Revocation Key</h2><p><strong>A revocation certificate must be generated to revoke your public key if your private key has been compromised in any way.</strong> It is recommended to create a revocation certificate when you create your key. Keep your revocation certificate on a medium that you can safely secure, like a thumb drive in a locked box.<br><strong>Anybody having access to your revocation certificate can revoke your key, rendering it useless.</strong><br><strong>For security purposes, there is no mechanism in place to revoke a key without a revocation certificate.</strong> As much as you might want to revoke a key, the revocation certificate prevents malicious revocations. Guard your revocation certificate with the same care you would use for your private key.</p><p><code>Shit happens</code>，因此要做好防护措施。为自己的公钥设置一份撤销证书，用于将不再安全的公钥从服务器上撤回。<br>什么情况下公钥会变得“不再安全”？自然是对应的私钥可能已经泄露的情况下，此时别人再用这样的公钥对你发送加密文件，可能被私钥窃取者解密（此时私钥的解锁密码是最后一道防线）。<br>生成的撤销证书就是一段格式类似文本公钥的字符串，需要严密保存起来。因为任何人都可以拿着这份撤销证书发布到公钥服务器上来撤销你的公钥。然而即使是撤销的证书，也依然可以从公钥服务器中下载。</p><ol><li><p>To revoke your key you need to first create a revocation certificate.</p><pre><code>$ gpg --output revoke.asc --gen-revoke $GPGKEY</code></pre></li><li><p>(第2步、第3步是将来撤销证书所需要执行的操作) Import your revocation certificate</p><pre><code>$ gpg --import revoke.asc</code></pre></li><li><p>(<strong>不到万不得已，即确定私钥已不再安全的情况下，不要执行此操作</strong>) Upload the key to your keyserver of choice.</p><pre><code>$ gpg --keyserver hkp://pgp.mit.edu --send-key [key-ID]</code></pre></li></ol><h2 id="Search-Public-Key"><a href="#Search-Public-Key" class="headerlink" title="Search Public Key"></a>Search Public Key</h2><p>根据<code>用户名（UID）</code>或<code>用户邮箱（email）</code>，可以从公钥服务器中搜索其发布的 GPG Public Key。<br>注意：<strong>任何人都可以用 seanxp 的名义向服务器发布公钥，因此必须审核公钥的指纹是否一致。</strong></p><pre><code>$ gpg --keyserver hkp://pgp.mit.edu --search-keys seanxpgpg: searching for &quot;seanxp&quot; from hkp server pgp.mit.edu(1)     seanxp &lt;seanxp.com&gt;          4096 bit RSA key 0x5655CA935F09337F, created: 2016-11-15, expires: 2026-11-13</code></pre><p>这里搜索到一名号称「seanxp」的人发布的公钥（ID: 0x5655CA935F09337F），为了确认是否是「真•SeanXP」，在 <a href="http://seanxp.com/about/">SeanXP.com/about</a> 页面查看其公布的指纹为</p><pre><code>Key fingerprint = 429D 47BB BDB0 AA92 B8B6  28F7 5655 CA93 5F09 337F</code></pre><p>其中公钥 ID 就是指纹的后面几位数字，发现后16位十六位进制数字相同(<code>5655 CA93 5F09 337F</code>)，<strong>权且相信</strong>是「seanxp」的公钥。<br>为什么是<strong>权且相信</strong>？因为目前只是后16位数字相同，并不是指纹完全匹配。需要导入搜索到的公钥，打印其指纹，再进行匹配。添加公钥到主机后，打印此公钥的指纹：</p><pre><code>$ gpg --fingerprint seanxppub   4096R/0x5655CA935F09337F 2016-11-15      Key fingerprint = 429D 47BB BDB0 AA92 B8B6  28F7 5655 CA93 5F09 337Fuid                 [ultimate] seanxp &lt;seanxp.com&gt;sub   4096R/0x406A8B31846FF748 2016-11-15 [expires: 2026-11-13]      Key fingerprint = 9723 3991 6C7B E775 08C4  38D3 406A 8B31 846F F748</code></pre><p>指纹匹配成功，说明这是正确的公钥。</p><p>注：如果像下面例子（centOS），可以在搜索时查看指纹，可以先匹配指纹再决定是否下载公钥，可以省去不少麻烦。</p><pre><code>gpg: searching for &quot;seanxp&quot; from hkp server keys.gnupg.net(1)     seanxp &lt;seanxp.com&gt;          4096 bit RSA key 429D47BBBDB0AA92B8B628F75655CA935F09337F, created: 2016-11-15, expires: 2026-11-13</code></pre><h3 id="long-keyid-collision"><a href="#long-keyid-collision" class="headerlink" title="long-keyid collision"></a>long-keyid collision</h3><p>有匹配成功的案例，自然有匹配不成功的案例。下面就是一个公钥后8位数字相同的攻击案例：<br>GPG 默认显示 Key ID 的后8位数字（即指纹的后8位），那么就有一些别有用心的人，可以暴力生成后8位相同的公钥来实现欺骗目的。 如下，搜索 <code>Linus Torvalds</code> 的 GPG 公钥，现在知其邮箱是 <a href="mailto:`torvalds@linux-foundation.org" target="_blank" rel="noopener">`torvalds@linux-foundation.org</a>`，进行搜索：</p><pre><code>$ gpg --search-keys torvalds@linux-foundation.orggpg: searching for &quot;torvalds@linux-foundation.org&quot; from hkps server hkps.pool.sks-keyservers.net(1)     Linus Torvalds &lt;torvalds@linux-foundation.org&gt;          2048 bit RSA key 00411886, created: 2014-07-21 (revoked)(2)     Linus Torvalds &lt;torvalds@linux-foundation.org&gt;          2048 bit RSA key 00411886, created: 2011-09-20Keys 1-2 of 2 for &quot;torvalds@linux-foundation.org&quot;.  Enter number(s), N)ext, or Q)uit &gt;</code></pre><p>搜索到两个具有相同的 Key ID 的公钥！这里就需要进行指纹匹配。在网上搜索，发现<code>https://www.kernel.org/category/signatures.html</code>提供有<code>Linus Torvalds</code>的公钥指纹</p><pre><code>Developer         FingerprintLinus Torvalds    ABAF 11C6 5A29 70B1 30AB  E3C4 79BE 3E43 0041 1886</code></pre><p>下面的例子体现出 <code>long Key ID</code> 的好处，更难进行<code>long-keyid collision</code>，后8位容易碰撞相同，后16位碰撞就难的多。</p><pre><code>gpg: searching for &quot;torvalds@linux-foundation.org&quot; from hkps server hkps.pool.sks-keyservers.net(1)     Linus Torvalds &lt;torvalds@linux-foundation.org&gt;          2048 bit RSA key 0x6211AA3B00411886, created: 2014-07-21 (revoked)(2)     Linus Torvalds &lt;torvalds@linux-foundation.org&gt;          2048 bit RSA key 0x79BE3E4300411886, created: 2011-09-20Keys 1-2 of 2 for &quot;torvalds@linux-foundation.org&quot;.  Enter number(s), N)ext, or Q)uit &gt;</code></pre><p>配置显示 <code>long Key ID</code> 是在 <code>~/.gnupg/gpg.conf</code> 中进行配置：</p><pre><code>~/.gnupg/gpg.conf# short-keyids are trivially spoofed; it&apos;s easy to create a# long-keyid collision; if you care about strong key# identifiers, you always want to see the fingerprint.# Display long key IDskeyid-format 0xlong# List all keys (or the specified ones) along with their fingerprintswith-fingerprint</code></pre><h2 id="Import-Public-Key"><a href="#Import-Public-Key" class="headerlink" title="Import Public Key"></a>Import Public Key</h2><p>除了在 GPG 服务器上搜索对方的公钥以外，可以不经过搜索，直接获取指定 Key ID 的公钥：</p><pre><code>$ gpg --recv-key 0x5F09337F$ gpg --keyserver hkp://pgp.mit.edu --recv-key 0x5655CA935F09337F</code></pre><p>建议全部使用长 16 位的 Key ID，防止出现后八位碰撞的问题。<br>也可以直接导入他人的公钥文件，不再通过公钥服务器获取，尤其国内线路经常无法访问到公钥服务器：</p><pre><code>$ wget http://seanxp.com/about/0x5655CA935F09337F-public.key$ file 0x5655CA935F09337F-public.key0x5655CA935F09337F-public.key: PGP public key block Public-Key (old)$ gpg --import 0x5655CA935F09337F-public.key</code></pre><p>这里也需要再核对一下指纹，因为这里是通过 <code>http</code> 获取的公钥，可能出现<code>中间人攻击</code>。中间人既然能篡改你所获取到的公钥，也可能篡改 http 网页上的指纹，因此凡是 http 网页上的公钥和指纹，都要保持怀疑态度。最好是在可靠的源头（https 或 email 联系）确认公钥的合法性。而 <code>https</code> 也需要防范中间人攻击，要确保本机的 SSL 证书链的可靠性。</p><h2 id="Sign-Key"><a href="#Sign-Key" class="headerlink" title="Sign Key"></a>Sign Key</h2><p>对于校验指纹无误的公钥，可以用本机私钥进行签名。签名公钥的流程：</p><ol><li><p>校验指纹（只有先确认可靠指纹的来源，才能校验本机获取到的公钥指纹的可靠性，再次提醒 http 页面是不可靠的）</p><pre><code>$ gpg --fingerprint seanxp</code></pre></li><li><p>指纹校验成功，则用本机私钥对该公钥进行签名（需要本机私钥授权，即需要输入本机私钥的密码，可防止他人授权）</p><pre><code>$ gpg --sign-key seanxp$ gpg --local-user seanxp --sign-key torvalds@linux-foundation.org</code></pre></li><li><p>校验失败，则删除错误的公钥。</p><pre><code>$ gpg --delete-keys seanxp</code></pre></li></ol><p>为什么要用本机私钥对公钥进行签名呢？<br>防止他人篡改本机的可靠公钥，如果他人想用虚假公钥替换可靠公钥，下次使用该公钥，系统会提示公钥不可靠（所有未签名的公钥都会提示不可靠的信息）。<br>经过 <code>gpg --sign-key</code> 签名的公钥，成为了 <code>trust: unknown validity: full</code>，即现在确认该公钥是有效的（validity），但是还未信任该公钥。信任公钥需要用到交互命令<code>--edit-key</code>。</p><h2 id="Edit-Key"><a href="#Edit-Key" class="headerlink" title="Edit Key"></a>Edit Key</h2><pre><code>$ gpg --edit-key seanxp</code></pre><p>编辑公钥，有很多功能：</p><ul><li>fpr, show key fingerprint</li><li>sign, sign selected user IDs</li><li>trust, change the ownertrust</li><li>enable, enable key</li><li>disable, disable key</li><li>passwd, change the passphrase</li></ul><p>对于已经校验指纹无误，并已经通过 <code>gpg --sign-key</code> 签名的公钥，可以在编辑公钥下设置其信任度：</p><pre><code>$ gpg --edit-key torvalds@linux-foundation.org...gpg&gt; trustpub  2048R/0x79BE3E4300411886  created: 2011-09-20  expires: never       usage: SC                               trust: unknown       validity: fullsub  2048R/0x88BCE80F012F54CA  created: 2011-09-20  expires: never       usage: E[  full  ] (1). Linus Torvalds &lt;torvalds@linux-foundation.org&gt;Please decide how far you trust this user to correctly verify other users&apos; keys(by looking at passports, checking fingerprints from different sources, etc.)  1 = I don&apos;t know or won&apos;t say  2 = I do NOT trust  3 = I trust marginally  4 = I trust fully  5 = I trust ultimately  m = back to the main menuYour decision? 4pub  2048R/0x79BE3E4300411886  created: 2011-09-20  expires: never       usage: SC                               trust: full          validity: fullsub  2048R/0x88BCE80F012F54CA  created: 2011-09-20  expires: never       usage: E[  full  ] (1). Linus Torvalds &lt;torvalds@linux-foundation.org&gt;Please note that the shown key validity is not necessarily correctunless you restart the program.gpg&gt; quit</code></pre><p>关于信任程度的设置，参考<a href="https://www.reddit.com/r/GnuPG/comments/2knpbo/question_clarification_about_trustvalidity/" target="_blank" rel="noopener">Reddit - Question: clarification about trust/validity</a>：</p><ol><li><p>If you want to privately mark a key as valid, you should use the <code>--lsign-key</code> command.</p><pre><code>--lsign-key nameSigns a public key with your secret key but marks it as non-exportable. This is a shortcut  version  of the subcommand &quot;lsign&quot; from --edit-key.</code></pre></li><li><p>If you want to publicly attest that a key is valid, you should use the <code>--sign-key</code> command.</p><pre><code>--sign-key nameSigns  a  public  key  with  your  secret key. This is a shortcut version of the subcommand &quot;sign&quot; from --edit.</code></pre></li><li>Use <code>gpg --edit-key &lt;keyid&gt;</code>, then enter the command “trust” then select the level of trust you have in the key’s owner.<ul><li>“Marginal” means that key is trusted to be part of a group of introducers.</li><li>“fully” means a signature from that key is all it needs to make another key valid. (Typically, signatures from three marginal sources are needed to mark a key as valid.)</li><li>“ultimately” means the key is your key.</li></ul></li></ol><p>还可以更改本机私钥的密码：</p><pre><code>$ gpg --edit-key $GPGKEY...gpg&gt; passwd...gpg&gt; save</code></pre><h2 id="Encrypt"><a href="#Encrypt" class="headerlink" title="Encrypt"></a>Encrypt</h2><p>GPG 的一大用处，就是用他人的公钥加密文件，通过不可靠的网络传输过去，由对方的私钥解密，完成通信任务。 这里用自己的公钥加密，模拟练习（自娱自乐），并用自己的私钥解密。</p><pre><code>$ echo &quot;Hello world&quot; &gt; hello.txt$ cat -A hello.txtHello world$$ md5 hello.txtf0ef7081e1539ac00ef5b761b4fb01b3 hello.txtusage: gpg [options] --encrypt [filename]$ gpg --armor --recipient seanxp --output He110.txt --encrypt hello.txt$ file He110.txtHe110.txt: PGP message Public-Key Encrypted Session Key (old)</code></pre><ul><li><code>--armor</code>，表示输出文本文件格式。如果要加密二进制文件，则忽略此参数；</li><li><code>--recipient</code>，指定信息的接收者（recipient）公钥的uid，可以是名字也可以是email地址；</li><li><code>--output</code>，指定输出（即加密后）的文件名；</li><li><code>--encrypt</code>，执行加密（encrypt）操作；</li></ul><p>除了这样的长选项，还有简单选项，对应的命令为：</p><pre><code>usage: gpg [options] --encrypt [filename]$ gpg -a -r seanxp -o He110.txt -e hello.txt</code></pre><p>这样就生成了一份用 seanxp 的公钥所加密的文件，GPG 的算法确保只有 seanxp 的私钥可以解密出正确的数据。<br>除了加密单个文件外，还可以对文件夹进行压缩后加密：</p><pre><code>$ tar -cvz backup/ | gpg -e -r [key-ID] -o backup.tgz.gpg$ tar -cvj backup/ | gpg -e -r [key-ID] -o backup.tar.bz2.gpg$ file backup.tgz.gpgbackup.tgz.gpg: PGP RSA encrypted session key - keyid: 318B6A40 48F76F84 RSA (Encrypt or Sign) 4096b .</code></pre><p><code>keyid: 318B6A40 48F76F84 RSA (Encrypt or Sign) 4096b</code>，表示该文件是用公钥<code>0x406A8B31846FF748</code>（与keyid的字节序相反，但确实是同一个公钥）加密的。 该公钥是 seanxp 公钥<code>0x5655CA935F09337F</code>的从钥的公钥。</p><pre><code>$ gpg --list-public-keys seanxppub   4096R/0x5655CA935F09337F 2016-11-15      Key fingerprint = 429D 47BB BDB0 AA92 B8B6  28F7 5655 CA93 5F09 337Fuid                 [ultimate] seanxp &lt;seanxp.com&gt;sub   4096R/0x406A8B31846FF748 2016-11-15 [expires: 2026-11-13]</code></pre><p>生成 GPG 钥匙，会生成两对公私钥，即四把钥匙，用处不同，稍后详解。</p><h2 id="Decrypt"><a href="#Decrypt" class="headerlink" title="Decrypt"></a>Decrypt</h2><p>用公钥加密的数据，可以用对应的私钥解密：</p><pre><code>$ rm hello.txt$ gpg --output hello.txt --decrypt He110.txtYou need a passphrase to unlock the secret key foruser: &quot;seanxp &lt;seanxp.com&gt;&quot;4096-bit RSA key, ID 0x406A8B31846FF748, created 2016-11-15         (subkey on main key ID 0x5655CA935F09337F)gpg: encrypted with 4096-bit RSA key, ID 0x406A8B31846FF748, created 2016-11-15      &quot;seanxp &lt;seanxp.com&gt;&quot;$ file hello.txthello.txt: ASCII text$ cat -A hello.txtHello world$$ md5 hello.txtf0ef7081e1539ac00ef5b761b4fb01b3 hello.txt</code></pre><p><code>He110.txt</code> 是用子公钥 <code>0x406A8B31846FF748</code> 加密，也是用子私钥解密的。<br>对于加密压缩文件夹的解密方法：</p><pre><code>$ gpg --decrypt backup.tgz.gpg | tar -xz$ gpg --decrypt backup.bz2.gpg | tar -xj</code></pre><h2 id="signature"><a href="#signature" class="headerlink" title="signature"></a>signature</h2><ul><li><a href="http://www.youdzone.com/signature.html" target="_blank" rel="noopener">An introduction to Digital Signatures, by David Youd</a></li><li><a href="http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html" target="_blank" rel="noopener">数字签名是什么？- 阮一峰的网络日志</a></li></ul><p>既然文件是通过<code>不可靠</code>的网络传输的，很多时候可能被篡改替换，因此需要用到数字签名。 <a href="https://www.kernel.org/category/signatures.html" target="_blank" rel="noopener">例如在网上下载的 linux kernel 需要验证数字签名是否有效。</a></p><p>注意区别加密与签名：</p><ul><li>加密是对文件进行加密操作，这是是用子公钥<code>0x406A8B31846FF748</code>进行 RSA 加密，确保只有对应的子私钥可以解密；</li><li>加密的数据无需签名，因为如果加密的数据在传输过程中被篡改，解密时会提示<code>gpg: CRC error;</code>校验错误；</li><li>对文件签名，不会对原文件进行任何处理，只是对原文件生成数字摘要并用私钥加密生成数字签名；</li><li>如果只签名不加密，原文件在传输过程中会被其他人看到，但是可以保证该文件在被修改的情况下无法通过数字签名校验；</li><li>加密确保<code>只有你能看到这个文件</code>，签名确保<code>只有我能写出这个文件</code>。</li></ul><h3 id="detached-signature"><a href="#detached-signature" class="headerlink" title="detached signature"></a>detached signature</h3><p>对于分散在多个渠道提供下载的资源（无需加密传输的大文件），最好的方法就是生成一个独立于下载文件的数字签名文件供他人下载校验。很多软件开发者也会在其软件官方网站提供签名文件供校验。<br>例如对 <code>hello.txt</code> 生成分离的签名文件：</p><pre><code>$ gpg --armor --detach-sign hello.txtYou need a passphrase to unlock the secret key foruser: &quot;seanxp &lt;seanxp.com&gt;&quot;4096-bit RSA key, ID 0x5655CA935F09337F, created 2016-11-15$ file hello.txt.aschello.txt.asc: PGP signature Signature (old)</code></pre><p>独立生成一个 <code>hello.txt.asc</code> 的签名文件，后缀名 <code>asc</code> 表示该文件是 ASCII 码形式的。 因为是分离的签名，需要把原信息文件 <code>hello.txt</code> 连同签名文件 <code>hello.txt.asc</code> 一起寄给他人，交由他人进行检验。</p><h3 id="clear-text-signature"><a href="#clear-text-signature" class="headerlink" title="clear text signature"></a>clear text signature</h3><p>对于简单文本，可以使用<code>clearsign</code>的独立（不修改原文件）不分离（原文本与数字签名写在同一文件中）式数字签名：</p><pre><code>$ gpg --clearsign hello.txt$ cat hello.txt.asc-----BEGIN PGP SIGNED MESSAGE-----Hash: SHA512Hello world-----BEGIN PGP SIGNATURE-----iQIcBAEBCgAGBQJYlVHxAAoJEFZVypNfCTN/wMEP/1HNhw7YUAIGEjkLXlALgCRjQLiBxQtzNszmGtzsIaPXRTt4aOxmicmNyLQ7JHImN372LnvYkYDV2PY/ZIfujGpbqpTE3kCTEgS55SK/zfLEA+njq1LzCsSuPUUEoIO8DXhg1L+Ktf4GhlupSWI3X/iSJzEszetFJ/u2650JQPofY2cWeetrY9j7UdnjqtSJQCrA9be9hcBDoepCzfZg62Aehnuw8sUayE6kwoJKA5aMNcrbN5qxhvUVULJKxhK2cCzi3vatBzjnnqKeFBfz64V8LiM3Qk3AbKeE+2P3ZorbXgD265dYDcHTMBCzMgjKoFUvoOlrF+ZeMv7HYcQNOHx7dEmx2VEhInwdB9snhBokH8KsFlWsPIpLbbarwDL56jUjC4jrDW8EF05dJLXCfALV8M2MVD513tVSx/ktSYyY2h+mBbrfAo5J54+KZN/NJpan/woP0ooWNTyey3T/y/svOZZuyg7w0Hl3j4bVnji++DcJhkwbfq32yvzDi0BLcEATNQRO5h5FifUSg3eV8W0fU8p1NUrd5W7in1ne1x9EMZkrFfzkLP7rYxHkmZ+KMW4fNGMFjQGi1YAQN+S0mNCMAGuZpLRb0MgudFzotPuyWH5D9hHyWpjF2qHrK7an9jTgtE/eemU4l00frwnBc9a1bl9M0p7XCJsh2xOHx72I=5P7S-----END PGP SIGNATURE-----</code></pre><p>根据 <code>hello.txt</code> 生成 <code>hello.txt.asc</code> 文件，此签名文件中已经包含有 <code>hello.txt</code> 的数据。 只需要将此签名文件寄给他人即可。他人校验数字签名的同时即可分离出原数据文件。</p><h3 id="binary-signature"><a href="#binary-signature" class="headerlink" title="binary signature"></a>binary signature</h3><p>使用<code>--sign</code>选项，即可生成最简单的数字签名：</p><pre><code>$ gpg --sign hello.txt$ file hello.txt.gpghello.txt.gpg: data$ gpg helle.txt.gpg</code></pre><ul><li>独立的签名文件 <code>hello.txt.gpg</code></li><li>文件数据不加密（可以在<code>hello.txt.gpg</code>文件中看到<code>Hello world</code>）</li><li>二进制数字签名</li></ul><h3 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h3><ul><li>使用<code>--detach-sign</code>选项，生成分离的签名文件；</li><li>使用<code>--sign</code>选项，生成不分离的签名文件，与<code>--detach-sign</code>选项相反；<ul><li>加上<code>--armor</code>选项，则生成 ASCII 格式的数字签名（hello.txt.asc: PGP message Compressed Data），无法看出原文件的数据，但是解密后可以得到原文件数据；</li><li>不加<code>--armor</code>选项，则生成二进制格式的数字签名（hello.txt.gpg: data），可以看到其中的原文件数据；</li></ul></li><li>使用<code>--armor</code>选项，生成 ASCII 格式的签名；</li><li>使用<code>--clearsign</code>选项，可以省略<code>--armor</code>选项，生成独立分离式文本签名；</li></ul><p>另外，如果本机中用于签名的私钥不止一个时，需要指定签名所用的私钥：</p><pre><code>--local-user,-u: Use name as the key to sign with. Note that this option overrides --default-key.$ gpg -u $GPGKEY --sign hello.txt</code></pre><h3 id="verify"><a href="#verify" class="headerlink" title="verify"></a>verify</h3><p>拿到别人的数字签名文件，需要用其公钥进行校验（别人用私钥生成签名文件，那就用对应的公钥校验签名文件）。 对于 <code>.gpg</code> 后缀的签名文件，直接使用<code>gpg xxx.gpg</code>命名校验其数字签名，并且能分离出原文件。</p><pre><code>$ gpg -u $GPGKEY --sign hello.txt$ file hello.txt.gpghello.txt.gpg: data$ rm hello.txt$ gpg hello.txt.gpggpg: Signature made Sat Feb  4 12:34:13 2017 CSTgpg:                using RSA key 0x5655CA935F09337Fgpg: Good signature from &quot;seanxp &lt;seanxp.com&gt;&quot; [ultimate]Primary key fingerprint: 429D 47BB BDB0 AA92 B8B6  28F7 5655 CA93 5F09 337F$ cat -A hello.txtHello world$</code></pre><p>对于使用 <code>--detach-sign</code> 签名的签名文件，使用 <code>gpg --verify</code> 命令进行校验。因为是分离的数字签名文件，因此原文件也必须存在，gpg 会对原文件进行 hash 处理，与解密数字签名文件中的 hash 进行对比。</p><pre><code>$ gpg -u $GPGKEY --armor --detach-sign hello.txt$ file hello.txt.aschello.txt.asc: PGP signature Signature (old)$ rm hello.txt$ gpg --verify hello.txt.ascgpg: no signed datagpg: can&apos;t hash datafile: No data$ echo &quot;Hello world&quot; &gt; hello.txt$ gpg --verify hello.txt.ascgpg: assuming signed data in &apos;hello.txt&apos;gpg: Signature made Sat Feb  4 12:36:14 2017 CSTgpg:                using RSA key 0x5655CA935F09337Fgpg: Good signature from &quot;seanxp &lt;seanxp.com&gt;&quot; [ultimate]Primary key fingerprint: 429D 47BB BDB0 AA92 B8B6  28F7 5655 CA93 5F09 337F</code></pre><p>对于不分离的数字签名文件 <code>--clearsign</code>，不需要原文件，因为签名文件中已包含签名文件的数据，可以使用<code>gpg --verify</code>直接校验。</p><h2 id="Encrypt-amp-Signature"><a href="#Encrypt-amp-Signature" class="headerlink" title="Encrypt &amp; Signature"></a>Encrypt &amp; Signature</h2><p>同时进行加密和签名操作：</p><pre><code>$ gpg --local-user [发信者ID] --recipient [接收者ID] --armor --sign --encrypt hello.txt$ gpg --local-user $GPGKEY --recipient torvalds@linux-foundation.org --armor --sign --encrypt hello.txt$ file hello.txt.aschello.txt.asc: PGP message Public-Key Encrypted Session Key (old)</code></pre><h1 id="GPG-Subkeys"><a href="#GPG-Subkeys" class="headerlink" title="GPG Subkeys"></a>GPG Subkeys</h1><ul><li><a href="http://blog.theerrorlog.com/using-gpg.html" target="_blank" rel="noopener">GPG 密鑰的「正確」用法</a></li><li><a href="https://mechanus.io/ke-neng-shi-zui-hao-de-yubikey-gpg-ssh-zhi-neng-qia-jiao-cheng/" target="_blank" rel="noopener">为什么我们需要三个新的子密钥</a></li><li><a href="https://www.mawenbao.com/note/gnupg.html" target="_blank" rel="noopener">多对subkey</a></li></ul><p>GPG 密钥环并不只有一对公钥和私钥，如果称公钥和其对应的私钥为一个密钥对的话，那么一个 GPG 密钥环可以拥有很多个密钥对，每一个密钥对都由一个钥匙号（key ID）标识，被称为钥匙。其中有一个钥匙拥有签名其他钥匙的功能（可以在密钥环中创建钥匙），这个钥匙被称为主钥，其他的钥匙则被称为从钥。<br>GPG 列出的每个密钥环第一行一定是主钥，其余的则为从钥。 一个GPG 密钥环一共有四种类型的密钥：</p><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">代表</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">sec</td><td style="text-align:center">SECret key</td><td style="text-align:center">主钥的私钥</td></tr><tr><td style="text-align:center">pub</td><td style="text-align:center">PUBlic key</td><td style="text-align:center">主钥的公钥</td></tr><tr><td style="text-align:center">ssb</td><td style="text-align:center">Secret SuBkey</td><td style="text-align:center">从钥的私钥</td></tr><tr><td style="text-align:center">sub</td><td style="text-align:center">public SUBkey</td><td style="text-align:center">从钥的公钥</td></tr></tbody></table><p>至于这些钥匙的作用可以查看它们的功能，常用的功能有三种：</p><table><thead><tr><th style="text-align:center">功能</th><th style="text-align:center">代表</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">S</td><td style="text-align:center">Signing</td><td style="text-align:center">签名和校验签名</td></tr><tr><td style="text-align:center">E</td><td style="text-align:center">Encryption</td><td style="text-align:center">加密和解密信息</td></tr><tr><td style="text-align:center">C</td><td style="text-align:center">Certification</td><td style="text-align:center">认证钥匙</td></tr></tbody></table><ul><li>E = encrypt/decrypt (decrypt with your private key of a message you received)</li><li>S = sign (sign data. For example a file or to send signed e-mail)</li><li>C = certify (sign another key, establishing a trust-relation)</li><li>A = authentication (log in to SSH with a PGP key; this is relatively new usage)</li></ul><p>最后一项功能 authentication ，可以将 GPG 生成 SSH 对应的公私钥，并用于 SSH 登录。<br>注意功能是针对一对钥匙而言的，由其中的公钥和私钥共同完成。其中加密和解密分别由钥匙的公钥和私钥完成，签名和验证则分别由私钥和公钥完成。<br>一般地，GPG 密钥环中钥匙的公钥需要公布到网络上，也就意味着：</p><ul><li>Encryption，所有人都能用你公布的公钥加密信息，加密后的信息只有持有私钥的你才能够解密。</li><li>Signing，你可以使用自己持有的私钥签名信息，所有人都能够用你公布的公钥验证签名的合法性。</li><li>Certification，你可以用自己持有的私钥认证他人的公钥，从而建立信任关系。</li></ul><p>默认情况下，GPG 生成的密钥环将主密钥（master key）和子密钥（sub key）放在一起，主密钥用于签名和验证（usage: SC），从密钥用于加解密（usage: E）。前面给出的例子中，用于加密的密钥是 sub key，签名的密钥是 master key。</p><pre><code>pub  4096R/0x5655CA935F09337F  created: 2016-11-15  expires: never       usage: SCsub  4096R/0x406A8B31846FF748  created: 2016-11-15  expires: 2026-11-13  usage: E</code></pre><p>使用子密钥的好处在于能够更换签名或者加密密钥，而不破坏主密钥的关系网络和Key ID。除了默认生成的用来加密的子密钥外，还可以添加更多的子密钥，用来签名或者用来加密。它们的公钥会随着主密钥的公钥发布，方便其他人验证或者加密。<br>为保证 master private key 的安全，将其放到离线的其他介质（比如U盘），并从钥匙环中删除。同时为方便日常使用，需要分别创建一个负责加密的 subkey（默认已有）和一个负责签名的 subkey。<br>日常加密和签名操作都通过 subkeys 进行，需要使用 master private key 时（吊销/添加 subkeys，签收他人公钥），挂载U盘然后执行如下操作就能看到 master private key。<br>实际上这种用途，更安全的方法是使用一块 <a href="https://veracrypt.codeplex.com/" target="_blank" rel="noopener">VeraCrypt</a> 全盘加密的 U 盘。每次需要使用 master private key 时，插入 U 盘，VeraCrypt 全盘解密，之后使用 <code>gpg --homedir</code> 选型指定路径，执行完命令后卸载 U 盘。</p><pre><code>$ gpg --homedir /path/to/your/usb-drive/_gnupg --list-secret-keys</code></pre><h1 id="Backup-Keys"><a href="#Backup-Keys" class="headerlink" title="Backup Keys"></a>Backup Keys</h1><!-- 建议使用 VeraCrypt 隐藏盘，100K 的大小，存放公私钥及吊销证书，存放在多个不同地方的隐藏文件夹下 --><p>查看并导出公私钥：</p><pre><code>$ gpg --list-keys$ gpg -ao 0x5655CA935F09337F-public.key -export 0x5655CA935F09337F$ gpg --list-secret-keys$ gpg -ao 0x5655CA935F09337F-private.key --export-secret-keys 0x5655CA935F09337F</code></pre><p>将公私钥文件导入本机：</p><pre><code>$ gpg --import _something_-public.key$ gpg --import _something_-private.key</code></pre><h1 id="gpg-conf"><a href="#gpg-conf" class="headerlink" title="gpg.conf"></a>gpg.conf</h1><p><a href="https://github.com/SeanXP/dotfiles/blob/master/gnupg/gpg.conf" target="_blank" rel="noopener">my gpg.conf in github</a></p><p>使用 SSL 连接 keyserver：</p><ol><li>下载所需的<a href="https://sks-keyservers.net/sks-keyservers.netCA.pem" target="_blank" rel="noopener"> SSL 证书</a>与<a href="https://sks-keyservers.net/sks-keyservers.netCA.pem.asc" target="_blank" rel="noopener">数字签名</a></li><li>校验证书的数字签名，需要提前导入公钥 0x250B7AFED6379D85</li><li>拷贝 .pem 证书至对应目录，并在 gpg.conf 中注明</li><li>配置默认 keyserver</li></ol><p>gpg.conf 相关配置：</p><pre><code># Default key serverkeyserver hkps://hkps.pool.sks-keyservers.net# Provide a certificate store to override the system default# Get this from https://sks-keyservers.net/sks-keyservers.netCA.pem#keyserver-options ca-cert-file=/path/to/hkps.pool.sks-keyservers.net.pemkeyserver-options ca-cert-file=~/.gnupg/sks-keyservers.netCA.pem</code></pre><h1 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h1><h2 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h2><ul><li><a href="http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html" target="_blank" rel="noopener">RSA算法原理（一）</a></li><li><a href="http://www.ruanyifeng.com/blog/2013/07/rsa_algorithm_part_two.html" target="_blank" rel="noopener">RSA算法原理（二）</a></li></ul><h2 id="PGP-Pretty-Good-Privacy"><a href="#PGP-Pretty-Good-Privacy" class="headerlink" title="PGP(Pretty Good Privacy)"></a>PGP(Pretty Good Privacy)</h2><ul><li><a href="https://en.wikipedia.org/wiki/Pretty_Good_Privacy" target="_blank" rel="noopener">Pretty Good Privacy - Wikipedia</a></li><li><a href="https://www.wikiwand.com/zh-hans/%E8%89%AF%E5%A5%BD%E9%9A%B1%E7%A7%81%E5%AF%86%E7%A2%BC%E6%B3%95" target="_blank" rel="noopener">良好隐私密码法</a></li></ul><p>良好隐私密码法（英语：Pretty Good Privacy，缩写为PGP），一套用于讯息加密、验证的应用程序，采用IDEA的散列演算法作为加密与验证之用。<br>PGP的主要开发者是菲尔·齐默尔曼（Phil Zimmermann）。齐默曼于1991年将PGP在互联网上免费发布。PGP本身是商业应用程序；开源并具有同类功能的工具名为GPG（GnuPG）。PGP及其同类产品均遵守OpenPGP数据加解密标准（RFC 4880）。</p><ul><li>PGP加密由一系列散列、数据压缩、对称密钥加密，以及公钥加密的算法组合而成。每个步骤支持几种算法，可以选择一个使用。每个公钥均绑定唯一的用户名和/或者E-mail地址。</li><li>消息采用对称加密算法加密，采用一组对称密钥。每个对称密钥只使用一次，所以也叫做会话密钥。会话密钥通过接收方的公钥来加密保护，因此只需确保仅接收方能解密会话密钥即可。加密的消息和加密的会话密钥一起发送给接收方。</li><li>完整性检测被用来检查消息在传输过程中是否变更过（即验证消息完整性），而消息认证则是被用来决定消息是否确由某特定的人或实体发出（即数字签名验证）。</li><li>不管是在加密消息时还是在验证签名时，都需要注意用来发送消息的公钥是否确实属于期望的接收者。简单的从某个位置下载一个公钥是没有保障的。蓄意的或意外冒名顶替是可能的。</li></ul><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/PGP_diagram.svg/1000px-PGP_diagram.svg.png" alt="PGP_diagram"></p><h2 id="Web-of-Trust"><a href="#Web-of-Trust" class="headerlink" title="Web of Trust"></a>Web of Trust</h2><p><a href="https://en.wikipedia.org/wiki/Web_of_trust" target="_blank" rel="noopener">Web of trust - Wikipedia</a><br>PGP 采用信任网结构（Web Of Trust）的分布式密钥管理，这种密钥管理体制下没有密钥证书管理机关（CA），用户之间的身份认证问题是通过介绍人（introducer）来解决的。所有的用户产生并分发他们自己的公开密钥，用户通过相互对公开密钥签名以创建一个包含所有 PGP 用户的信任网（Web Of Trust）。简单地说就是，在信任网中，没有大家都信任的中心权威机构，用户以各自为中心，相互认证公钥，相互签名公钥证书。这些签名使得用户的公钥彼此相连，形成自然的网状结构，也就是所谓的信任网。</p><h2 id="Macbook-GPG-issue"><a href="#Macbook-GPG-issue" class="headerlink" title="Macbook GPG issue"></a>Macbook GPG issue</h2><p>Macbook 下，出现下面问题：</p><pre><code>gpg-agent[30845]: command get_passphrase failed: No such file or directorygpg: problem with the agent: No such file or directorygpg: decryption failed: No secret key</code></pre><p>即需要输入 GPG 私钥密码的时候，没有弹出输入框，而是直接默认输入失败。<br><a href="https://github.com/IJHack/qtpass/issues/156" target="_blank" rel="noopener">解决方案</a>，可以通过 <a href="https://gpgtools.org/" target="_blank" rel="noopener">GPGTools</a> 的 pinentry-mac (pinentry for GPG on Mac) 解决：</p><pre><code>brew install pinentry-macecho &quot;pinentry-program /usr/local/bin/pinentry-mac&quot; &gt;&gt; ~/.gnupg/gpg-agent.conf</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;Reference&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gnupg.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;The GNU Privacy Guard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.wikiwand.com/zh-hans/GnuPG&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GPG 维基百科&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2013/07/gpg.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GPG 入门教程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.madboa.com/geek/gpg-quickstart/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GPG Quick Start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://help.ubuntu.com/community/GnuPrivacyGuardHowto&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Gnu Privacy Guard Howto&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://wiki.archlinux.org/index.php/GnuPG&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ArchLinux GunPG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Tutorial" scheme="http://seanxp.com/categories/Tutorial/"/>
    
    
      <category term="Tutorial" scheme="http://seanxp.com/tags/Tutorial/"/>
    
      <category term="Internet" scheme="http://seanxp.com/tags/Internet/"/>
    
      <category term="GitHub" scheme="http://seanxp.com/tags/GitHub/"/>
    
      <category term="Learning" scheme="http://seanxp.com/tags/Learning/"/>
    
      <category term="Software" scheme="http://seanxp.com/tags/Software/"/>
    
      <category term="Linux" scheme="http://seanxp.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>真田丸</title>
    <link href="http://seanxp.com/2016/12/TV-sanadamaru/"/>
    <id>http://seanxp.com/2016/12/TV-sanadamaru/</id>
    <published>2016-12-19T13:42:42.000Z</published>
    <updated>2018-03-11T02:29:34.404Z</updated>
    
    <content type="html"><![CDATA[<div align="center"><br><img src="http://ww3.sinaimg.cn/large/006tNc79jw1fawfvd5fulj30u00u0djw.jpg" width="540" height="540" alt="真田丸"><br>NHK 大河剧《真田丸》播送一年，「完结」撒花！<br></div><a id="more"></a><h3 id="相关网站"><a href="#相关网站" class="headerlink" title="相关网站"></a>相关网站</h3><ul><li>官方网站：<a href="http://www.nhk.or.jp/sanadamaru/" target="_blank" rel="noopener">NHK大河ドラマ『真田丸』</a></li><li>豆瓣：<a href="https://movie.douban.com/subject/25884841/" target="_blank" rel="noopener">真田丸</a></li><li>Bilibili视频源：<a href="http://www.bilibili.com/video/av7604530/" target="_blank" rel="noopener">真田丸 满弹幕合集</a></li></ul><h3 id="我看真田丸"><a href="#我看真田丸" class="headerlink" title="我看真田丸"></a>我看真田丸</h3><p>从《真田丸》入坑大河剧，开始看剧时对日本战国史完全不了解，一边看剧一边上 Google 查资料，看剧途中还被 B 站弹幕安利了好多日本战国历史和人物（更多的是外号和各种野史…不得不说日本战国类游戏也是安利战国历史的一大利器）。</p><p>很好看的日剧，每集都会有一些笑料包袱（源三朗日常懵逼、口啪、权四情史、乌龟猴子画外音等），而且 B 站弹幕也很幽默风趣，简直是我这一年日剧方面的「周指活」。看了下 NKH 之前的大河剧，包括《武田信玄》、《风林火山》、《坂上之云》，就会发现今年的大河剧与往届格外不同，往届大河剧偏向历史剧的厚重感，笑料包袱少，更没有类似《家康という男》这样俏皮的 BGM 了。<br>的确，对于日本人而言，日本战国日剧如同我们看待三国西游般熟悉，事隔多年后一味的更换演员班底重演一遍，如果没有一点自己的特色，很难吸引”观众日益增长的文化需求”。</p><p>当然，作为一部「严肃」的大河正剧，自然也少不了各式各样的历史人物，所共同构建出的浮世绘。我尤其喜欢看人物们是如何为各自信念而做出选择，又是如何推动历史的车轮滚滚前进。小人物也许就是触发历史世界线变更的导火索。</p><p>开始是因为堺雅人才追的这部剧，而追堺雅人又是因为喜欢其主演的《legal high》。最近几年得闲看过几部评分不俗的日剧（《半泽直树》、《仁医》、《金牌女王》、《我的恐怖妻子》等），认识了一堆彪戏达人，又跟着他们看了不少新出的好剧。<br>如此良性循环，也是节省了挑剧的诸多困扰。日剧主题明确轻快，节奏感强，加上近年来各种脑洞大开，有很多好剧都值得一看。相比国内的电视剧，就对我就没有太大吸引力。不过的确很难想象国内如何能拍出《Wood Job》这样清新脱俗颇为励志的电影出来。</p><p>期间因为等 NHK 更新太慢，又被安利了《武田信玄》，同样是一部很赞的大河剧，正好弥补了《真田丸》的历史空白，当作前传看正好。<br>从《武田信玄》到《真田丸》，纵观日本战国时代末期，真田三代都为各自所坚持的信念奋斗终生。<strong>信浓豪族真田幸隆一遇武田相随半生，真田昌幸虽表里比兴却终生追随信玄，真田信繁沉浮一生只为报太阁之恩。</strong></p><p>看完第 50 话「最终回」，一边听着服部隆之的配乐《ふたりでひとつ》，一边翻看<a href="http://www.nhk.or.jp/sanadamaru/special/subject/subject56.html" target="_blank" rel="noopener">真田丸回忆录</a>，源次郎的一生如画卷般徐徐展开，感慨良多，不一而足。</p><p><img src="http://ww1.sinaimg.cn/large/006tNc79gw1fawft9whyzj30hv0iagpe.jpg" alt="真田信繁"></p><p>周更的好处是播放时间持久，电视台可以靠一部作品持续吸引观众长达一年的注意力，广告营销效果自然好。但是对于观众而言，不易将剧情连贯起来，因此我打算偷得几日闲空再看一遍《真田丸》。</p><h3 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h3><p>我平生喜爱追求效率，但却不觉得再看一遍如此长达 50 集的剧是浪费时间。我认为无论是书（小说也好，名著也罢）、影视（电视剧，电影）、音乐（古典，流行）、包括漫画（大爱日漫），凡是好的，觉得有价值的，看看听听不无益处，若是从中能够获得些许心得更好。<br>看一篇电影，观一部影视，代入其中，就仿佛多活一世多经一生，细心体会则有不少感悟于其中。现在的人终日沉浸在冗余信息的海洋里，注意力被诸多事物所分散，加上物质生活的极大丰富，往往忽略内心精神世界的构建。而没有内心精神世界的人，是空虚的人，精神的衰败带来个性的消亡，最后泯然众人随波逐流矣。</p><p>怕什么真理无穷，进一寸有一寸的欢喜；<br>愁什么人生苦短，拼一分有一分的收获。</p><p>今观此剧，能识此人，何其幸哉！<br>真田左卫门佐信繁，参上！</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>看完《真田丸》之后，为了弥补自己关于真田信繁之前的日本战国史空白，又观看了 1996年的NHK大河剧《<a href="https://www.bilibili.com/video/av3389329/" target="_blank" rel="noopener">秀吉</a>》。<br>相比《真田丸》，二十年前所拍摄的《秀吉》毫不逊色，虽然画质因为时代原因比较模糊，但是我还是想说一句「宁宁美如画」！而且主人公（丰臣秀吉）的个人经历与时代意义相比其手下的马回众（真田信繁）更具有传奇性。<br>竹中直人的丰臣秀吉，泽口靖子的宁宁，高岛政伸的丰臣秀长（多好的弟弟秀长，为什么二十年后去北条吃茶泡饭了:P），渡哲也的织田信长，市原悦子的大政所，哪一个挑出来都是可以再出一部大河剧当主役的。<br>这部剧描述了社会底层农民木下秀吉经过个人奋斗（自然也要考虑到历史的进程），成为日本天下人的故事。边看剧，边查阅丰臣秀吉的 <a href="https://www.wikiwand.com/zh/%E4%B8%B0%E8%87%A3%E7%A7%80%E5%90%89" target="_blank" rel="noopener">Wiki</a>，越是由衷地钦佩秀吉。<br>当然，作为主人公，历史上很多秀吉的黑点，在剧中都由其他人物背黑锅（就像真田丸的关键事件都由源次郎触发一般），看剧时需要抱着休闲和批判思考的态度。<br>秀吉的逆袭，离不开其领导（织田信长）的赏识、其母亲（大政所）的支持、其正室（宁宁）的劝诫、其弟弟（丰臣秀吉）的钱（弟弟真的是政务小能手啊）、其家臣（竹中半兵卫、黑田官兵卫等）的计谋、其对手（明智光秀等）的“帮助”。<br>最后几集一集一回忆杀真是不忍看，人生落幕之际总是伴随着众多一共奋斗而来的亲朋好友的离去。而《秀吉》的结束以秀吉逝世奔向太阳（呼应主题「太阳之子」）结束，而秀吉之死也是丰臣家族由盛而衰的转折点，对应《真田丸》的后半部分，这里不再赘述。</p><p>丰臣朝臣羽柴关白秀吉，献给所有的梦想家！</p>]]></content>
    
    <summary type="html">
    
      &lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/006tNc79jw1fawfvd5fulj30u00u0djw.jpg&quot; width=&quot;540&quot; height=&quot;540&quot; alt=&quot;真田丸&quot;&gt;&lt;br&gt;NHK 大河剧《真田丸》播送一年，「完结」撒花！&lt;br&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="TV" scheme="http://seanxp.com/categories/TV/"/>
    
    
      <category term="Review" scheme="http://seanxp.com/tags/Review/"/>
    
      <category term="History" scheme="http://seanxp.com/tags/History/"/>
    
  </entry>
  
  <entry>
    <title>Github 学生包申请</title>
    <link href="http://seanxp.com/2016/09/GitHub-Student-Developer-Pack-md/"/>
    <id>http://seanxp.com/2016/09/GitHub-Student-Developer-Pack-md/</id>
    <published>2016-09-06T00:14:37.000Z</published>
    <updated>2018-03-11T02:29:34.392Z</updated>
    
    <content type="html"><![CDATA[<p>GitHub Student Developer Pack - The best developer tools, free for students.</p><a id="more"></a><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>There’s no substitute for hands-on experience, but for most students, real world tools can be cost prohibitive. That’s why we created the GitHub Student Developer Pack with some of our partners and friends: to give students free access to the best developer tools in one place so they can learn by doing.</p><p>GitHub 为学生提供学生包优惠，内含很多开发者工具，对经济不太富裕的学生很有帮助：</p><ul><li>AWS educate, Student Developer Pack members receive $15 in bonus AWS credits for a total of $50-$115;</li><li><font color="red">DigitalOcean, $50 in platform credit for new users;</font></li><li>DNSimple, Personal hosted DNS plan (normally $5/month) for one year;</li><li><font color="red">GitHub, Unlimited private repositories (normally $7/month) while you are a student.</font></li><li>Microsoft Azure cloud services, Microsoft Azure, Visual Studio Community 2015 and the rest of the Microsoft developer tools while you’re a student;</li><li><font color="red">Namecheap, One year domain name registration on the .me TLD (normally $18.99/year);</font></li><li><font color="red">Namecheap, One year SSL certificate (normally $9/year);</font></li></ul><p><strong>只要你是学生，就可以提出申请！</strong></p><h2 id="Steps-to-apply"><a href="#Steps-to-apply" class="headerlink" title="Steps to apply"></a>Steps to apply</h2><h3 id="Step-1-Create-your-personal-account-in-GitHub"><a href="#Step-1-Create-your-personal-account-in-GitHub" class="headerlink" title="Step 1. Create your personal account in GitHub"></a>Step 1. Create your personal account in GitHub</h3><p>GitHub Account Sign Up: <a href="https://github.com/join" target="_blank" rel="noopener">https://github.com/join</a><br>如果已经有 GitHub 账户，可以跳过此步骤。</p><h3 id="Step-2-Get-your-pack"><a href="#Step-2-Get-your-pack" class="headerlink" title="Step 2. Get your pack"></a>Step 2. Get your pack</h3><p>学生包申请网址：<a href="https://education.github.com/pack/" target="_blank" rel="noopener">GitHub Student Developer Pack</a><br>点击按钮 <strong>Get your pack</strong>，进入申请页面。申请需要身份认证（两种认证方式任选一种）：</p><ul><li>学生邮箱认证，简单方便，安全系数高，成功概率低；</li><li>学生证件认证，复杂繁琐，安全系数低，成功概率高；</li></ul><h4 id="学生邮箱认证"><a href="#学生邮箱认证" class="headerlink" title="学生邮箱认证"></a>学生邮箱认证</h4><p>如果你有学校 edu 邮箱，可以添加进个人邮箱，以认证学生身份。此方法由于被部分国人频繁使用，造成 GitHub 对 edu 邮箱的不信任，因此成功率可能较低。<br><strong>但是由于此方法简单方便且安全系数高，不会泄露过多隐私，建议尝试一次申请，若申请不成功，再改为学生证申请。</strong></p><h4 id="学生证件认证"><a href="#学生证件认证" class="headerlink" title="学生证件认证"></a>学生证件认证</h4><p>如果没有学校 edu 邮箱，或学校邮箱申请失败，可以通过上传学生证件照来认证学生身份。</p><ol><li>在纯色背景（白色最佳，例如在 A4 打印纸上）拍摄学生证件，具有明确学校名称，日期，姓名等。</li><li><p>附上关键部分的英文翻译，可参考网上模板（出国留学者经常需要翻译学生证件）：</p><pre><code>Postgraduate CertificateName:Gender:Student No:School:College:Discipline:Date of admission:Date of issue:</code></pre></li><li>（可选）身份证 ID 建议打码并在图片角落注明打码原因。</li><li><p>（可选）学生证件照片添加签注（在证件头像附近添加，保证难以 PS 掉），以防他用。</p><pre><code>Apply for GitHub Student Developer Pack.</code></pre></li></ol><h3 id="Step-3-Waiting-for-a-response-email"><a href="#Step-3-Waiting-for-a-response-email" class="headerlink" title="Step 3. Waiting for a response email"></a>Step 3. Waiting for a response email</h3><p>大概一周时间内，你的 GitHub Primary Email 就会收到一封 GitHub 的回复邮件，成功申请的回复如下所示：</p><pre><code>Welcome to the Student Developer PackHey XXXXX (Sean Guo), we have some awesome newsWe&apos;ve upgraded you to a plan with unlimited free private repositories, which will be free for the next two years.After that, you&apos;ll get an email saying that your coupon is expiring.You can reapply for another coupon if you still have academic status.We don&apos;t have any collaboration limits, so any group projects you may encounter can be hosted via your account.</code></pre><p>即申请已经通过！<br>部分优惠将持续两年时间（例如 GitHub unlimited free private repositories），而且到期以后，如果你还是学生，就可以再次申请！<br>此时可以打开优惠页面：<a href="https://education.github.com/pack/offers" target="_blank" rel="noopener">https://education.github.com/pack/offers</a> ，可以看到所有已经开通的优惠信息。</p><p><strong>Have an Octotastic day!</strong></p><h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><ul><li><a href="https://www.mf8.biz/github-education-pack/" target="_blank" rel="noopener">Github 学生包申请教程</a></li><li><a href="https://github.com/ivmm/Student-resources" target="_blank" rel="noopener">学生优惠资源集锦</a></li><li><a href="https://www.v2ex.com/t/301432" target="_blank" rel="noopener">学生优惠资源集锦-V2EX</a></li></ul><h2 id="One-more-thing…"><a href="#One-more-thing…" class="headerlink" title="One more thing…"></a>One more thing…</h2><p>DigitalOcean 是一家性价比极高的 VPS 服务商。最低的套餐是 5 刀的 VPS 套餐，我现在就是用的这一款（512 MB Memory / 20 GB Disk / SFO1 - CentOS 6.7 x64）。<br>获得的 GitHub 包中有 DigitalOcean $50 的优惠码，也就是说，使用最便宜的 VPS ($5/month) ，你可以免费使用10个月的VPS！VPS 有以下好处：</p><ul><li>搭建在国外的 VPS，可以快速下载国外的软件源或资源，因此可以将 VPS 作为你的云端开发机。</li><li>搭建在国外的 VPS，可以配置代理，代理你的一切上网流量，可以更好的进行科研工作。</li><li>善用 VPS 快照功能，快速搭建开发环境，遇到问题可以快速回滚。</li></ul><p>不过提供的 $50 优惠码，是 <strong>“$50 in platform credit for new users”</strong>，如果你还没有注册 DigitalOcean 账户，可以通过以下网址注册：</p><ul><li><a href="https://m.do.co/c/0ffb835591de" target="_blank" rel="noopener">我的推广链接</a>，注册的 DigitalOcean 帐号可以立刻获得 $10，即可以免费体验2个月VPS；并且你在 DigitalOcean 上进行消费，我也会获得一些优惠！</li><li><a href="https://www.digitalocean.com/" target="_blank" rel="noopener">官方注册链接</a>，将不会获得 $10 的推广优惠。</li><li><a href="http://seanxp.com/2016/shadowsocks/">Shadowsocks配置</a>，立刻在自己的VPS上搭建代理吧！</li></ul><p>注册成功以后，在 Billing 页面填写优惠码即可获得 $50。<br>如果是已经注册过的用户，可以参考下面网址，通过发工单的形式申请换取$50优惠。</p><ul><li><p><a href="https://www.mf8.biz/digitalocean-github-pack/" target="_blank" rel="noopener">DigitalOcean 的学生包代金券使用教程</a></p><ul><li>不过呢，DO 会需要至少充值 5 美元 才能激活账户，如果你想空手套白狼，其实也可以申请这 5 美元 的退款，但希望你不要这么做。</li><li>注意：DigitalOcean 不允许一个 PayPal、信用卡 注册多个账户，否则会有封停的危险。</li><li><p>已经有 DO 账号，无法直接使用优惠码，此时不用重新开一个帐号，可以通过发工单(ticket)向客服人员反映：</p><pre><code>标题：I can not use Github’s Student Developer Pack内容：Hello,I have used before DigitalOcean products, and now I passed my Github Student Developer Pack, but can not activate my code.My code is: e89da76f57f2Please help me activate this code.Thank you.</code></pre></li></ul></li></ul><p>DigitalOcean 的处理效率很好，我的工单大概20分钟就得到了处理：</p><pre><code>There has been a response to your ticket:Hey there,Thanks for reaching out to us!I went ahead and added the GitHub promo code to your account. I hope that helps you get started with your DO journey! :)If the support was helpful, feel free to rate your ticket experience!Thank you for being a DigitalOcean customer, always let us know if you have any questions! We are here to help.Platform Support Specialist - DigitalOcean</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GitHub Student Developer Pack - The best developer tools, free for students.&lt;/p&gt;
    
    </summary>
    
      <category term="Tutorial" scheme="http://seanxp.com/categories/Tutorial/"/>
    
    
      <category term="Tutorial" scheme="http://seanxp.com/tags/Tutorial/"/>
    
      <category term="Internet" scheme="http://seanxp.com/tags/Internet/"/>
    
      <category term="GitHub" scheme="http://seanxp.com/tags/GitHub/"/>
    
      <category term="Student" scheme="http://seanxp.com/tags/Student/"/>
    
  </entry>
  
  <entry>
    <title>Khan Academy - Finance and capital markets</title>
    <link href="http://seanxp.com/2016/05/Khan-Finance/"/>
    <id>http://seanxp.com/2016/05/Khan-Finance/</id>
    <published>2016-05-10T06:40:17.000Z</published>
    <updated>2018-03-11T02:29:34.394Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center"><br>天下熙熙，皆为利来；天下壤壤，皆为利往。<br>夫千乘之王，万家之侯，百室之君，尚犹患贫，而况匹夫编户之民乎！<br>《史记 货殖列传》<br></blockquote><br><a id="more"></a></p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>可汗学院的金融（Finance）课程从最基本的概念，结合实际讲述了生活中最常见的金融问题，同时，也可以作为课堂上知识的很好补充。主要内容包括利率，股票，收益率，融资，债券，抵押贷款，通货膨胀等内容。</p><ul><li><a href="https://www.khanacademy.org/economics-finance-domain/core-finance" target="_blank" rel="noopener">Khan Academy - Finance and capital markets</a></li><li><a href="http://open.163.com/special/Khan/finance.html" target="_blank" rel="noopener">可汗学院公开课：金融学</a></li></ul><h1 id="利息介绍"><a href="#利息介绍" class="headerlink" title="利息介绍"></a>利息介绍</h1><h2 id="利息"><a href="#利息" class="headerlink" title="利息"></a>利息</h2><p>利息(interest): 本质是钱的租金。从别处借的钱, 即本金(principal)，一定时间后归还，并附带一定的租金，即利息。常以百分比表示，<code>利息率 = 利息 / 本金</code>。</p><h2 id="单利与复利"><a href="#单利与复利" class="headerlink" title="单利与复利"></a>单利与复利</h2><p>单利(simple interest): 本金不变的利息计算方式；</p><pre><code>0     P1     P + rP = P(1+r)2     P + rP + rp = P(1+2r)...t     P + rP + rP + … rP = P(1+tr)</code></pre><p>复利(compound interest): 上一年的利息要加入本金，当作下一年的本金，计入利息计算中去。</p><pre><code>0      P1      P+r = P(1+r)2      P(1+r)(1+r)3      P(1+r)(1+r)(1+r)...t      P*(1+r)^t</code></pre><h1 id="现值"><a href="#现值" class="headerlink" title="现值"></a>现值</h1><p>现值(Present value)：指资金折算至基准年的数值，也称<code>折现值</code>、也称<code>在用价值</code>，是指对未来现金流量以恰当的折现率进行折现后的价值。<br>现值是如今和将来（或过去）的一笔支付或支付流在当今的价值。或理解为：</p><blockquote><p>成本或收益的价值以今天的现金来计量时，称为现值。</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>比如假设最安全的投资收益为5%, 那么1年后的$110就是现在的<code>$110 / (1+5%) = $104.76</code>；(这里的贴现率假设为5%，即收益率的逆向)即用$104.76投资一年，可以得到1年后的$110。</p><table><thead><tr><th style="text-align:center">Choice</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th></tr></thead><tbody><tr><td style="text-align:center">Now / Year 1</td><td style="text-align:center">$100</td><td style="text-align:center"></td><td style="text-align:center">$20</td></tr><tr><td style="text-align:center">Year 2</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">$50</td></tr><tr><td style="text-align:center">Year 3</td><td style="text-align:center"></td><td style="text-align:center">$110</td><td style="text-align:center">$35</td></tr></tbody></table><p>当投资收益率为5%时，哪个选择更划算呢？</p><ul><li><p>以 Year 3 为基准年</p><pre><code>Choice 1 = $100 * 1.05 * 1.05 = $110.25Choice 2 = $110Choice 3 = $20 * 1.05^2 + $50 * 1.05 + $35 = $109.55</code></pre><p>  可以发现，5% 的投资收益率下，Choice 1 最划算。</p></li><li><p>以Year 1为基准年</p><pre><code>Choice 1 = $100Choice 2 = $110 / (1 + 5%)^2 = $99.77Choice 3 = ($35 / 1.05 + $50) / 1.05 + $20 = $99.365</code></pre><p>  可以看出，Choice 1 的现值最高，最划算。</p></li></ul><p>现值（贴现、折现）的计算与复利（累积）互为逆过程。</p><p>那么，如果贴现率不是5%, 降为2%呢？(即投资率下降，钱不好挣了)<br>以 Year 1 为基准年计算现值：</p><pre><code>Choice 1 = $100Choice 2 = $110 / (1 + 2%) ^ 2 = $105.72Choice 3 = ($35 / (1+2%) + $50) / (1+2%) + $20 = $102.66</code></pre><p>即利率降低到2%, 最好选择不是 Choice 1, 而是 Choice 2 了。当利率下降(例子中的5% -&gt; 2%)，未来支付的现值(例子中Year3的$110的现值)上升。<br>当利率下降，未来支付的现值上升。简单理解，利率下降，就是钱不好挣了，那么未来的110$比起之前好挣的时候(5%)，更值钱了。</p><p>那么，如果第一年利率1%, 第二年5%呢？（以Year 1 为基准年）</p><pre><code>Choice 1 = $100Choice 2 = $110 / (1+5%)^2 = $99.77 (按两年利率5%计算)Choice 3 = $20 + $50/1.01 + $35/1.01^2 = $101.25</code></pre><p>此时，Choice 3反而成最好的了；</p><h2 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h2><ul><li>净现值(NPV, Net Present Value)：将投资的未来现金流量，全部折现成投资始日的价值，称为该投资的净现金流量，或称为净现值（NPV, Net Present Value）。<code>净现值 = 未来现金净流量现值-原始投资额现值</code>。假设投资的净现值为正数，代表该投资的结果可以增加企业的价值;反之，如果投资评估的净现值为负数，代表此投资会减少企业的价值，不应该接受。</li><li>内部收益率(IRR, Internal Rate of Return)：资金流入现值总额与资金流出现值总额相等、净现值等于零时的折现率。IRR是一项投资渴望达到的报酬率，该指标越大越好。<blockquote><p>我今天投你100万，5年后的今天通过你这个案子我收回了1000万，那么我在这个案子上的IRR＝58%。意思是你投资100块钱，每年58%的利息，复利计算（100 * (1 + 58%)），5年后收回的钱就是1000块。</p></blockquote></li></ul><h1 id="资产负债表"><a href="#资产负债表" class="headerlink" title="资产负债表"></a>资产负债表</h1><p>资产负债表（the Balance Sheet）亦称财务状况表，表示企业在一定日期（通常为各会计期末）的财务状况（即资产、负债和业主权益的状况）的主要会计报表，资产负债表利用会计平衡原则，将合乎会计原则的资产、负债、股东权益”交易科目分为“资产”和“负债及股东权益”两大区块，在经过分录、转帐、分类帐、试算、调整等等会计程序后，以特定日期的静态企业情况为基准，浓缩成一张报表。其报表功用除了企业内部除错、经营方向、防止弊端外，也可让所有阅读者于最短时间了解企业经营状况。</p><ul><li>资产（Asset）：资产，指一些有用的东西，将来它可以带给你经济利益。资产指任何公司、机构和个人拥有的任何具有商业或交换价值的东西。</li><li>负债及股东权益（equity）：实际所有的资本。</li></ul><blockquote><p>资产 = 负债 + 权益</p></blockquote><h2 id="房产示例"><a href="#房产示例" class="headerlink" title="房产示例"></a>房产示例</h2><p>例如，我有25万的现金，我借银行75万，买了一套100万的房子：</p><ul><li>我的资产：一套100万的房子；</li><li>我的负债：75万银行贷款；</li><li>我的权益：25万。<br>权益，可以理解为，把总资产折算成钱，返还贷款（别人的资产）以后，所剩余的钱（所有者资产、我自己的资产、权益）。<blockquote><p>权益 = 资产 - 负债</p></blockquote></li></ul><p>一般向银行贷款，都需要一定资产的抵押。比如贷款75万，可以拿100万的房子做抵押。如果无法还款，银行就回收回抵押资产，然后出售，或者拍卖。如果卖的价格低了，比如80万，则银行收回75万，留给我的只有5万，即用我的权益来垫付资产损失。</p><h2 id="逐日盯市"><a href="#逐日盯市" class="headerlink" title="逐日盯市"></a>逐日盯市</h2><p>逐日盯市(Marking to Market)：一段时间，我对我的资产（例如100万买来的房子）进行重新估值，确定价值。确定价值的最好方法，是看和它相似资产的价值是多少。<br>比如我邻居的房子和我一样，它卖了80万，我的资产就不再是100万的房子，而是80万。但我还欠银行75万，所以房价的降低，是我的权益收到了损失，我的权益只有5万了。<br>但如果邻居一样的房子卖了150万（房价上涨50%），那我的权益就从25万变成75万(权益增值了200%)。</p><blockquote><p>所谓逐日盯市制度，亦即每日无负债制度、每日结算制度，是指在每个交易日结束之后，交易所结算部门先计算出当日各期货合约结算价格，核算出每个会员每笔交易的盈亏数额，以此调整会员的保证金帐户，将盈利记入帐户的贷方，将亏损记入帐户的借方。若保证金帐户上贷方金额低于保证金要求，交易所通知该会员在限期内缴纳追加保证金以达到初始保证金水平，否则不能参加下一交易日的交易。</p></blockquote><h1 id="房屋净值贷款"><a href="#房屋净值贷款" class="headerlink" title="房屋净值贷款"></a>房屋净值贷款</h1><p>房屋净值贷款(HEL, House Equity Loan), 是一种由二次抵押品抵押的消费者贷款，允许房主以<code>房屋权益</code>做抵押，可用于消费也可用于投资，是目标开放性贷款。<br>贷款基于房主权益和房屋市场限价的利差，也作为资产抵押支持的证券做抵押品。</p><h2 id="HEL示例"><a href="#HEL示例" class="headerlink" title="HEL示例"></a>HEL示例</h2><p>接上面的贷款买房例子（现金25万，贷款75万，买100万的房，房价涨到150万）：<br>现在房价150万，银行贷款75万，我有75万的权益。但是权益不能直接花，怎么办？去银行贷款，拿权益做抵押！在银行贷款了32.5万！</p><p>现在我的资产：<code>150万房子 + 32.5万现金 = 182.5万资产</code></p><ul><li>负债：买房贷款75万 + 权益贷款32.5万</li><li>权益：75万，没变；</li></ul><p>我花了10万美元旅游，负债没变，即我的权益从75万降低到65万；即我通过抵押权益贷款，消费了我的权益！</p><h2 id="租房？买房？"><a href="#租房？买房？" class="headerlink" title="租房？买房？"></a>租房？买房？</h2><p>假如有两个一模一样的房子，1号房子一月租金3000元（年租金3.6万），2号房子售价 100万；</p><ol><li>租房<br> 我有25万现金，打算租房，将25万存到银行，假设存款利率为4%, 一年利息1万；<br> 则每年租房除去利息，还有2.6万房贷，需要通过工资还清。</li><li>买房<br> 我有25万现金，我打算买房，从银行贷款75万，假设贷款年利率为6%，一年要还4.5万，平均每月3750元。但是，还贷款使得税收降低。比如我年薪10万，上税30%, 即3万；现在要还贷款4.5万，我实际挣了5.5万，按30%税收，只需上交16500元，则节省了1.35万的税收。<br> 每年上交房屋财产税(property tax), 按1%算，100万的房子，税收为1万。合计之后，每年需要还 银行贷款4.5万 + 房屋财产税1万 - 节省税收1.35万 = 4.15万;<br> 则每年租房除去利息，还有4.15万房贷，需要通过工资还清。这样算下来，这种情况下租房更划算。</li></ol><h2 id="房价上涨原因"><a href="#房价上涨原因" class="headerlink" title="房价上涨原因"></a>房价上涨原因</h2><p>通过分析2000~2004年的相关数据：</p><ul><li>需求方：人口增长每年约1.5%，人均收入平均降低3%</li><li>供给方：房价现有储备约115million; 平均每年新建1.8milliom, 4年下来约增长6%;<br>那么为什么房价2004年比2000年上涨46%, 2006年比2000年上涨88%呢？这种现象不符合经济学的供求关系。而且自2000年依赖，房价相比以前的时代，上涨的超快。</li></ul><blockquote><p>房价上涨的唯一原因：人民买房越来越容易了，银行贷款的限制越来越低。越多的人购买房子，使得房价被哄抬的越来越高。</p></blockquote><p>在七八十年代，即使用来租房的钱超过贷款买房的利息，很多人还是选择租房。因为贷款买房需要一定的首付，一份稳定的工作，良好的信用，很多人不符合贷款条件。而21世纪，贷款的限制条件变松了，很多人只需要攒一定的首付，就可以贷款了。</p><p>2000~2006期间，循环因果链：</p><blockquote><p>贷款限制条件变松-&gt;更多的人贷款买房-&gt;房价上涨-&gt;贷款违约率下降(即使银行贷款给一个游手好闲的人，只要其还不上贷款，卖掉其抵押的房子，银行也不亏)-&gt;贷款的感知风险(Perceived lending risk)下降-&gt;更多人愿意放贷款-&gt;贷款标准变低，融资更容易。</p></blockquote><p>而这一切都是以对房价上涨的自信作为前提。</p><h1 id="公司资产"><a href="#公司资产" class="headerlink" title="公司资产"></a>公司资产</h1><p>增加公司资本的三种方式(raise capital)：</p><ol><li>借债(debt, borrow money)</li><li>权益(equity), 卖股份(sell shares of itself)</li><li>使公司盈利</li></ol><p>公司资产(asset)分为借债与权益两部分(assets = liabilities + equity, 我们所拥有的equity是我们的资产减去我们的负债)。公司资产减去借债，将剩下的权益平分得到股票的股价。</p><blockquote><p>「股票的本质」 （通俗的讲，即把公司卖掉，得到等价与公司资产的钱，先还了借债的钱，最后剩下的钱，按股份平分）</p></blockquote><h2 id="证劵"><a href="#证劵" class="headerlink" title="证劵"></a>证劵</h2><p>证券(security), 一种能够用来购买和出售的东西；</p><ul><li>在权益市场(equity world)的证券叫做股票(stock)；</li><li>在债务市场(debt world)的证券叫做债券(bond)。</li></ul><p>借债可以认为是公司向银行贷款（债务市场），而权益股票可以认为是公司向群众借钱，发售给群众证券（权益市场）。借债可以以债券bond的形式发布，即借条。<br>零息债券(zero coupon), 在偿还贷款前并不支付利息。利息包含在最后的还款中，隐含支付。例如500元购买某公司1000元的债券，待到债券期限日，可以换得1000元。</p><h2 id="股份、股票-share-stock"><a href="#股份、股票-share-stock" class="headerlink" title="股份、股票(share, stock)"></a>股份、股票(share, stock)</h2><p>购买股票，即成为公司的部分所有者。与此相反，债券不同于股票，购买债券，使你成为公司债权人的一部分。</p><ul><li>作为债权人，公司是欠你钱，必须要给你还钱（没现金，变卖公司资产也要还）；</li><li>作为所有者，公司不承诺还钱，公司的财产大家按股份平摊，有盈利一同平摊，破产大家都有损失。</li></ul><h3 id="投资-investing"><a href="#投资-investing" class="headerlink" title="投资(investing)"></a>投资(investing)</h3><p>1美元1股份的股票是否比10美元1股份的股票便宜？股票的股价是根据公司当前的价值除以发行股票的总额的比值，同样的公司同样的公司资产，发行的股份越多，对应的股价越便宜。<br>市值(market value)是指公司资产在市场上的估算价值。资产的账面价值(The book value of the assets)是账面上的资产估值。</p><h3 id="卖空-Short-Sale"><a href="#卖空-Short-Sale" class="headerlink" title="卖空(Short Sale)"></a>卖空(Short Sale)</h3><blockquote><p>a short sale is some type of a bet that a stock can go down.<br>一种预期股票会下跌的赌博。</p></blockquote><p>卖空股票原理：</p><ol><li>向经纪公司借若干股股票（经纪公司拥有很多人的股票，可以借出来一些，但是要收取佣金费用）；</li><li>抛售股票，得到现金（有了现金，但也有了股票债务）；</li><li>等到股票下降，以低价格购入相同股的股票，还给经纪公司（对于股票在经纪公司的股东们，他们完全对此交易不知情；但是他们也会收益，经纪公司会支付股东们一些报酬。）</li></ol><p>经纪公司就是从借股票的人与存股票的人之间赚取差价。类比“银行贷款”。<br>做空是一种股票、期货等的投资术语，是股票、期货等市场的一种操作模式。和“做多”是反的，理论上是先借货卖出，再买进归还。</p><blockquote><p>做空是指预期未来行情下跌，将手中股票按目前价格卖出，待行情跌后买进，获取差价利润。其交易行为特点为先卖后买。做空实际上有点像商业中的赊货交易模式。这种模式在价格下跌的波段中能够获利，就是先在高位借货进来卖出，等跌了之后再买进归还。比如预计某一股票未来会跌，就在当期价位高时借入此股票（实际交易是买入看跌的合约）卖出，再到股价跌到一定程度时买进，以现价还给卖方，产生的差价就是利润。</p></blockquote><p>卖空者若要挣钱，就得在股票高价时卖空（借股票卖），在股票低价时平仓（买股票还），因此，如果市场有这样的卖空者，会使得股票的价格不会太高，也不会太低。即卖空者使得股票的波动更平缓。<br>其实任何一个炒股的人，无论时卖空者，还是正常炒股者，都是低价买，高价卖。这样都是平稳股票的波动性。使其更符合市场预期。</p><h2 id="破产清算"><a href="#破产清算" class="headerlink" title="破产清算"></a>破产清算</h2><blockquote><p>破产（英语：Bankruptcy），是一种宣告债务人无力偿付债务及其后的一系列还款予债权人过程的法律程序。</p></blockquote><p>不同国家的破产法律有很大的差异，一般来说常见的破产方式有两种：</p><ul><li>破产清算(liquidation)</li><li>重整(reorganization)、债务重组(restructuring)</li></ul><p>资产低于负债不代表破产，企业可能有足够的收入来支付所有到期债务。比如百事可乐分离的百胜公司早期有16亿美元的股东赤字（负的股东权益），但是因为百胜现金流转很强，对此根本没有问题。</p><h3 id="破产清算-1"><a href="#破产清算-1" class="headerlink" title="破产清算"></a>破产清算</h3><blockquote><p>破产主体停止一切经营活动，财产被查封拍卖用于抵偿债务。</p></blockquote><p>公司没有经营下去的必要，将公司资产卖掉然后进行分摊。债权人比股票所有者具有更高的优先级拿回钱。其中债权人分为几类：</p><ul><li>高级担保债务(Senior Secured Debt), 优先拿到钱。同时，如果公司不能偿还清，债权人可以得到公司的担保品。</li><li>高级无担保债务(Senior Unsecured): 偿还完更优先的债权人后，再偿还此部分债权人。</li><li>后偿债务(subordinated): 无担保的最低级债务。</li></ul><h3 id="债务重组"><a href="#债务重组" class="headerlink" title="债务重组"></a>债务重组</h3><blockquote><p>破产者在债权人或破产管理人的监督下可继续经营，并在规定期限内向法院和债权人提出重整计划。重整计划中破产者可以请求减免某些无力履行的债务或合同，或者改变偿还方式，并给出继续经营和偿还债务的计划。如果债权人投票通过重整计划则破产者有可能重新恢复经营，否则可能会进入清算程序。在许多情况下，允许仍有盈利潜力的企业继续经营可能会获得比单纯拍卖其资产更多的收益，从而使破产者和债权人都获得比破产清算更好的结果。有时，这也被称作破产保护。</p></blockquote><p>公司还有经营的必要性(具备盈利能力)，重组是调整公司的资产状况。<br>例如，公司还在盈利，但是因为某些原因（本季度销售不佳等等），无法偿还清债权人的利息，但是这个时候公司破产清算是很不划算的。最好的方法，是保持正常运营，因为没有足够的现金偿还债权人的债务，不能偿还即意味着借了新的贷款，被称为债务人持有资产贷款(debtor-in-possession loan)；这个借款是最高级别的借款，在普通债务之上，也可被称为债务人持有资产融资(DIP financing)；通过这个债务(本质上变成了破产法庭接管资产，引入一些投资，使用DIP融资，使得公司拥有资金继续运营，付员工薪水等等)，公司的资产得到了增加（资产=负债+权益），并且一旦破产清算，DIP拥有最高优先偿还权。</p><h3 id="破产重组示例"><a href="#破产重组示例" class="headerlink" title="破产重组示例"></a>破产重组示例</h3><p>假设有一家公司，资产为100万：</p><ul><li>负债60万<ul><li>高级担保债务20万</li><li>高级无担保30万</li><li>后偿债务10万</li></ul></li><li>权益为40万，发行股票10万股，则每股价格为4块。</li></ul><p>现在，由于公司的经营情况不良，需要提出破产计划。高级担保债务人会雇佣一家银行或经纪公司对公司进行估价，高级无担保债务人、后偿债务人、股东等等都会有不同的破产计划和对公司的股价。比如股东们肯定想高评估，这样自己才能分到钱。<br>假设最后通过这样一份评估计划：该公司目前只值50万（参考当前市场价），且其现在的偿还能力为20万（此时若破产清算，高级无担保债务都拿不到钱）。<br>那么公司就会重组，新公司资产50万：</p><ul><li>负债20万，债务人为原来公司的高级担保债务人；</li><li>权益30万，这30万为原来公司的高级无担保债务人，即由债务变为权益股票了（这样的重组比破产清算要强）。<br>而剩下的后偿债务、还有之前10万股股票的股东，都没有新公司的资产了。「破产重组深如海，从此股东是路人」<br>对于将变为股票的高级无担保债务人，他们在评估旧公司时，会尽量评估低公司的价值。比如实际价值100万的公司，若被评估为50万并进行了上面的重组，高级无担保债务人拥有了“30万”的股票（实际资产减去公司20万债务，实际权益为80万）。<br>不同位置的人会对公司进行不同的评估，这样也使得公司估价不会偏离太多。</li></ul><h1 id="资金收益率-投资收益率-return-on-capital"><a href="#资金收益率-投资收益率-return-on-capital" class="headerlink" title="资金收益率/投资收益率(return on capital)"></a>资金收益率/投资收益率(return on capital)</h1><blockquote><p>资金收益率又称资金利润率，是指企业净利润（即税后利润）与所有者权益(即资本总额，=实收资本+股本金+资本公积+盈余公积+利润分配(贷方余额))的比率。</p></blockquote><p>资本收益率越高，说明企业自有投资的经济效益越好，投资者的风险越少，值得投资和继续投资。因此，它是投资者和潜在投资者进行投资决策的重要依据。但是实际投资时，除了投资回报率，还要综合考虑很多因素，比如是贷款投资，就要考虑贷款利息率等。<br>资金收益率，你每年的通过投资得到的现金除以投资总金额。<br>例如投资一家餐厅100万元，而这家餐厅每年为我盈利10万元，则这次投资的资本收益率为10%；</p><h2 id="资本成本（Cost-of-Capital）"><a href="#资本成本（Cost-of-Capital）" class="headerlink" title="资本成本（Cost of Capital）"></a>资本成本（Cost of Capital）</h2><p>投资一家餐厅100万元，若全额贷款100万进行投资，且银行贷款利率为15%，则此时我们这项投资的资本成本为15%。<code>资本收益10% &lt; 资本成本15%</code>，这种投资是没有意义的。<br>现实的投资往往牵扯的因素更多：</p><ul><li>餐厅，资本收益率10%，银行贷款利率15%</li><li>养老院，资本收益率5%，银行贷款利率3%（由于国家政策支持）</li></ul><p>只看资本收益率，应该投餐厅，但是再考虑资本成本，则只有养老院一个选择。实际中的影响因素更多。</p><h1 id="信用违约互换"><a href="#信用违约互换" class="headerlink" title="信用违约互换"></a>信用违约互换</h1><blockquote><p>信用违约交换（英语：credit default swap，缩写CDS）也称信用违约掉期、信贷违约掉期、贷款违约保险；是信贷与保险的衍生工具之一，合约由两个法人交易，一个称为买方（信贷违约时受保护的一方），另一个称为卖方（保障买方于信贷违约时损失）。主要为约定期内信用违约提供一个高比率的保险业务，若担保方没有足够的保证金，会来相当大的投机行为。若保证金充足，其意义在于为买方提供被违约时的本金保障。<br>掉期交易（Swap）是一种金融衍生品（也称为金融衍生工具），指交易双方约定在未来某一期限相互交换各自持有的资产或现金流的交易形式。较为常见的是外汇掉期交易和利率掉期交易，多被用作避险和投机的目的。</p></blockquote><p>A向B申请贷款，B为了利息而放贷给A，放贷出去的钱总有风险(如果A破产，无法偿还利息和本金)，那么这时候C出场，由C对B的这个风险予以保险承诺，条件是B每年向C支付一定的保险费用（要低于A的贷款利息）。但万一A破产的情况发生，那么由C补偿B所遭受的的损失。<br>信贷违约掉期是一种新的金融衍生产品，类似保险合同。债权人通过这种合同将债务风险出售，合同价格就是保费。如果买入信贷违约掉期合同被投资者定价太低，当次贷违约率上升时，这种“保费”就会上涨，随之增值。</p><h1 id="按揭证券"><a href="#按揭证券" class="headerlink" title="按揭证券"></a>按揭证券</h1><h2 id="抵押"><a href="#抵押" class="headerlink" title="抵押"></a>抵押</h2><p>一般，借款可以分为“有抵押借贷”和“无抵押借贷”两种，而抵押就是属前者。</p><blockquote><p>抵押（mortgage），亦称按揭（注意：部分地区或国家之“按揭”制度与“抵押”意义并非全然相同），是指提供私人资产（不论是否为不动产）作为债务担保的动作，多发生于购买房地产时银行借出的抵押贷款或在典当商折现非不动产的物品。抵押常在银行或地产界中使用。</p></blockquote><h2 id="按揭证券-Mortgage-Backed-Securities-MBS"><a href="#按揭证券-Mortgage-Backed-Securities-MBS" class="headerlink" title="按揭证券(Mortgage-Backed Securities, MBS)"></a>按揭证券(Mortgage-Backed Securities, MBS)</h2><p>人们贷款买房，一些公司拥有很多这样的贷款，将这些发行给市面上的投资者，即按揭证券（投资者-&gt;按揭证劵-&gt;房贷中介公司-&gt;房贷-&gt;贷款者）。这是一种资产抵押债券形式，钱从贷款买房者流向中介公司，然后偿还给投资者。而中介公司有一定的风险，因为贷款买房者可能会违约。而房子就是房贷抵押。<br>但是一部分投资者可能觉得这种按揭证券风险太大，因此中介公司请一些评级机构来调查底层贷款者的情况，并进行分级。即评级机构将按揭证券公司所发行的证券进行了评级，一些是BB，一些是AA级等；</p><blockquote><p>债务抵押债券(the collateralized debt obligation, CDO): 将证券分类为优先级证券、中间级证券、权益级证券。优先偿还优先级证券持有者，然后是中间级证券持有者，最后是权益级证券持有者。CDO是抵押贷款的衍生证券，优先级证券会被评级机构给予较高的级别，风险较低，同样利率也低；权益级证券的风险较高，但是利率也高。</p></blockquote><p>向银行贷款的人太多，银行就会将这些贷款转到投行公司，投行公司将这些抵押贷款以按揭证券的形式发放出去。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;天下熙熙，皆为利来；天下壤壤，皆为利往。&lt;br&gt;夫千乘之王，万家之侯，百室之君，尚犹患贫，而况匹夫编户之民乎！&lt;br&gt;《史记 货殖列传》&lt;br&gt;&lt;/blockquote&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Open Classes" scheme="http://seanxp.com/categories/Open-Classes/"/>
    
    
      <category term="Learning" scheme="http://seanxp.com/tags/Learning/"/>
    
      <category term="Finance" scheme="http://seanxp.com/tags/Finance/"/>
    
      <category term="Abstract" scheme="http://seanxp.com/tags/Abstract/"/>
    
      <category term="Khan" scheme="http://seanxp.com/tags/Khan/"/>
    
      <category term="Course" scheme="http://seanxp.com/tags/Course/"/>
    
  </entry>
  
  <entry>
    <title>Mac神器hammerspoon</title>
    <link href="http://seanxp.com/2016/05/mac-hammerspoon/"/>
    <id>http://seanxp.com/2016/05/mac-hammerspoon/</id>
    <published>2016-05-08T23:41:58.000Z</published>
    <updated>2018-03-11T02:29:34.395Z</updated>
    
    <content type="html"><![CDATA[<p><div align="center"><br><img src="https://raw.githubusercontent.com/Hammerspoon/hammerspoon.github.io/master/images/hammerspoon.png" width="100" height="100" alt="Hammerspoon"><br>一键切换常用应用，一键调整桌面布局，Love Mac，Love Hammerspoon。<br></div><br><a id="more"></a></p><h1 id="What-is-Hammerspoon"><a href="#What-is-Hammerspoon" class="headerlink" title="What is Hammerspoon?"></a>What is Hammerspoon?</h1><p>This is a tool for powerful automation of OS X. At its core, Hammerspoon is just a bridge between the operating system and a Lua scripting engine.<br>What gives Hammerspoon its power is a set of extensions that expose specific pieces of system functionality, to the user.<br>Hammerspoon可以自定义Mac OS X的快捷键（例如<code>Command</code>+<code>Shift</code>+<code>h</code>）以实现多类操作，我个人主要将其用于窗口管理（比moom for mac更加高效）与应用启动（比alfred for mac更加高效）。</p><ul><li>Hammerspoon:  <a href="http://www.hammerspoon.org/" target="_blank" rel="noopener">http://www.hammerspoon.org/</a></li><li>Github:       <a href="https://github.com/Hammerspoon/hammerspoon" target="_blank" rel="noopener">https://github.com/Hammerspoon/hammerspoon</a></li><li><a href="http://www.hammerspoon.org/docs/index.html" target="_blank" rel="noopener">Hammerspoon API Documentation</a></li></ul><h1 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h1><ol><li>Download the <a href="https://github.com/Hammerspoon/hammerspoon/releases/" target="_blank" rel="noopener">latest release</a>, Drag <code>Hammerspoon.app</code> from your <code>Downloads</code> folder to <code>Applications</code>;</li><li><p>use <a href="http://brew.sh/" target="_blank" rel="noopener">Homebrew</a> tool(recommend)</p><pre><code>$ brew cask install hammerspoon</code></pre></li></ol><h1 id="Getting-Started-Guide"><a href="#Getting-Started-Guide" class="headerlink" title="Getting Started Guide"></a>Getting Started Guide</h1><p>参考：<a href="http://www.hammerspoon.org/go/" target="_blank" rel="noopener">Getting Started Guide</a><br><code>~/.hammerspoon</code>为hammerspoon的配置目录，配置文件<code>init.lua</code>基于Lua脚本语言编写。</p><pre><code>$ mkdir -p ~/.hammerspoon$ cd ~/.hammerspoon$ touch init.lua</code></pre><p>之后的配置就是往<code>init.lua</code>中添加配置，修改完配置后hammerspoon.app需要重新加载(<code>Menu -&gt; hammerspoon.app -&gt; Reload Config</code>)；</p><h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h2><p>参考：<a href="http://www.hammerspoon.org/go/#helloworld" target="_blank" rel="noopener">http://www.hammerspoon.org/go/#helloworld</a></p><pre><code>$ vim init.lua# 添加:hs.hotkey.bind({&apos;cmd&apos;, &apos;shift&apos;}, &apos;h&apos;, function()    hs.alert(&apos;Hello World&apos;)end)</code></pre><p>保存配置文件，<code>Reload Config</code>，配置文件成效！<br>按<code>Command</code>+<code>Shift</code>+<code>h</code>，屏幕上就会出现一行文本<code>Hello World</code>，几秒后自动消失。</p><blockquote><p>Hammerspoon 是一个插件化的程序，像 hs.hotkey 和 hs.alert 这些都是 Hammerspoon 所集成的插件。</p></blockquote><h2 id="Fancier-Hello-World"><a href="#Fancier-Hello-World" class="headerlink" title="Fancier Hello World"></a>Fancier Hello World</h2><p>参考：<a href="http://www.hammerspoon.org/go/#fancyhelloworld" target="_blank" rel="noopener">http://www.hammerspoon.org/go/#fancyhelloworld</a></p><pre><code>hs.hotkey.bind({&quot;cmd&quot;, &quot;alt&quot;, &quot;ctrl&quot;}, &quot;W&quot;, function()    hs.notify.new({title=&quot;Hammerspoon&quot;, informativeText=&quot;Hello World&quot;}):send()end)</code></pre><p>使用Mac OS X系统自带的提示(notifications)，右上角弹窗显示<code>Hello World</code>；</p><h1 id="配置示例"><a href="#配置示例" class="headerlink" title="配置示例"></a>配置示例</h1><h2 id="模块化设计"><a href="#模块化设计" class="headerlink" title="模块化设计"></a>模块化设计</h2><p>所以配置都放在<code>init.lua</code>里未免太过繁琐，修改起来也比较麻烦，因此在配置前设计一套模块化的脚本配置文件是很有必要的。<br>具体做法：不同配置写在不同文件里（例如有关启动应用的配置写在<code>launch.lua</code>中），在主配置文件<code>init.lua</code>中包含模块配置文件（可以类比C语言的include）。<br>配置文件的目录框架：</p><pre><code>├── init.lua└── modules    ├── auto_reload.lua    ├── hotkey.lua    ├── launch.lua    ├── screens.lua    ├── system.lua    └── windows.lua</code></pre><p><code>init.lua</code>:</p><pre><code>require &quot;modules/hotkey&quot;require &quot;modules/screens&quot;require &quot;modules/windows&quot;require &quot;modules/launch&quot;require &quot;modules/system&quot;require &quot;modules/auto_reload&quot;</code></pre><h2 id="快捷键设定"><a href="#快捷键设定" class="headerlink" title="快捷键设定"></a>快捷键设定</h2><p><code>~/.hammerspoon/modules/hotkey.lua</code>:</p><pre><code>hyper = {&apos;ctrl&apos;, &apos;cmd&apos;}hyperShift = {&apos;ctrl&apos;, &apos;cmd&apos;, &apos;shift&apos;}</code></pre><p>配置快捷键前缀，其他配置文件会用到该变量<code>hyper</code>与<code>hyperShift</code>。这样配置的好处是，想要更换快捷键，只需要修改这一处即可。</p><h2 id="快速启动Applications"><a href="#快速启动Applications" class="headerlink" title="快速启动Applications"></a>快速启动Applications</h2><p><code>~/.hammerspoon/modules/launch.lua</code>:</p><pre><code>local hotkey = require &apos;hs.hotkey&apos;local window = require &apos;hs.window&apos;local application = require &apos;hs.application&apos;local key2App = {    a = &apos;AppCleaner&apos;,    e = &apos;Evernote&apos;,    f = &apos;Finder&apos;,    g = &apos;Mail&apos;,    j = &apos;Google Chrome&apos;,    k = &apos;Preview&apos;,    m = &apos;MacDown&apos;,    p = &apos;1Password&apos;,    r = &apos;Reeder&apos;,    s = &apos;System Preferences&apos;,    z = &apos;Dictionary&apos;}for key, app in pairs(key2App) do    hotkey.bind(hyper, key, function()        --application.launchOrFocus(app)        toggle_application(app)    end)end-- reloadhotkey.bind(hyper, &apos;escape&apos;, function() hs.reload() end )-- Toggle an application between being the frontmost app, and being hiddenfunction toggle_application(_app)    -- finds a running applications    local app = application.find(_app)    if not app then        -- application not running, launch app        application.launchOrFocus(_app)        return    end    -- application running, toggle hide/unhide    local mainwin = app:mainWindow()    if mainwin then        if true == app:isFrontmost() then            mainwin:application():hide()        else            mainwin:application():activate(true)            mainwin:application():unhide()            mainwin:focus()        end    else        -- no windows, maybe hide        if true == app:hide() then            -- focus app            application.launchOrFocus(_app)        else            -- nothing to do        end    endend</code></pre><p><code>key2App</code>指定快捷键后缀与应用的对应关系，通过<code>hotkey.bind</code>函数实现快捷键绑定，例如按<code>hyper</code>+<code>e</code>就是启动<code>Evernote</code>，按<code>hyper</code>+<code>p</code>就是启动<code>1Password</code>。<br><code>toggle_application</code>函数是启动应用的具体实现，首先<code>application.find()</code>查找正在运行的app中是否有相同名称的app，没有找到则调用<code>application.launchOrFocus()</code>直接启动，找到则检查应用是否显示在最前(<code>app:isFrontmost()</code>)，在<code>focus</code>与<code>hide</code>之间切换。这样，按<code>hyper</code>+<code>e</code>就是启动<code>Evernote</code>，再次按<code>hyper</code>+<code>e</code>就是隐藏<code>Evernote</code>。</p><h2 id="窗口管理"><a href="#窗口管理" class="headerlink" title="窗口管理"></a>窗口管理</h2><p><code>~/.hammerspoon/modules/windows.lua</code>:</p><pre><code>require &quot;hs.application&quot;local hotkey = require &apos;hs.hotkey&apos;local window = require &apos;hs.window&apos;local layout = require &apos;hs.layout&apos;local alert = require &apos;hs.alert&apos;local hints = require &apos;hs.hints&apos;local grid = require &apos;hs.grid&apos;local geometry = require &apos;hs.geometry&apos;---- hyper [ for left one half windowhotkey.bind(hyper, &apos;[&apos;, function() window.focusedWindow():moveToUnit(layout.left50) end)-- hyper ] for right one half windowhotkey.bind(hyper, &apos;]&apos;, function() window.focusedWindow():moveToUnit(layout.right50) end)-- Hyper / to show window hintshotkey.bind(hyper, &apos;/&apos;, function()    hints.windowHints()end)-- Hotkeys to interact with the window gridhotkey.bind(hyper, &apos;,&apos;, grid.show)hotkey.bind(hyper, &apos;Left&apos;, grid.pushWindowLeft)hotkey.bind(hyper, &apos;Right&apos;, grid.pushWindowRight)hotkey.bind(hyper, &apos;Up&apos;, grid.pushWindowUp)hotkey.bind(hyper, &apos;Down&apos;, grid.pushWindowDown)</code></pre><p>hammerspoon提供的窗口管理API十分丰富，一行配置，就可以实现<code>hyper</code>+<code>[</code>使得窗口左半屏。<br><code>window.focusedWindow():moveToUnit(layout.right50)</code>，使得当前focused的窗口移动到左半屏(<code>latest.right50</code>)，右半屏则为(<code>latest.right50</code>)；</p><p>三七分屏(<code>layout.left30</code>, <code>layout.right70</code>):</p><pre><code>-- Hotkeys to resize windows absolutely--hotkey.bind(hyper, &apos;[&apos;, function() window.focusedWindow():moveToUnit(layout.left30) end)--hotkey.bind(hyper, &apos;]&apos;, function() window.focusedWindow():moveToUnit(layout.right70) end)</code></pre><p>按<code>hyper</code>+<code>/</code>显示窗口提示<code>hints.windowHints()</code>;<br>按<code>hyper</code>+<code>,</code>显示窗口珊格<code>grid.show</code>，可以将屏幕布局划分为九宫格，用户可以自定义当前窗口所占的空间大小。<br><code>grid.pushWindowLeft</code>,<code>grid.pushWindowRight</code>实现窗口的移动，例如左半屏的窗口，通过<code>hyper</code>+<code>left</code>实现移动到右半屏，等价于<code>hyper</code>+<code>]</code>的效果。</p><h1 id="配置文件参考-SeanXP"><a href="#配置文件参考-SeanXP" class="headerlink" title="配置文件参考 - SeanXP"></a>配置文件参考 - SeanXP</h1><p><a href="https://github.com/SeanXP/dotfiles/tree/master/hammerspoon" target="_blank" rel="noopener">SeanXP-Hammerspoon</a></p><h2 id="快捷键配置"><a href="#快捷键配置" class="headerlink" title="快捷键配置"></a>快捷键配置</h2><p><code>hyper</code> = <code>ctrl</code> + <code>cmd</code><br><code>hyperShift</code> = <code>ctrl</code> + <code>cmd</code> + <code>Shift</code></p><h2 id="Focus-Application-modules-launch-lua"><a href="#Focus-Application-modules-launch-lua" class="headerlink" title="Focus Application - modules/launch.lua"></a>Focus Application - modules/launch.lua</h2><table><thead><tr><th>Key</th><th>Description</th></tr></thead><tbody><tr><td><code>hyper</code>+<code>a</code></td><td>Toggle AppCleaner</td></tr><tr><td><code>hyper</code>+<code>b</code></td><td>Toggle Notes</td></tr><tr><td><code>hyper</code>+<code>c</code></td><td>Toggle Calendar</td></tr><tr><td><code>hyper</code>+<code>d</code></td><td>(System hotkey) Define word</td></tr><tr><td><code>hyper</code>+<code>e</code></td><td>Toggle Evernote</td></tr><tr><td><code>hyper</code>+<code>f</code></td><td>Toggle Finder</td></tr><tr><td><code>hyper</code>+<code>g</code></td><td>Toggle Mail</td></tr><tr><td><code>hyper</code>+<code>h</code></td><td>Toggle Dash</td></tr><tr><td><code>hyper</code>+<code>j</code></td><td>Toggle Google Chrome</td></tr><tr><td><code>hyper</code>+<code>k</code></td><td>Toggle Preview</td></tr><tr><td><code>hyper</code>+<code>m</code></td><td>Toggle MacDown</td></tr><tr><td><code>hyper</code>+<code>n</code></td><td>Toggle NeteaseMusic</td></tr><tr><td><code>hyper</code>+<code>o</code></td><td>Toggle OmniToggle</td></tr><tr><td><code>hyper</code>+<code>p</code></td><td>Toggle 1Password</td></tr><tr><td><code>hyper</code>+<code>r</code></td><td>Toggle Reeder</td></tr><tr><td><code>hyper</code>+<code>s</code></td><td>Toggle System Preferences</td></tr><tr><td><code>hyper</code>+<code>t</code></td><td>Toggle Tweetbot</td></tr><tr><td><code>hyper</code>+<code>u</code></td><td>Toggle Ulysses</td></tr><tr><td><code>hyper</code>+<code>w</code></td><td>Toggle WeChat</td></tr><tr><td><code>hyper</code>+<code>z</code></td><td>Toggle Dictionary</td></tr><tr><td><code>hyper</code>+<code>;</code></td><td>Toggle iTerm</td></tr><tr><td><code>hyper</code>+<code>ESC</code></td><td>Reload Hammerspoon Config</td></tr></tbody></table><h2 id="auto-reload-modules-auto-reload-lua"><a href="#auto-reload-modules-auto-reload-lua" class="headerlink" title="auto reload - modules/auto_reload.lua"></a>auto reload - modules/auto_reload.lua</h2><p>automatically reload the configuration whenever the file changes.</p><h2 id="Window-Layouts-modules-windows-lua"><a href="#Window-Layouts-modules-windows-lua" class="headerlink" title="Window Layouts - modules/windows.lua"></a>Window Layouts - modules/windows.lua</h2><table><thead><tr><th>Key</th><th>Description</th></tr></thead><tbody><tr><td><code>hyper</code>+<code>[</code></td><td>Set the current app to left layout</td></tr><tr><td><code>hyper</code>+<code>tab</code></td><td>Toggle the current app to fullscreen layout or normal layout</td></tr><tr><td><code>hyper</code>+<code>]</code></td><td>Set the current app to right layout</td></tr><tr><td><code>hyper</code>+<code>,</code></td><td>Show the window grid</td></tr><tr><td><code>hyper</code>+<code>Left</code></td><td>Push the current app to the left screen</td></tr><tr><td><code>hyper</code>+<code>Right</code></td><td>Push the current app to the right screen</td></tr><tr><td><code>hyper</code>+<code>Up</code></td><td>Push the current app to the up screen</td></tr><tr><td><code>hyper</code>+<code>Down</code></td><td>Push the current app to the down screen</td></tr><tr><td><code>hyper</code>+<code>/</code></td><td>Show Window Hints</td></tr></tbody></table><h2 id="Move-between-displays-modules-screens-lua"><a href="#Move-between-displays-modules-screens-lua" class="headerlink" title="Move between displays - modules/screens.lua"></a>Move between displays - modules/screens.lua</h2><table><thead><tr><th>Key</th><th>Description</th></tr></thead><tbody><tr><td><code>hyper</code>+ <code>.</code></td><td>Move to next display</td></tr><tr><td><code>hyperShift</code>+ <code>.</code></td><td>Move to previous display</td></tr></tbody></table><h2 id="System-hotkey-modules-system-lua"><a href="#System-hotkey-modules-system-lua" class="headerlink" title="System hotkey - modules/system.lua"></a>System hotkey - modules/system.lua</h2><table><thead><tr><th>Key</th><th>Description</th></tr></thead><tbody><tr><td><code>hyper</code>+ <strong>`</strong></td><td>lock screen</td></tr></tbody></table><h1 id="其他教程参考"><a href="#其他教程参考" class="headerlink" title="其他教程参考"></a>其他教程参考</h1><ul><li><a href="http://www.hammerspoon.org/go/" target="_blank" rel="noopener">Getting Started Guide</a></li><li><a href="https://github.com/Hammerspoon/hammerspoon/wiki/Sample-Configurations" target="_blank" rel="noopener">https://github.com/Hammerspoon/hammerspoon/wiki/Sample-Configurations</a></li><li><a href="https://github.com/cmsj/hammerspoon-config" target="_blank" rel="noopener">https://github.com/cmsj/hammerspoon-config</a></li><li><a href="http://bezhermoso.github.io/2016/01/20/making-perfect-ramen-lua-os-x-automation-with-hammerspoon/" target="_blank" rel="noopener">http://bezhermoso.github.io/2016/01/20/making-perfect-ramen-lua-os-x-automation-with-hammerspoon/</a></li><li><a href="https://songchenwen.com/tech/2015/04/02/hammerspoon-mac-window-manager/" target="_blank" rel="noopener">Hammerspoon, OS X 上的全能窗口管理器</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;div align=&quot;center&quot;&gt;&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/Hammerspoon/hammerspoon.github.io/master/images/hammerspoon.png&quot; width=&quot;100&quot; height=&quot;100&quot; alt=&quot;Hammerspoon&quot;&gt;&lt;br&gt;一键切换常用应用，一键调整桌面布局，Love Mac，Love Hammerspoon。&lt;br&gt;&lt;/div&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Mac" scheme="http://seanxp.com/categories/Mac/"/>
    
    
      <category term="Tutorial" scheme="http://seanxp.com/tags/Tutorial/"/>
    
      <category term="Mac" scheme="http://seanxp.com/tags/Mac/"/>
    
      <category term="Software" scheme="http://seanxp.com/tags/Software/"/>
    
      <category term="Efficiency" scheme="http://seanxp.com/tags/Efficiency/"/>
    
  </entry>
  
  <entry>
    <title>samba服务器配置</title>
    <link href="http://seanxp.com/2016/05/samba/"/>
    <id>http://seanxp.com/2016/05/samba/</id>
    <published>2016-05-08T06:18:21.000Z</published>
    <updated>2018-03-11T02:29:34.400Z</updated>
    
    <content type="html"><![CDATA[<p>Samba最大的功能就是可以用于Linux与windows系统直接的文件共享和打印共享，Samba既可以用于windows与Linux之间的文件共享，也可以用于Linux与Linux之间的资源共享，由于NFS(网络文件系统）可以很好的完成Linux与Linux之间的数据共享，因而 Samba较多的用在了Linux与windows之间的数据共享上面。<br><a id="more"></a></p><h1 id="Samba简介"><a href="#Samba简介" class="headerlink" title="Samba简介"></a>Samba简介</h1><p>Samba是一个能让Linux系统应用Microsoft网络通讯协议的软件，而SMB是<code>Server Message Block</code>的缩写，即为服务器消息块 ，SMB主要是作为Microsoft的网络通讯协议，后来Samba将SMB通信协议应用到了Linux系统上，就形成了现在的Samba软件。后来微软又把 SMB 改名为 <code>CIFS（Common Internet File System）</code>，即公共 Internet 文件系统，并且加入了许多新的功能，这样一来，使得Samba具有了更强大的功能。</p><p><font color="red">Samba最大的功能就是可以用于Linux与windows系统直接的文件共享和打印共享</font>，Samba既可以用于windows与Linux之间的文件共享，也可以用于Linux与Linux之间的资源共享，由于NFS(网络文件系统）可以很好的完成Linux与Linux之间的数据共享，因而 Samba较多的用在了Linux与windows之间的数据共享上面。<br>Samba 是 SMB/CIFS 网络协议的重新实现, 它作为 NFS 的补充使得在 Linux 和 Windows 系统中进行文件共享、打印机共享更容易实现。</p><p>参考：</p><ul><li><a href="http://wiki.ubuntu.org.cn/Samba" target="_blank" rel="noopener">http://wiki.ubuntu.org.cn/Samba</a></li><li><a href="https://wiki.archlinux.org/index.php/Samba" target="_blank" rel="noopener">https://wiki.archlinux.org/index.php/Samba</a></li><li><a href="http://www.cnblogs.com/mchina/archive/2012/12/18/2816717.html" target="_blank" rel="noopener">http://www.cnblogs.com/mchina/archive/2012/12/18/2816717.html</a></li></ul><h2 id="1-安装Samba服务器"><a href="#1-安装Samba服务器" class="headerlink" title="1. 安装Samba服务器"></a>1. 安装Samba服务器</h2><p>Ubuntu:</p><pre><code>$ sudo apt-get install samba</code></pre><p>Arch Linux:</p><pre><code>$ sudo pacman -S samba</code></pre><h2 id="2-创建共享目录"><a href="#2-创建共享目录" class="headerlink" title="2. 创建共享目录"></a>2. 创建共享目录</h2><p>假设共享目录为: <code>/home/Share</code>, 设置该文件夹的权限777使其让所有用户可读可写可运行。</p><pre><code>$ sudo mkdir -p /home/Share$ sudo chmod 777 /home/Share</code></pre><h2 id="3-修改配置文件"><a href="#3-修改配置文件" class="headerlink" title="3. 修改配置文件"></a>3. 修改配置文件</h2><p>备份（编辑系统文件前养成备份的好习惯，避免编辑错误后系统工作不正常）并编辑<code>/etc/samba/smb.conf</code>允许网络用户访问：</p><pre><code>$ sudo cp /etc/samba/smb.conf /etc/samba/smb.conf_backup$ sudo vim /etc/samba/smb.conf</code></pre><h3 id="公共共享文件夹-支持游客登录）"><a href="#公共共享文件夹-支持游客登录）" class="headerlink" title="公共共享文件夹 (支持游客登录）"></a>公共共享文件夹 (支持游客登录）</h3><p><code>/etc/samba/smb.conf</code>文件末尾添加:</p><pre><code>[Public-Share]    comment = shared folder for public    path = /home/Share    # 是否游客访问    # guest ok = yes # 等价 &apos;public = yes&apos;    public = yes    # 是否可写    writable = yes    # 是否可浏览    browseable = yes    # 是否可用    available = yes</code></pre><h3 id="用户共享文件夹-samba帐号登录）"><a href="#用户共享文件夹-samba帐号登录）" class="headerlink" title="用户共享文件夹 (samba帐号登录）"></a>用户共享文件夹 (samba帐号登录）</h3><p><code>/etc/samba/smb.conf</code>文件末尾添加:</p><pre><code>[Private-Share]    comment = Shared Folder with username and password    path = /home/Share    # 指定能够使用该共享资源的用户和组    valid users = user1    # 是否可写    writable = yes    # 是否可浏览    browseable = yes    # 是否可用    available = yes</code></pre><h2 id="4-创建samba用户-公共共享文件夹则无需创建帐号"><a href="#4-创建samba用户-公共共享文件夹则无需创建帐号" class="headerlink" title="4. 创建samba用户(公共共享文件夹则无需创建帐号)"></a>4. 创建samba用户(公共共享文件夹则无需创建帐号)</h2><p>注意：创建samba用户之前，必须先确保有一个同名的Linux用户，否则samba用户会创建失败。</p><pre><code>$ sudo useradd user1</code></pre><p>上面只是增加了user1这个用户，却没有给用户赋予本机登录密码。所以这个用户将只能从远程访问，不能从本机登录(当然，root可以修改user1用户的密码，这样user1就可以登录本机了)。<br>而且samba的登录密码可以和本机登录密码不一样。smb用户密码与unix帐号密码可以一样或不同，它们之间不存在连接关系。<br>现在要新增网络使用者的帐号，设置user1用户的samba密码，这个密码不是开机登录，而是用于samba登录：</p><pre><code>$ sudo smbpasswd -a user1</code></pre><p>删除samba密码:</p><pre><code>$ sudo smbpasswd -x user1</code></pre><p>同样，也可以使用pdbedit设置samba密码;</p><pre><code>$ sudo pdbedit -a -u user1</code></pre><p>查看:</p><pre><code>$ sudo pdbedit -L</code></pre><p>删除:</p><pre><code>$ sudo pdbedit -x user1</code></pre><h2 id="5-重启samba服务"><a href="#5-重启samba服务" class="headerlink" title="5. 重启samba服务"></a>5. 重启samba服务</h2><pre><code>$ sudo service smbd restart$ sudo /etc/init.d/samba restart</code></pre><h2 id="6-客户端访问"><a href="#6-客户端访问" class="headerlink" title="6. 客户端访问"></a>6. 客户端访问</h2><h3 id="Linux-smbclient"><a href="#Linux-smbclient" class="headerlink" title="Linux - smbclient"></a>Linux - smbclient</h3><pre><code>$ sudo apt-get install smbclient</code></pre><p>匿名(-N) 查看(-L):</p><pre><code>$ smbclient -L 10.42.1.100 -N</code></pre><p>实名(-U) 查看(-L):</p><pre><code>$ smbclient -L 10.42.1.100 -U user%password$ smbclient -L 10.42.1.100 -U user1 (推荐，避免保存明文密码）</code></pre><p>这里的password是smbpasswd, 与linux登录密码不等价。<br>进入smbclient命令行进行交互:</p><pre><code>$ smbclient //10.42.1.100/Share -N$ smbclient //10.42.1.100/Share -U user1</code></pre><h3 id="Linux-mount-cifs挂载"><a href="#Linux-mount-cifs挂载" class="headerlink" title="Linux - mount.cifs挂载"></a>Linux - mount.cifs挂载</h3><ol><li><p>安装cifs-utils组件</p><pre><code>$ sudo apt-get install cifs-utils</code></pre></li><li><p>挂载samba目录</p><pre><code>$ sudo mount -t cifs //10.42.1.100/Share /mnt -o guest$ sudo mount -t cifs //10.42.1.100/Share /mnt -o username=user1,password=xxxxxx$ sudo mount -t cifs //10.42.1.100/Share /mnt -o username=user1$ sudo mount.cifs //10.42.1.100/Share /mnt -o username=user1</code></pre></li></ol><h2 id="配置文件详细配置"><a href="#配置文件详细配置" class="headerlink" title="配置文件详细配置"></a>配置文件详细配置</h2><pre><code>### [global]# 定义工作组, 建议修改为”WORKGROUP”（windows默认的工作组名字）workgroup = WORKGROUP# samba server名称server string = %h server (Samba, Ubuntu)dns proxy = no#定义samba的日志，这里的%m是上面的netbios namelog file = /var/log/samba/log.%mmax log size = 1000panic action = /usr/share/samba/panic-action %d# samba的安全等级。关于安全等级有四种：#         share：用户不需要账户及密码即可登录samba服务器#        user：由提供服务的samba服务器负责检查账户及密码（默认）#        server：检查账户及密码的工作由另一台windows或samba服务器负责#        domain：指定windows域控制服务器来验证用户的账户及密码。security = user# passdb backend （用户后台），samba有三种用户后台：smbpasswd, tdbsam和ldapsam;#        smbpasswd：该方式是使用smb工具smbpasswd给系统用户（真实用户或者虚拟用户）设置一个Samba 密码；#                客户端就用此密码访问Samba资源。smbpasswd在/etc/samba中，有时需要手工创建该文件。#        tdbsam：使用数据库文件创建用户数据库。数据库文件叫passdb.tdb，在/etc/samba中。#                passdb.tdb用户数据库可使用smbpasswd -a创建Samba用户，要创建的Samba用户必须先是系统用户。#                也可使用pdbedit创建Samba账户。#        ldapsam：基于LDAP账户管理方式验证用户。首先要建立LDAP服务。passdb backend = tdbsam# 用来设置允许的主机，如果在前面加”;”则为注释，表示允许所有主机hosts allow = 127.  192.168.12.  192.168.13.</code></pre><h3 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h3><pre><code># 指明新建立的文件的属性，一般是0755create mask = 0755# 指明新建立的目录的属性，一般是0755directory mask = 0755comment = smb share test # 该共享的备注path = /home/share # 共享路径allow hosts = host(subnet) # 设置该Samba服务器允许的工作组或者域deny hosts = host(subnet) # 设置该Samba服务器拒绝的工作组或者域available = yes|no # 设置该共享目录是否可用browseable = yes|no # 设置该共享目录是否可显示writable = yes|no # 指定了这个目录缺省是否可写，也可以用readonly = no来设置可写public = yes|no # 指明该共享资源是否能给游客帐号访问，guest ok = yes其实和public = yes是一样的user = user, @group # user设置所有可能使用该共享资源的用户，也可以用@group代表group这个组的所有成员，不同的项目之间用空格或者逗号隔开valid users = user, @group # 指定能够使用该共享资源的用户和组invalid users = user, @group # 指定不能够使用该共享资源的用户和组read list = user, @group # 指定只能读取该共享资源的用户和组write list = user, @group # 指定能读取和写该共享资源的用户和组admin list = user, @group # 指定能管理该共享资源（包括读写和权限赋予等）的用户和组hide dot files = yes|no # 指明是否像UNIX那样隐藏以“.”号开头的文件create mode = 0755 # 指明新建立的文件的属性，一般是0755directory mode = 0755 # 指明新建立的目录的属性，一般是0755sync always = yes|no # 指明对该共享资源进行写操作后是否进行同步操作short preserve case = yes|no # 指明是否区分文件名大小写preserve case = yes|no # 指明是否保持大小写case sensitive = yes|no # 指明是否对大小写敏感，一般选no，不然可能引起错误mangle case = yes|no # 指明混合大小写default case = upper|lower # 指明缺省的文件名是全部大写还是小写force user = testuser # 强制把建立文件的属主是谁。如果我有一个目录，让guest可以写，那么guest就可以删除，如果我用force user= testuser强制建立文件的属主是testuser，同时限制create mask = 0755，这样guest就不能删除了wide links = yes|no # 指明是否允许共享外符号连接，比如共享资源里面有个连接指向非共享资源里面的文件或者目录，如果设置wide links = no将使该连接不可用max connections = 100 # 设定最大同时连接数delete readonly = yes|no # 指明能否删除共享资源里面已经被定义为只读的文件</code></pre><h3 id="防止出现中文目录乱码"><a href="#防止出现中文目录乱码" class="headerlink" title="防止出现中文目录乱码"></a>防止出现中文目录乱码</h3><pre><code>$ export LC_ALL=zh_CN.UTF-8</code></pre><p>在 /etc/samba/smb.conf 中的 [global] 段加上：:</p><pre><code>display charset = UTF-8unix charset = UTF-8dos charset = cp936</code></pre><h2 id="Tip-运行-testparm-检查-samba-的配置文件是否合法。"><a href="#Tip-运行-testparm-检查-samba-的配置文件是否合法。" class="headerlink" title="Tip: 运行 testparm 检查 samba 的配置文件是否合法。"></a>Tip: 运行 testparm 检查 samba 的配置文件是否合法。</h2><pre><code>$ sudo testparm</code></pre><h2 id="7-端口映射"><a href="#7-端口映射" class="headerlink" title="7. 端口映射"></a>7. 端口映射</h2><p>当由于网络问题，需要将内网的 Samba 服务器（假设 IP 为192.168.1.100）映射到外网（假设 IP 为 10.42.1.200）供公网 IP 用户访问，可以使用 iptables 进行端口映射；</p><p>Samba服务所使用的端口和协议：</p><ol><li>Port 137 (UDP) - NetBIOS 名字服务；nmbd</li><li>Port 138 (UDP) - NetBIOS 数据报服务；</li><li><font color="red">Port 139 (TCP) - 文件和打印共享；smbd （基于SMB(Server Message Block)协议，主要在局域网中使用，文件共享协议）</font></li><li>Port 389 (TCP) - 用于 LDAP (Active Directory Mode)；</li><li>Port 445 (TCP) - NetBIOS服务在windos 2000及以后版本使用此端口， (Common Internet File System，CIFS，它是SMB协议扩展到Internet后，实现Internet文件共享）；</li><li>Port 901 (TCP) - 用于 SWAT，用于网页管理Samba；</li></ol><p>这里用于文件共享，只需要端口转发 TCP Port 139 即可。</p><pre><code>iptables -t nat -A PREROUTING -d 10.42.1.200/32 -p tcp --dport 139 -j DNAT --to-destination 192.168.1.100:139</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Samba最大的功能就是可以用于Linux与windows系统直接的文件共享和打印共享，Samba既可以用于windows与Linux之间的文件共享，也可以用于Linux与Linux之间的资源共享，由于NFS(网络文件系统）可以很好的完成Linux与Linux之间的数据共享，因而 Samba较多的用在了Linux与windows之间的数据共享上面。&lt;br&gt;
    
    </summary>
    
      <category term="Tutorial" scheme="http://seanxp.com/categories/Tutorial/"/>
    
    
      <category term="Tutorial" scheme="http://seanxp.com/tags/Tutorial/"/>
    
      <category term="Linux" scheme="http://seanxp.com/tags/Linux/"/>
    
      <category term="Server" scheme="http://seanxp.com/tags/Server/"/>
    
  </entry>
  
  <entry>
    <title>shadowsocks</title>
    <link href="http://seanxp.com/2016/05/shadowsocks/"/>
    <id>http://seanxp.com/2016/05/shadowsocks/</id>
    <published>2016-05-08T03:30:12.000Z</published>
    <updated>2018-03-11T02:29:34.400Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><br>Across the Great Wall we can reach every corner in the world.<br>「越过长城，走向世界每个角落」<br>中国互联网发送的第一封电子邮件（1987年）<br></blockquote><a id="more"></a><h1 id="写给非专业人士看的-Shadowsocks-简介"><a href="#写给非专业人士看的-Shadowsocks-简介" class="headerlink" title="写给非专业人士看的 Shadowsocks 简介"></a>写给非专业人士看的 Shadowsocks 简介</h1><p>原文: <a href="http://vc2tea.com/whats-shadowsocks/" target="_blank" rel="noopener">http://vc2tea.com/whats-shadowsocks/</a></p><h2 id="long-long-ago-…"><a href="#long-long-ago-…" class="headerlink" title="long long ago …"></a>long long ago …</h2><p><img src="/images/2016/shadowsocks-1.png" alt="shadowsocks-1"><br>在很久很久以前，我们访问各种网站都是简单而直接的，用户的请求通过互联网发送到服务提供方，服务提供方直接将信息反馈给用户。</p><h2 id="when-evil-comes"><a href="#when-evil-comes" class="headerlink" title="when evil comes"></a>when evil comes</h2><p><img src="/images/2016/shadowsocks-2.png" alt="shadowsocks-2"><br>然后有一天，GFW 就出现了，他像一个收过路费的强盗一样夹在了在用户和服务之间，每当用户需要获取信息，都经过了 GFW，GFW将它不喜欢的内容统统过滤掉，于是客户当触发 GFW 的过滤规则的时候，就会收到 Connection Reset 这样的响应内容，而无法接收到正常的内容。</p><blockquote><p>国家公共网络监控系统，俗称中国网络防火墙（The Great Fire Wall of China，常用简称“GFW”或“墙”）。一般意义所説的GFW，主要指中国官方对境外涉及敏感内容的网站、IP地址、关键词、网址等的过滤。随着使用的拓广，中文“墙”和英文“GFW”有时也被用作动词，网友所説的“被墙”即指被防火长城所屏蔽。</p></blockquote><p>参考(墙外): <a href="https://theinitium.com/article/20150904-mainland-greatfirewall/" target="_blank" rel="noopener">道高一尺，墙高一丈：互联网封锁是如何升级的</a></p><h2 id="ssh-tunnel"><a href="#ssh-tunnel" class="headerlink" title="ssh tunnel"></a>ssh tunnel</h2><p>聪明的人们想到了利用境外服务器代理的方法来绕过 GFW 的过滤，其中包含了各种HTTP代理服务、Socks服务、VPN服务…<br>其中以 ssh tunnel 的方法比较有代表性:<br><img src="/images/2016/shadowsocks-3.png" alt="shadowsocks-3"></p><ul><li>1) 首先用户和境外服务器基于 ssh 建立起一条加密的通道;</li><li>2,3) 用户通过建立起的隧道进行代理，通过 ssh server 向真实的服务发起请求;</li><li>4,5) 服务通过 ssh server，再通过创建好的隧道返回给用户;</li></ul><p><img src="/images/2016/shadowsocks-5.png" alt="shadowsocks-5"><br><img src="/images/2016/shadowsocks-6.png" alt="shadowsocks-6"><br>由于 ssh 本身就是基于 RSA 加密技术，所以 GFW 无法从数据传输的过程中的加密数据内容进行关键词分析，避免了被重置链接的问题，但由于创建隧道和数据传输的过程中，ssh 本身的特征是明显的，所以 GFW 一度通过分析连接的特征进行干扰，导致 ssh 存在被定向进行干扰的问题。</p><h2 id="shadowsocks"><a href="#shadowsocks" class="headerlink" title="shadowsocks"></a>shadowsocks</h2><p>于是 <a href="https://github.com/shadowsocks/shadowsocks" target="_blank" rel="noopener">clowwindy</a>分享并开源了他的解决方案 - <a href="http://shadowsocks.org/" target="_blank" rel="noopener">shadowsocks</a>。<br>简单理解的话，shadowsocks 是将原来 ssh 创建的 Socks5 协议拆开成 server 端和 client 端，所以下面这个原理图基本上和利用 ssh tunnel 大致类似：<br><img src="/images/2016/shadowsocks-4.png" alt="shadowsocks-4"></p><ul><li>1,6) 客户端发出的请求基于 Socks5 协议跟 ss-local 端进行通讯，由于这个 ss-local 一般是本机或路由器或局域网的其他机器，不经过 GFW，所以解决了上面被 GFW 通过特征分析进行干扰的问题;</li><li>2,5) ss-local 和 ss-server 两端通过多种可选的加密方法进行通讯，经过 GFW 的时候是常规的TCP包，没有明显的特征码而且 GFW 也无法对通讯数据进行解密;</li><li>3,4) ss-server 将收到的加密数据进行解密，还原原来的请求，再发送到用户需要访问的服务，获取响应原路返回;</li></ul><h1 id="Shadowsocks-使用"><a href="#Shadowsocks-使用" class="headerlink" title="Shadowsocks 使用"></a>Shadowsocks 使用</h1><p>Shadowsocks分为服务器与客户端两部分程序, 其正常使用需要服务端(其实所有的翻墙方式都需要服务端)，搭建服务端需要你拥有一个属于自己的VPS(或者直接购买其他人提供的Shadowsocks服务器帐号)。服务器端程序一般运行在国外的主机即可。</p><h2 id="搭建Shadowsocks服务器"><a href="#搭建Shadowsocks服务器" class="headerlink" title="搭建Shadowsocks服务器"></a>搭建Shadowsocks服务器</h2><p>参考：<a href="http://shadowsocks.blogspot.com/2015/01/shadowsocks.html" target="_blank" rel="noopener">史上最详尽Shadowsocks从零开始一站式翻墙教程</a></p><h3 id="VPS主机选购"><a href="#VPS主机选购" class="headerlink" title="VPS主机选购"></a>VPS主机选购</h3><p>注意：这些VPS服务商网址在部分地区被墙(DNS污染)，需要翻墙访问。不过在上面购买的VPS不受影响（IP直接访问）。</p><ul><li><a href="https://www.digitalocean.com/" target="_blank" rel="noopener">DigitalOcean</a><br>  KVM架构，512MB/1CPU，20GB SSD Disk，1TB流量/月，$5/month($0.007/hour)（折合人民币30元/月）<br>  我个人就是使用<a href="https://www.digitalocean.com/" target="_blank" rel="noopener">DigitalOcean</a>的VPS($5/month)，作为Shadowsocks服务器绰绰有余。<br>  推介计划：点击<a href="https://m.do.co/c/0ffb835591de" target="_blank" rel="noopener">推介地址</a>注册DigitalOcean帐号，可以立即到帐$10用于试用；</li><li><a href="https://bandwagonhost.com/" target="_blank" rel="noopener">搬瓦工(BandwagonHOST)</a><br>  OpenVZ架构，256MB内存，10GB硬盘，500GB流量/月，19.99美元/年（折合人民币10元/月）<br>  OpenVZ架构，512MB内存，20GB硬盘，1TB流量/月，49.99美元/年（折合人民币25元/月）</li><li><a href="https://www.linode.com/" target="_blank" rel="noopener">Linode</a><br>  Xen架构，1GB内存，24GB硬盘，2TB流量/月，10美元/月（折合人民币60元/月）<br>  只推荐给对连接速度和网络延迟有极致追求的用户，一般DigitalOcean或BandwagonHOST足以满足一般翻墙要求。</li></ul><p>DigitalOcean和搬瓦工两家的VPS都支持PayPal付款，DigitalOcean也可以选择在账单里绑定信用卡进行支付。<br>Linode只能使用信用卡支付，官方会随机手工抽查，被抽查到的话需要上传信用卡正反面照片以及可能还需要身份证正反面照片，只要材料真实齐全，审核速度很快，一般一个小时之内就可以全部搞定。账户成功激活以后，就可以安心使用了。</p><blockquote><p>OpenVZ为不完全虚拟化技术，每个VPS账户共享母机内核，易受同一母机下其他VPS的影响，几乎不能单独修改内核。Xen和KVM为完全虚拟化技术，各VPS之间互相独立，基本互不影响，而且可以任意修改内核。<br>这三种架构对我们搭建shadowsocks服务器来讲最直观的区别就是，Xen和KVM可通过系统内核修改来优化服务器，大幅度提升shadowsocks的连接速度，尤其体现在晚高峰的时候。</p></blockquote><h3 id="在VPS中搭建Shadowsocks服务器端程序"><a href="#在VPS中搭建Shadowsocks服务器端程序" class="headerlink" title="在VPS中搭建Shadowsocks服务器端程序"></a>在VPS中搭建Shadowsocks服务器端程序</h3><p>充值完毕后，就可以通过网页操作创建对应的虚拟机映像，开启虚拟机映像后，根据其IP、SSH端口、root密码，就可以在任意一台电脑上远程登录VPS。<br>windows推荐使用putty登录, Linux直接通过命令行ssh工具登录:</p><pre><code>$ ssh root@192.168.1.100 -p 22</code></pre><ul><li>Shadowsocks Server下载地址: <a href="https://shadowsocks.org/en/download/servers.html" target="_blank" rel="noopener">https://shadowsocks.org/en/download/servers.html</a></li><li>Shadowsocks Server <a href="https://github.com/shadowsocks/shadowsocks/blob/master/README.md" target="_blank" rel="noopener">README.md</a></li></ul><h4 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h4><p>2017/02/18 更新：<a href="https://doub.io/ss-jc5/" target="_blank" rel="noopener">Shadowsocks libev一键安装脚本</a> 可以一键快速安装 shadowsocks libev。</p><p>Debian / Ubuntu:</p><pre><code>apt-get install python-pippip install shadowsocks</code></pre><p>CentOS:</p><pre><code>yum install python-setuptools &amp;&amp; easy_install pippip install shadowsocks</code></pre><h4 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h4><pre><code>ssserver -p 443 -k password -m aes-256-cfb</code></pre><p>To run in the background:</p><pre><code>sudo ssserver -p 443 -k password -m aes-256-cfb --user nobody -d start</code></pre><p>To stop:</p><pre><code>sudo ssserver -d stop</code></pre><p>To check the log:</p><pre><code>sudo less /var/log/shadowsocks.log</code></pre><h4 id="Arch-Linux-Install-Shadowsocks-Server"><a href="#Arch-Linux-Install-Shadowsocks-Server" class="headerlink" title="Arch Linux - Install Shadowsocks Server"></a>Arch Linux - Install Shadowsocks Server</h4><pre><code>$ sudo pacman -S git python2$ python2 --versionPython 2.7.11$ git clone -b master https://github.com/shadowsocks/shadowsocks$ cd shadowsocks/shadowsocks$ sudo python server.py -p 8388 -k password -m aes-256-cfb</code></pre><ul><li><code>-p</code>, 设定server_port;</li><li><code>-k</code>, password;</li><li><code>-m</code>, 加密方式;</li></ul><h4 id="Ubuntu-Install-Shadowsocks-Server"><a href="#Ubuntu-Install-Shadowsocks-Server" class="headerlink" title="Ubuntu - Install Shadowsocks Server"></a>Ubuntu - Install Shadowsocks Server</h4><p>shadowsocks-python is the initial version written by @clowwindy. It aims to provide a simple-to-use and easy-to-deploy implementation with basic features of shadowsocks.<br>First, make sure you have Python 2.6 or 2.7.</p><pre><code>$ python --versionPython 2.7.6$ sudo pip install shadowsocks$ ssserver -p 8388 -k password -m aes-256-cfb</code></pre><h4 id="添加配置文件-shadowsocks-json"><a href="#添加配置文件-shadowsocks-json" class="headerlink" title="添加配置文件 shadowsocks.json"></a>添加配置文件 shadowsocks.json</h4><pre><code>$ sudo vim /etc/shadowsocks.json</code></pre><p><code>/etc/shadowsocks.json</code>:</p><pre><code>{    &quot;server&quot;:&quot;0.0.0.0&quot;,    &quot;server_port&quot;:8388,    &quot;local_port&quot;:1080,    &quot;password&quot;:&quot;barfoo!&quot;,    &quot;timeout&quot;:600,    &quot;method&quot;:&quot;aes-256-cfb&quot;,    &quot;auth&quot;: true}</code></pre><p>Shadowsocks Server配置信息:</p><ul><li><code>server</code>:       Shadowsocks Server IP, VPS的IP或Shadowsocks服务器IP;</li><li><code>server_port</code>:  Shadowsocks Server Port;</li><li><code>local_port</code>:   Local Proxy Port, 本地代理地址，其他应用程序想要通过SOCKS 5通道上网，就在其他应用程序的代理设置该端口，一般为<code>(127.0.0.1:1080)</code>;</li><li><code>password</code>:     Shadowsocks Server Encrypt Transfer Password;</li><li><code>timeout</code>:      Connections timeout in seconds;</li><li><code>method</code>:       encryption method, “bf-cfb”, “aes-256-cfb”, “des-cfb”, “rc4”, etc.<br>  Default is table, which is not secure. “aes-256-cfb” is recommended.</li><li><code>auth</code>:         one-time authentication, set true to enable one-time authentication feature.</li></ul><p>Linux - Shadowsocks Server:</p><pre><code># 通过pip install安装shadowsocks, 则:$ /usr/bin/python /usr/bin/ssserver -c /etc/shadowsocks.json# 或者, 通过git clone下在shadowsocks, 则:$ sudo python2 /home/sean/shadowsocks/shadowsocks/server.py -c /etc/shadowsocks.json</code></pre><h4 id="用supervisord管理python进程，实现开机自动启动Shadowsocks服务器程序"><a href="#用supervisord管理python进程，实现开机自动启动Shadowsocks服务器程序" class="headerlink" title="用supervisord管理python进程，实现开机自动启动Shadowsocks服务器程序"></a>用supervisord管理python进程，实现开机自动启动Shadowsocks服务器程序</h4><p>Supervisor 是基于 Python 的进程管理工具，只能运行在 Unix-Like 的系统上，也就是无法运行在 Windows 上。Supervisor 官方版目前只能运行在 Python 2.4 以上版本，但是还无法运行在 Python 3 上，不过已经有一个 Python 3 的移植版 supervisor-py3k。</p><pre><code># Arch Linux$ sudo pacman -S supervisor$ sudo su - root -c &quot;echo_supervisord_conf &gt; /etc/supervisord.conf&quot;# Ubuntu$ sudo pip install supervisor$ sudo su - root -c &quot;echo_supervisord_conf &gt; /etc/supervisord.conf&quot;</code></pre><p>并在<code>/etc/supervisord.conf</code>下添加:</p><pre><code>[program:shadowsocks]command=ssserver -c /etc/shadowsocks.jsonautostart=trueautorestart=trueuser=rootlog_stderr=truelogfile=/var/log/shadowsocks.log</code></pre><p>配置开机启动supervisord, 如果是Ubuntu/CentOS, 则在<code>/etc/rc.local</code>里添加:</p><pre><code># 如果是 Ubuntu 添加以下内容/usr/local/bin/supervisord -c /etc/supervisord.conf# 如果是 Centos 添加以下内容/usr/bin/supervisord -c /etc/supervisord.conf</code></pre><p>若为Arch Linux, 则在Shell运行:</p><pre><code>$ sudo systemctl enable supervisord</code></pre><p>参考: <a href="https://www.restran.net/2015/10/04/supervisord-tutorial/" target="_blank" rel="noopener">Python 进程管理工具 Supervisor 使用教程</a></p><h3 id="shadowsocks-公共代理的必要设置"><a href="#shadowsocks-公共代理的必要设置" class="headerlink" title="shadowsocks 公共代理的必要设置"></a>shadowsocks 公共代理的必要设置</h3><p>参考: <a href="http://www.atgfw.org/2015/02/shadowsocks_10.html" target="_blank" rel="noopener">shadowsocks 公共代理的必要设置</a><br>建议不要把自己的Shadowsocks帐号共享给太多人。「不要把人想得太好，但也不要把人想得太坏，都是凡人。」<br>个人租用VPS并部署shadowsocks服务器端，个人流量较小，也不易被GFW注意到。很多翻墙软件的特点是公共代理，很多人使用，当很多墙内客户端都在短时间内（或者说同时）长时间连接到一个或几个国外远程服务器上时，就会引起GFW的注意并被很快封杀。VPS的IP被封杀的话，就需要重新创建一个虚拟机镜像或切换机房。<br>如果非要作为公共代理，建议设置以下几点：</p><ul><li>超时时间越长，连接被保持得也就越长，导致并发的tcp的连接数也就越多。对于公共代理，这个值应该调整得小一些。推荐60秒。</li><li>在VPS上检查最大文件描述符数量<code>$ ulimit -n</code>, 公共代理需要更多并发的TCP连接数，<code># ulimit -n 8000</code>提高限制。ulimit的设置是一次性的，每次启动ss-server之前都要设置一下。</li><li><p>只要shadowsocks被公开出去，肯定会有人拿代理用于暴力破解ssh的密码。推荐你把shadowsocks限制为只允许访问443和80两个端口。如果你不添加这样的限制，很多vps商都会因为ssh连接开得太多而暂停对你的服务。<br>具体做法: 让ss-server以特定的用户启动</p><pre><code>$ sudo adduser http-ss$ su http-ss -c &quot;ssserver -s 0.0.0.0 -p 443 -k password -m aes-256-cfb -d&quot;# 对于http-ss用户，限制其不能访问80,443之外的端口$ sudo iptables -t filter -A OUTPUT -d 127.0.0.1 -j ACCEPT$ sudo iptables -t filter -m owner --uid-owner http-ss -A OUTPUT -p tcp --sport 1080 -j ACCEPT$ sudo iptables -t filter -m owner --uid-owner http-ss -A OUTPUT -p tcp --dport 80 -j ACCEPT$ sudo iptables -t filter -m owner --uid-owner http-ss -A OUTPUT -p tcp --dport 443 -j ACCEPT$ sudo iptables -t filter -m owner --uid-owner http-ss -A OUTPUT -p tcp -j REJECT --reject-with tcp-reset</code></pre></li><li>避免shadowsocks帐号被用于bt下载（美国的DMCA版权法律），对80端口的流量再进一步进行限制（下载nginx并限制流量）。</li></ul><h2 id="购买Shadowsocks服务器帐号"><a href="#购买Shadowsocks服务器帐号" class="headerlink" title="购买Shadowsocks服务器帐号"></a>购买Shadowsocks服务器帐号</h2><p>除了自己选购VPS(需要一定的Linux运维能力)，也可以直接使用别人搭建好的VPS与Shadowsocks服务器。<br>我个人使用过<a href="https://portal.shadowsocks.com/aff.php?aff=2104" target="_blank" rel="noopener">shadowsocks.com</a>的服务器，提供有：</p><ul><li>Shadowsocks.com 普通版 - $15.95USD (同一时间同一个账号仅限一个终端使用)</li><li>Shadowsocks.com 高级版 - $63.95USD (同一个账号同时支持 5 个终端使用)</li></ul><p>注意，shadowsocks.com不是官方网址，而是一个帐号提供商，不具有权威性，官方网址为<a href="https://shadowsocks.org/" target="_blank" rel="noopener">shadowsocks.org</a>;<br>类似的帐号提供商还有很多，其他我没用过的就不发布评论，大家可以自行Google搜索。</p><h2 id="配置Shadowsocks客户端"><a href="#配置Shadowsocks客户端" class="headerlink" title="配置Shadowsocks客户端"></a>配置Shadowsocks客户端</h2><p>Shadowsocks Client下载地址: <a href="https://shadowsocks.org/en/download/clients.html" target="_blank" rel="noopener">https://shadowsocks.org/en/download/clients.html</a><br>无论是自己搭建Shadowsocks服务器，还是使用别人提供的服务器，最后都还需要在自己的电脑上运行Shadowsocks客户端，连接服务器，才可以科学上网。</p><ul><li>客户端可以使用不同平台的GUI版本，优点是使用方便，可以随时启动关闭，随时切换服务器。</li><li>也可以使用通用的命令行版本，优点是同一个程序在各个平台编译后就可以使用，占用资源更小，软件更新速度快。</li></ul><h3 id="客户端-GUI版"><a href="#客户端-GUI版" class="headerlink" title="客户端 - GUI版"></a>客户端 - GUI版</h3><p>下载对于平台的GUI客户端，运行之后，要添加server相关信息(server, server_port, password, method…);</p><pre><code>服务器：你的VPS IP地址（非0.0.0.0）远程端口：8388本地端口：1080密码：yourpassword加密方法：AES-256-CFB路由：绕过局域网及中国大陆地址全局代理：勾选UDP转发：建议勾选，如有问题则取消勾选自动连接：勾选</code></pre><h4 id="Shadowsocks-for-OSX"><a href="#Shadowsocks-for-OSX" class="headerlink" title="Shadowsocks for OSX"></a>Shadowsocks for OSX</h4><p>For OS X, use <a href="http://brew.sh" target="_blank" rel="noopener">Homebrew</a> to install or build.<br>Install Homebrew:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure></p><p>Install Shadowsocks:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install shadowsocksx</span><br></pre></td></tr></table></figure></p><p>Shadowsocks for OSX可以正常使用，但是已经一年多没有维护了（<a href="https://github.com/clowwindy" target="_blank" rel="noopener">@clowwind</a> 由于政策原因不再维护）。</p><h3 id="客户端-CLI版"><a href="#客户端-CLI版" class="headerlink" title="客户端 - CLI版"></a>客户端 - CLI版</h3><h4 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h4><p><a href="https://github.com/shadowsocks/shadowsocks-libev" target="_blank" rel="noopener">shadowsocks-libev</a> is a lightweight secured SOCKS5 proxy for embedded devices and low-end boxes.<br>It is a port of <a href="https://github.com/shadowsocks/shadowsocks" target="_blank" rel="noopener">Shadowsocks</a> created by <a href="https://github.com/clowwindy" target="_blank" rel="noopener">@clowwindy</a>, which is maintained by <a href="https://github.com/madeye" target="_blank" rel="noopener">@madeye</a> and <a href="https://github.com/linusyang" target="_blank" rel="noopener">@linusyang</a>.</p><h4 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h4><p>Shadowsocks-libev is written in pure C and only depends on <a href="http://software.schmorp.de/pkg/libev.html" target="_blank" rel="noopener">libev</a> and <a href="http://www.openssl.org/" target="_blank" rel="noopener">OpenSSL</a> or <a href="https://polarssl.org/" target="_blank" rel="noopener">PolarSSL</a>. The use of <a href="https://tls.mbed.org/" target="_blank" rel="noopener">mbedTLS</a> is added but still for testing, and it is not officially supported yet.<br>In normal usage, the memory footprint is about 600KB and the CPU utilization is no more than 5% on a low-end router (Buffalo WHR-G300N V2 with a 400MHz MIPS CPU, 32MB memory and 4MB flash).<br>For a full list of feature comparison between different versions of shadowsocks, refer to the <a href="https://github.com/shadowsocks/shadowsocks/wiki/Feature-Comparison-across-Different-Versions" target="_blank" rel="noopener">Wiki page</a>.</p><h4 id="Usage-1"><a href="#Usage-1" class="headerlink" title="Usage"></a>Usage</h4><p>由于 Shadowsocks-libev 良好的通用性，建议使用 Shadowsocks-libev ，任何平台都可以使用。Shadowsocks-libev提供的命令行工具：<code>ss-[local|redir|server|tunnel]</code>，其中<code>ss-server</code>用于搭建shadowsocks服务器，<code>ss-local</code>用于连接服务器。命令的使用与上面的<code>ssserver</code>相同，不过这个是C语言版本实现的。<br><code>shadowsocks.json</code>的格式同服务器的配置文件，需要修改的就是<code>server</code>部分，不再是<code>0.0.0.0</code>，而是一个可以ping通的IP地址。</p><pre><code>ss-local -c shadowsocks.json</code></pre><h3 id="本地SOCKS-5代理（必须配置！）"><a href="#本地SOCKS-5代理（必须配置！）" class="headerlink" title="本地SOCKS 5代理（必须配置！）"></a>本地SOCKS 5代理（必须配置！）</h3><p><strong>打开客户端并不意味着就可以翻墙？！</strong><br>shadowsocks client只是打开本地的<code>local_port</code>开始监听，发往<code>local_port</code>的数据会发往<code>server</code>，以实现翻墙代理。没有发往<code>local_port</code>的数据，是无法翻墙的。<br>因此，对于本地需要翻墙的应用，例如Chrome，Dropbox等，必须要在各自应用的配置选项中，找到代理<code>Proxy</code>选项，选择<code>SOCKS 5</code>代理选项，并填写:<code>代理IP 127.0.0.1</code>, <code>端口 1080</code>。</p><h2 id="TCP-BBR"><a href="#TCP-BBR" class="headerlink" title="TCP BBR"></a>TCP BBR</h2><p><a href="https://github.com/iMeiji/shadowsocks_install/wiki/%E5%BC%80%E5%90%AFTCP-BBR%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95" target="_blank" rel="noopener">开启TCP BBR拥塞控制算法</a><br><a href="https://doub.io/wlzy-16/" target="_blank" rel="noopener">Debian/Ubuntu TCP拥塞控制技术 ——TCP-BBR 一键安装脚本</a><br>BBR 目的是要尽量跑满带宽, 并且尽量不要有排队的情况, 效果并不比速锐差。最新 4.9 内核已支持 tcp_bbr，需要将 VPS linux kernel 更新至 4.9 以上版本才可。<br>开启前后可通过 youtube 视频（右键：详细统计信息）检测网速前后的改善效果。</p><h1 id="匿名与信息安全"><a href="#匿名与信息安全" class="headerlink" title="匿名与信息安全"></a>匿名与信息安全</h1><p><a href="http://www.chinagfw.org/2015/02/ghost-assassin_10.html" target="_blank" rel="noopener">翻墙与匿名与信息安全科普文链接集合</a></p><h2 id="翻墙手段-安全度有高到低"><a href="#翻墙手段-安全度有高到低" class="headerlink" title="翻墙手段(安全度有高到低)"></a>翻墙手段(安全度有高到低)</h2><ol><li>I2P： 安全性最强的匿名软件，没有之一，但是速度极慢，基本上不是人能忍受的，<a href="http://program-think.blogspot.com/2012/06/gfw-i2p.html" target="_blank" rel="noopener">配置教程</a>。</li><li>TOR：大名鼎鼎的洋葱路由，令NSA头大，实质是动态三重代理，推荐<a href="https://plus.google.com/109790703964908675921/posts/QqZ1z7akz6Q" target="_blank" rel="noopener">TOR+前置代理组合</a>。</li><li>shadowsocks：一个轻量级socks加密代理，全主流平台支持。<br>简单来说，shadowsocks就是一个一重加密socks代理，本机上的客户端先与远程服务器（配置了shadowsocks服务端程序的VPS）端建立连接，远程服务器再与目标网站连接从而成功翻墙。<br>首先，VPN无法进行远程DNS解析，所以很多时候在使用VPN的同时还要设定好一个国外的DNS服务器才能正常翻墙（很多人反映很多时候挂着VPN都无法正常打开FB，推特等网站，其实就是因为没有设定国外DNS服务器而遇到了DNS污染）；<br>而shadowsocks默认就支持远程DNS解析（因为socks5代理支持远程DNS解析），这样就省去了配置国外DNS服务器的麻烦，同时还防止了信息泄露：DNS查询直接递给远程代理服务器，然后通过墙外DNS服务器查询得到结果再传回客户端，这样ISP就无法通过DNS查询知道你访问了哪个网站了（而不支持远程DNS解析的VPN就留下了泄露访问信息的隐患），同时也避开了DNS污染。</li><li>VPN：VPN启动后一直是全局代理，不方便浏览墙内网站。不要相信墙内存活的VPN服务商。一旦涉及到付费这一环节，你就很容易被追踪到。所有的VPN都能成为TOR的前置代理。</li><li>Lantern：<ul><li>1.X版本）建立在脆弱的Gtalk服务上，以对等网络P2P的形式翻墙，提供了一种用户可信赖的节点绕过互联网封锁，安全性没有保障(加密机制较弱, 固定端口的传输模式极易受到 GFW 的判定后遭到封杀, Lantern客户端在运行时还会公布出连接服务器的具体IP地址，这一做法会直接招致GFW的封杀和屏蔽)。有了 Lantern，每一台电脑都可以变成服务器。通过运行 Lantern，每一个拥有不受审查的网络的用户可以为那些没有条件的用户提供连接，以此来提供连接到被审查网站（如 Twitter、Facebook 和YouTube）的途径。Lantern的P2P结构抵抗审查是建立在用户信任链基础上的。如果你邀请的朋友不小心邀请了GFW工作人员，你的代理节点也被封锁。</li><li>2.X版本）2015年，蓝灯推出2.0版，用户不再需要通过邀请来连接，且使用网页UI代替客户端式的设置方式。2.X版本不再使用1.X版时的P2P模式，而是使用代理服务器的模式。</li><li><a href="https://bitinn.net/10629/" target="_blank" rel="noopener">初窥万花筒，浅析Lantern背后的Kaleidoscope设计</a> Lantern的定位是P2P网络封锁突破工具，以其“通过信任圈子”传播服务信息的特色作为主要卖点，对抗见洞插针（probing）的防火墙系统。核心技术Kaleidoscope是一个P2P中继系统，主要用途是让被封锁网络域内的用户能访问到被封锁的内容。换而言之，Kaleidoscope的主要目的就是突破网络内容封锁，而非匿名或传输安全性。后者分别是Tor与VPN的主要特性。</li></ul></li><li>GAE类翻墙工具, 不原生支持HTTPS（也就是说无法成为TOR的前置代理），无法防范中间人攻击，加密程度不高（早期无加密），安全性很低，建议只用来浏览网页。<a href="https://plus.google.com/109790703964908675921/posts/QqZTB5EdLEV" target="_blank" rel="noopener">GAE类翻墙软件的风险</a></li><li>修改hosts与躲避DNS污染：毫无安全性可言，目标网站可以看到你的真实公网IP，但速度最快。</li></ol><p>推荐：<a href="https://plus.google.com/109790703964908675921/posts/LyWo2agoau3" target="_blank" rel="noopener">TOR+前置代理</a></p><h2 id="保护和慎用匿名、假名的权利"><a href="#保护和慎用匿名、假名的权利" class="headerlink" title="保护和慎用匿名、假名的权利"></a>保护和慎用匿名、假名的权利</h2><p><a href="http://blog.sina.com.cn/s/blog_4cacf1f30102ecwu.html" target="_blank" rel="noopener">保护和慎用匿名、假名的权利 - 徐贲</a></p><ul><li>在你失去匿名之前，你不会知道它有多么可贵。匿名是一种个人的隐私权，是不想让人知道你是谁的时候，有法律在保护你不让别人知道。</li><li>目前网络上的言论发表，使用的大多是匿名和假名，允许使用匿名和假名应该成为维护互联网言论自由空间的一个重要条件。从平衡个人隐私、公众言论责任和公民伦理着眼，网络实行“有限实名制”，即“后台实名，前台匿名”，要比强制性禁止匿名或假名更符合白皮书的精神。</li><li>有必要区别网络上的匿名和假名（用笔名），匿名和假名与实名（真名）的关系是不同的。“匿名”（anonymity）一词原意是“没有名字”或“无名”。 匿名是把真实姓名藏匿起来，变得“无名”。</li><li>在一个正常的公共社会里，匿名和假名与实名（真名）一样，有它们的身份标志功能，需要具体地看待，不可一概而论地偏废。</li></ul><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>之所以写这篇博客，有以下几点：</p><ul><li>一是整理之前看到的科学上网攻略；作为一名互联网爱好者，热衷于获取自由的互联网信息并将其实践到实际生活中。</li><li>二是帮助需要科学上网的同学梳理思路，简介科学上网的大致流程。科学上网并不难，墙也并不可怕。热爱自由的思想是不怕子弹的，可怕的是一个国家的人民固步自封而又妄自尊大，可怕的是人民无知而又对其“无知”而无知。古有百家争鸣亦有焚书坑儒，近有闭关自守又有戊戌变法。书犹药也，善读之可以医愚，以史为鉴，自强不息。</li><li>三是悼念一位学弟(<a href="http://www.ifanr.com/651797" target="_blank" rel="noopener">青年魏则西之死</a>)，天下熙熙皆为利来，天下攘攘皆为利往，我也不想评论百度、医院、监管、政策的是非曲直，历史自有定论。我只是希望作为当代大学生，可以在喧嚣的互联网时代学会保护自己，扩大知识普及，减少信息不对称，避免下一个因为无知而再次发成的悲剧，并且尽我所能去帮助他人(To grow and to help others grow. To live and to help others live.)。</li></ul><blockquote class="blockquote-center"><br>我向来是不惮以最坏的恶意，来推测中国人的，然而我还不料，也不信竟会下劣凶残到这地步。况且始终微笑着的和蔼的刘和珍君，更何至于无端在府门前喋血呢？<br>惨象，已使我目不忍视了；流言，尤使我耳不忍闻。我还有什么话可说呢？我懂得衰亡民族之所以默无声息的缘由了。沉默呵，沉默呵！不在沉默中爆发，就在沉默中灭亡。<br>苟活者在淡红的血色中，会依稀看见微茫的希望；真的猛士，将更奋然而前行。<br>鲁迅《记念刘和珍君》<br></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;br&gt;Across the Great Wall we can reach every corner in the world.&lt;br&gt;「越过长城，走向世界每个角落」&lt;br&gt;中国互联网发送的第一封电子邮件（1987年）&lt;br&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Tutorial" scheme="http://seanxp.com/categories/Tutorial/"/>
    
    
      <category term="Tutorial" scheme="http://seanxp.com/tags/Tutorial/"/>
    
      <category term="Internet" scheme="http://seanxp.com/tags/Internet/"/>
    
      <category term="Software" scheme="http://seanxp.com/tags/Software/"/>
    
      <category term="Efficiency" scheme="http://seanxp.com/tags/Efficiency/"/>
    
      <category term="Linux" scheme="http://seanxp.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>电子时代深度阅读离不开书籍</title>
    <link href="http://seanxp.com/2016/05/reading-need-book/"/>
    <id>http://seanxp.com/2016/05/reading-need-book/</id>
    <published>2016-05-06T06:39:29.000Z</published>
    <updated>2018-03-11T02:29:34.399Z</updated>
    
    <content type="html"><![CDATA[<p>原文: <a href="http://blog.sina.com.cn/s/blog_4cacf1f30102wa4r.html" target="_blank" rel="noopener">电子时代深度阅读离不开书籍</a><br>作者: 徐 贲<br><a id="more"></a><br>每年到了4月23日世界读书日，都有人在倡导读书。那么，什么是“读书”呢？读书有两个意思，一个是一般的“阅读”，另一个则是特指“阅读书籍”。电子时代更需要强调的也许是后一个意思的读书，因为阅读书籍（读书）比阅读电子屏幕文字（读屏）更是一种专注的阅读。<strong>这里要谈的不是一般的阅读，而是深度阅读，一种需要专注和深入思考的深层阅读。</strong></p><font color="red"><br><strong>深层阅读不仅是为了获取信息和知识，而且也是通过阅读来细致辨析和深入思考。培养这种思考习惯和能力，是对每个人都有意义的素质教育和人生历练。</strong></font>人类寻找并得益于深度经验，正如美国作家鲍尔斯（William Powers）在《哈姆雷特的蓝莓》（Hamlet’s<br>BlackBerry）一书中所说，无深度则不能扎根，<font color="red"><strong>“深度让我们能扎根于这世界，让生命有质量和完整，丰富我们的工作、与他人的关系，以及我们所做的每一件事情”</strong></font>。在信息令人应接不暇，无法集中心思的环境中读屏，难以觅得这样的深度阅读。<br><font color="red"><strong>而如果只是满足于电子屏幕上的浅层阅读，那么，久而久之，人会变得精神涣散，无论阅读什么都是走马看花，自己没有深入、明确的想法，凡事便只能是道听途说、人云亦云。</strong></font><p>就深度阅读而言，读书优于读屏。<font color="red"><strong>在数码时代，读屏不能代替读书，阅读重要著作、较长和有难度的文本，阅读需要深入理解和思考的读物，都应该以读书为优先选择。</strong></font><br>当然，如果得不到书籍，那么屏上阅读也比不阅读为佳。从现有的心理学和认知神经学研究成果来看，可以从三个方面说明纸上阅读优于屏幕阅读。这三个方面分别是视觉因素、阅读认知和学习机制认识。</p><h1 id="一、读书和读屏的生理差别"><a href="#一、读书和读屏的生理差别" class="headerlink" title="一、读书和读屏的生理差别"></a>一、读书和读屏的生理差别</h1><font color="red"><strong>读书优于读屏的第一个原因是视觉疲劳。</strong></font><br>无论是在纸上，还是在阅读器（如平板）或电脑屏幕上阅读，都需要用眼。<font color="red"><strong>阅读时眼力专注，必然会减少眨眼的次数，这就会增加眼球上泪水的蒸发，也就是所谓的“干眼”（dry<br>eye）。干眼会引起疲劳、头部不适、视力模糊、对光亮敏感等症状。</strong></font><br>科学实验发现，眼睛不舒服会影响学习的能力和效果。阅读时间越长，阅读物难度越大，这种影响就越明显。现有的研究发现，一般而言，<font color="red"><strong>读屏造成的眼疲劳程度超过读书，对需要高度注意力的深层阅读来说更是如此。</strong></font><br>专注的阅读（如研读）比浏览更需要眼力注视，所以更容易使阅读者觉得“累”。网上文章三五千字就觉得很长，但纸质读物要到近万才有长的感觉。<br><br>以长远的眼光来看，生理疲劳也许不是读书优于读屏最重要的理由。这是因为，科技的发展很可能进一步减小纸上阅读和屏幕阅读在这方面的差距。<br>但是，随着电子书正在努力朝越来越“像书”的方向发展，便会产生这样的问题：<br><br>&gt; 电子书为什么要像书呢——这本身不就显示了读书相对于读屏的优势吗？<br><br>既然如此，为什么不能不能让书籍发挥书籍的作用，而让电子读物另外发挥书籍不能或不便发挥的作用呢？电子读物可以取代百科全书、手册、条例或使用说明，可以运用于新闻报道、旅游、烹调、儿童读物，但是否也就能取代“重要著作”的书籍了呢？<br><br># 二、读书和读屏的阅读认知差别<br>读书优于读屏的第二个理由与阅读认知有关，这涉及阅读时人脑的功能特征。对人脑的认知神经学研究发现，人类天生并不会阅读，人的大脑里至今并没有专司阅读的基因组。美国认知精神学家玛丽安娜•沃尔夫(Maryanne<br>Wolf)在《普鲁斯特与乌贼》（中国人民大学出版社，2012年）中指出，人的大脑里“没有特定的基因组直接负责阅读功能”（第20页）。<br>人类经历2000年之久，才实现了认知能力的突破，学会阅读字母表，而现在的儿童只需大约2000天就学会了同样的知识。<br><font color="red"><strong>一个为学习阅读而不断进行“重组”的大脑——她称之为“阅读脑”——是每个人必须在学习过程中自行发展的一种智能。</strong></font>每个人的大脑需要在负责视觉、语言、辨别物体等等基因组之间建立联接，才能学习阅读这项新的技能。每一代的每一个儿童都需要重复这样的发展过程。有经验的，成熟的阅读者可以帮助初学者完成这个过程，逐渐成为成熟的阅读者，但无法代替他完成这个过程。正如沃尔夫所说，从认知神经学的科学角度研究阅读脑，“提出的根本性问题是关于如何培养下一代人‘深入阅读’的能力和素质”。<br><br>阅读时，人脑把已有的大脑功能调动起来，加以协调，用来处理字母或字词的信息，短期储存在记忆中，以便维持一定时段间的思考。<br><font color="red"><strong>对于阅读中的大脑来说，越是有助于调动和协调已有的大脑功能，阅读理解的效果就越好。</strong></font>读书之所以优于读屏，是因为读书更能调动和协调人脑的阅读功能，因此更有利于与“理解”有关的深层阅读。<br><br>例如，对人脑来说，书写的字词是有形的辨认对象，而由字词组合而成的文本则构成了某种“思想景观”（thought-landscape），在这片景观中，与特定字词相联系的“意义”或“意思”（meaning）会占据着某个或某些特定的地方。阅读的时候，我们想到某个意思，经常会同时想到大概在书里什么方位见到过某个或某些字词，也能大致找回某种印象中的“地方”——在书页的某个方位，在书的开篇处、中间部位或其他什么地方。在阅读思考时，为了把这个意思回想得更清楚，我们也会翻书去寻找大致记得的那些地方。<br><font color="red"><strong>这种追溯性的寻找（把书翻来翻去），类似于在树林里或一个陌生地方寻找熟悉的标记，以弄清楚自己到底是在什么地方。研究者们称此为navigation（“梭巡”“巡航”），指的是为了导航而找出一个方向来。</strong></font><br>对专注的阅读来说，这个方向就是阅读在思考中想要确定的意思。网上阅读或电子书阅读都很难借助这种梭巡的机能，当然，也很少以这样的思考或思索为阅读的目的。<br><br>为了证明阅读中这种实体感的“梭巡”作用，心理学家安娜·曼艮（Anne Mangen）设计了一个阅读实验，它需要阅读者在阅读过程中运用先前读到的部分。文本共四页，测试用的是理解性的问题。参加测试的学生中，有一半在没有页码的pdf文档上阅读，另一半在纸页上阅读。结果发现，纸上阅读的学生们获得的理解成绩要好得多。曼艮推测，阅读理解与在头脑里重构文本之间存在着某些联系，“纸页上的文本是固定的，这有助于文本的空间构建，让读者有明确和固定的提示，形成文本记忆和记忆唤回”。<br><br>除了能够帮助形成文本记忆和唤回记忆，读书比读屏对阅读较少有分心和打岔的不利影响。网上的文本链接（hyperlinked<br>text）被认为是一种有用的学习工具，但是，<font color="red"><strong>对深层阅读来说，文本链接有不可忽视的负面作用。</strong></font><br>研究者发现，阅读中每次遇到一个链接，都需要阅读者作出是否要打开的决定，这就增加了阅读者的认知负担。对阅读的大脑来说，每一个链接都是一个阅读内容本身之外的额外负担。如果打开链接，读者的注意力便会转换方向，可能难以与先前的思维连接起来。就算阅读者决定不打开链接，链接部分的颜色也会对阅读造成分心。神经学家乔尔·品特（Joel Pynte）在研究错字对眼球活动的作用时发现，任何在眼副中央凹预视（Parafoveal）<br>区内的文本都会吸引目光，在目光扫视时造成信息中断，因而影响阅读速度和注意力，形成认知干扰（cognitive distraction）。<br><br>还有研究者发现，在屏读和纸读的理解程度相同或相似的时侯，屏读是记住内容，而纸读则是理解内容。人们经常误以为记住就等于理解。然而，心理学研究发现，这二者在认知上有很大差异。你可以记住一个概念，但不理解它（死记硬背或一知半解的“记得”即属此类）。然而，只有理解了一个概念，才能对短期记得的东西形成长期记忆，也才能灵活地加以运用。这时候你才可以说“懂了”“理解了”或“知晓了”。死记硬背的“知识”只是一个短期记忆，对理解有难度的读物并无用处。这种情况在外语系学生中尤其普遍。他们习惯于生硬强记，把这当作一种本领，以此衡量学习的能力或确定学习的目标。他们也进行阅读，但只经常是文字的被动接受者，文字的障碍使他们经常似懂非懂，一知半解，即使理解了文字，也很少有思考型阅读的。这是一种因长期不得不死记硬背而不幸罹患的知识疾病。<br><br># 三、读书和读屏的学习认知差别<br>屏读和纸读的差别不仅表现在阅读认知上，而且还表现在更高层次的学习认知上。不少研究者发现，屏读不适宜于较长的学术或严肃文本，如果单就读屏而言，那么，平板电子阅读器要优于电脑荧屏。有研究者发现，许多人就算用平板电子阅读器阅读，也很难有阅读书籍的那种热情或投入，<font color="red">原因是读屏会让阅读者有“触觉失调”（haptic<br>dissonance）的问题。所谓“触觉失调”也就是手感不好。</font>平板阅读器模仿书籍，却没有书籍的样子、感觉和特性，给人以疏远、不真实和不舒服的感觉。有研究调查发现，平板阅读器的使用者中，有83%表示强烈偏好阅读纸质书籍。平板阅读器与书籍，如果内容一样，看上去只是阅读媒介的不同，但实际情况是，<font color="red">不同的媒介物理特性会有不同的认知价值。如果一种阅读媒介给人不舒服，不自然，不亲近的感觉，那是会影响阅读热情和效果的。</font>这一区别对于深层阅读的不利影响要远超于一般的浏览和消遣阅读，对阅读较长、难度较大的读物则更是如此。<br><br>以色列心理学家拉克菲特·阿克曼（Rakefet<br>Ackerman）于2010年对一些大学生做了一个主动学习的测试。她选了五篇较难阅读的说理文，每篇1200字，分成电子文本和纸质文本两个阅读组。她要求所以参加测试的学生都在阅读时做各种阅读记号——划线、亮色、页边笔记等等。电子文本阅读用的是电子文字处理工具，而纸上阅读则用笔和荧光笔。在规定阅读时间的情况下，这两组学生对理解问题的回答准确度几乎一样（62%）。但是，在学生需要用多少时间就允许他们用多少时间的情况下，纸读的学生成绩却高出另一组10%。在让学生估计自己错误的时候，测试结果也出现了差异。纸质读者的错误估计在4%之内，而读屏者则平均为10%。这似乎说明，读屏者对自己理解准确度的估计不如纸质读者。这个发现对深层阅读非常重要，因为深层阅读的一个基本要求就是能尽量准确地评估阅读的结果，发现并确定其中是否有误。<br><br>大多数认真对待学习的学生都有这样的经验：在阅读来自网上的有难度的教材时，会觉得需要打印出来，然后一面阅读，一面做笔记。这样的经验也能说明纸读与屏读的不同。有研究发现，<font color="red">在对待同样读物时，纸读者比屏读者更愿意在文本上做记号或做笔记。</font>屏读和纸读的心理感觉也不一样，阅读者会觉得纸上的文本更为严肃、重要、值得仔细研读并对之有所思考，而网上的材料则供快速浏览，主要是为了轻松消遣或快速获得信息，看过算数，不值得回头再去细读。<br><br>就是在阅读者知道读物重要性的情况下，纸读和屏读的差异性也能表现出来。2013年，阅读心理学家莎拉·玛格琳（Sara J.<br>Margolin）做了一个阅读理解的测试。她让参加测试者阅读几篇500字的记叙文和说理文，参加测试者分为三组，分别用纸、数码阅读器和LCD电脑阅读。理解测验结束后，参试者报告自己在阅读中用了什么学习方法。从测试结果来看，用电子阅读器的说理理解最差（100分中低了4分），这个差距也许并不大。但是，<font color="red">重要的差别在于，用电子阅读器的读者比较不愿意回到前面去复查阅读结果。这就可能影响了他们的理解准确性，因为复查一下的话，他们本来是可能纠正理解中的错误的。</font><font color="red">记笔记是一种帮助阅读理解的有效认知手段。</font>心理学家潘姆·穆勒（Pam A. Mueller）等人发现，纸读有利于笔记，纸读者手里拿一支笔，比屏读者更容易，也更乐于在阅读中做笔记。而且，纸读者和屏读者做笔记的方式也不相同。纸读者用手写，比屏读者更愿意或倾向于用自己的话来简述或改述阅读的文字，这有利于消化和记忆学习的内容。<font color="red">消化和吸收的学习正是深层阅读的一个主要认知目标。</font>认知神经学家内奧米·沃尔夫（Naomi<br>Wolf）指出，用手书写有助于抽象思维，也有助于更准确地与他人交流。许多人都有这样的经验，在写东西的时候，不同写作目的会影响不同的书写意愿，例如，我们写便条或私人信件，直接在键盘上敲打便可，但若要写论文，则更愿意在纸上书写，因为这样写作更有利于思索和推敲。这与电子屏幕上适宜浅层阅读，而纸上则更适宜于深层阅读的区别是一致的。<br><br>了解和认识书籍和其他纸媒文字在深层阅读上的优势，这对青年学生们来说尤其重要。他们的阅读应该不只是为了获取现成的知识信息，更不只是满足于电子阅读的那种即兴浏览和浅尝辄止。<br><font color="red">他们正处于最需要用阅读书籍来增强思考能力的年龄，因此不能只是为了阅读而阅读，而是应该知道为什么阅读，阅读什么，通过阅读可以能培养怎样的智识素质和公民能力，而为了培养这样的素质和能力，又该如何进行阅读。为此，也就尤其需要重视和强调那种能培养独立思考和价值判断的批判性深层阅读。阅读能改变人的生活，但是，阅读改变人生活的程度和性质，主要取决于我们所读的书籍，以及我们阅读的方式。因此，适逢世界读书日，提醒一下电子时代的深度阅读离不开书籍，应该是一件有意义的事情。</font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原文: &lt;a href=&quot;http://blog.sina.com.cn/s/blog_4cacf1f30102wa4r.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;电子时代深度阅读离不开书籍&lt;/a&gt;&lt;br&gt;作者: 徐 贲&lt;br&gt;
    
    </summary>
    
      <category term="Reproduce" scheme="http://seanxp.com/categories/Reproduce/"/>
    
    
      <category term="Internet" scheme="http://seanxp.com/tags/Internet/"/>
    
      <category term="Learning" scheme="http://seanxp.com/tags/Learning/"/>
    
      <category term="Reading" scheme="http://seanxp.com/tags/Reading/"/>
    
      <category term="Analysis" scheme="http://seanxp.com/tags/Analysis/"/>
    
      <category term="Book" scheme="http://seanxp.com/tags/Book/"/>
    
  </entry>
  
  <entry>
    <title>我的RSS订阅列表</title>
    <link href="http://seanxp.com/2016/05/my-rss-list/"/>
    <id>http://seanxp.com/2016/05/my-rss-list/</id>
    <published>2016-05-05T12:41:50.000Z</published>
    <updated>2018-03-11T03:28:46.998Z</updated>
    
    <content type="html"><![CDATA[<p>我个人很喜欢RSS，少数量、高质量的RSS订阅，使人可以在纷繁杂乱的互联网潮流中，及时获取到真正有阅读价值的文章。<br>这里不做RSS的科普，网上已经有很多，善用搜索引擎就能找到。<br>关于RSS阅读器，我使用的是<a href="https://feedly.com/" target="_blank" rel="noopener">feedly</a>，客户端使用<a href="http://reederapp.com" target="_blank" rel="noopener">Reeder</a>。<br>良好的客户端阅读体验必不可少，但更重要的是RSS的订阅质量。</p><a id="more"></a><h2 id="OPML-RSS-always-updated"><a href="#OPML-RSS-always-updated" class="headerlink" title="OPML RSS (always updated)"></a>OPML RSS (always updated)</h2><p><strong> 2018/03/11 更新 <a href="/feedly_export_rss.opml">RSS订阅源.opml</a> </strong></p><p>OPML文件可直接导入自己的RSS源中。这里仅用于参考，不建议直接导入，毕竟不同的人对<strong>“有价值的订阅源”</strong>的定义也不同。</p><h2 id="My-2016-RSS-List"><a href="#My-2016-RSS-List" class="headerlink" title="My 2016 RSS List"></a>My 2016 RSS List</h2><h3 id="Apple"><a href="#Apple" class="headerlink" title="Apple"></a>Apple</h3><p>订阅苹果公司及其产品的相关信息。</p><ul><li>少数派–分享好应用, <a href="http://sspai.com/feed" target="_blank" rel="noopener">http://sspai.com/feed</a></li><li>Mac玩儿法, <a href="http://www.waerfa.com/feed" target="_blank" rel="noopener">http://www.waerfa.com/feed</a></li></ul><h3 id="Blogs"><a href="#Blogs" class="headerlink" title="Blogs"></a>Blogs</h3><ul><li>读立写生, <a href="http://cnfeat.com/feed.xml" target="_blank" rel="noopener">http://cnfeat.com/feed.xml</a></li><li>Raptitude.com, <a href="http://www.raptitude.com/feed/" target="_blank" rel="noopener">http://www.raptitude.com/feed/</a></li><li>伯乐在线, <a href="http://blog.jobbole.com/feed/" target="_blank" rel="noopener">http://blog.jobbole.com/feed/</a></li><li>学而时嘻之, <a href="http://www.geekonomics10000.com/feed/atom" target="_blank" rel="noopener">http://www.geekonomics10000.com/feed/atom</a></li><li>xkcd.com, <a href="http://xkcd.com/atom.xml" target="_blank" rel="noopener">http://xkcd.com/atom.xml</a></li><li>吕小荣, <a href="http://mednoter.com/feed.xml" target="_blank" rel="noopener">http://mednoter.com/feed.xml</a></li><li>褪墨・时间管理，个人提升，生活健康与习惯, <a href="http://www.mifengtd.cn/feed.xml" target="_blank" rel="noopener">http://www.mifengtd.cn/feed.xml</a></li><li>始终, <a href="http://liam0205.me/atom.xml" target="_blank" rel="noopener">http://liam0205.me/atom.xml</a></li><li>Lucida, <a href="http://lucida.me/atom.xml" target="_blank" rel="noopener">http://lucida.me/atom.xml</a></li><li>IT牛人博客聚合网站, <a href="http://www.udpwork.com/feed" target="_blank" rel="noopener">http://www.udpwork.com/feed</a></li><li>Digital Meme, <a href="http://shibeichen.com/rss" target="_blank" rel="noopener">http://shibeichen.com/rss</a></li><li>Matrix67: The Aha Moments, <a href="http://www.matrix67.com/blog/feed" target="_blank" rel="noopener">http://www.matrix67.com/blog/feed</a></li><li>译言最新精选, <a href="http://feed.yeeyan.org/select" target="_blank" rel="noopener">http://feed.yeeyan.org/select</a></li><li>BlahGeek’s Blog, <a href="https://blog.blahgeek.com/feeds/all.rss.xml" target="_blank" rel="noopener">https://blog.blahgeek.com/feeds/all.rss.xml</a></li><li>Beyond the Void, <a href="https://www.byvoid.com/feed" target="_blank" rel="noopener">https://www.byvoid.com/feed</a></li><li>GFW BLOG（功夫网与翻墙）, <a href="http://www.chinagfw.org/feeds/posts/default" target="_blank" rel="noopener">http://www.chinagfw.org/feeds/posts/default</a></li><li>阳志平的网志, <a href="http://www.yangzhiping.com/feed" target="_blank" rel="noopener">http://www.yangzhiping.com/feed</a></li><li>后端技术 by Tim Yang, <a href="http://timyang.net/feed/" target="_blank" rel="noopener">http://timyang.net/feed/</a></li><li>海德沙龙（HeadSalon）, <a href="http://headsalon.org/feed" target="_blank" rel="noopener">http://headsalon.org/feed</a></li><li>编程随想的博客, <a href="http://feeds2.feedburner.com/programthink" target="_blank" rel="noopener">http://feeds2.feedburner.com/programthink</a></li><li>猫窝, <a href="http://blog.wangjunyu.net/feed" target="_blank" rel="noopener">http://blog.wangjunyu.net/feed</a></li><li>透明思考, <a href="http://gigix.thoughtworkers.org/atom.xml" target="_blank" rel="noopener">http://gigix.thoughtworkers.org/atom.xml</a></li><li>湾区日报, <a href="http://wanqu.co/feed" target="_blank" rel="noopener">http://wanqu.co/feed</a></li><li>Dreamsome, <a href="http://dreamsome.org/" target="_blank" rel="noopener">http://dreamsome.org/</a></li><li>CoolShell.cn, <a href="http://coolshell.cn/feed" target="_blank" rel="noopener">http://coolshell.cn/feed</a></li><li>北河以北, <a href="http://songchunlin.net/feed/" target="_blank" rel="noopener">http://songchunlin.net/feed/</a></li><li>乱象，印迹, <a href="http://www.luanxiang.org/blog/feed" target="_blank" rel="noopener">http://www.luanxiang.org/blog/feed</a></li><li>WooYun知识库, <a href="http://drops.wooyun.org/feed" target="_blank" rel="noopener">http://drops.wooyun.org/feed</a></li></ul><h3 id="IT-News"><a href="#IT-News" class="headerlink" title="IT News"></a>IT News</h3><ul><li>利器, <a href="http://liqi.io/feed/" target="_blank" rel="noopener">http://liqi.io/feed/</a></li><li>Information is Beautiful, <a href="http://feeds.feedburner.com/InformationIsBeautiful" target="_blank" rel="noopener">http://feeds.feedburner.com/InformationIsBeautiful</a></li><li>Solidot, <a href="http://solidot.org.feedsportal.com/c/33236/f/556826/index.rss" target="_blank" rel="noopener">http://solidot.org.feedsportal.com/c/33236/f/556826/index.rss</a></li><li>爱范儿，<a href="http://www.ifanr.com/feed" target="_blank" rel="noopener">http://www.ifanr.com/feed</a></li></ul><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><ul><li>IBM developerWorks 中国 : Linux,Open sour, <a href="http://www.ibm.com/developerworks/cn/views/rss/customrssatom.jsp?zone_type=SixZones&amp;zone_by=Linux&amp;zone_by=Open+source&amp;content_type=AllTypes&amp;search_by=&amp;day=1&amp;month=01&amp;year=2008&amp;max_entries=10&amp;feed_by=atom" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/views/rss/customrssatom.jsp?zone_type=SixZones&amp;zone_by=Linux&amp;zone_by=Open+source&amp;content_type=AllTypes&amp;search_by=&amp;day=1&amp;month=01&amp;year=2008&amp;max_entries=10&amp;feed_by=atom</a></li><li>Linux.中国 - 开源社区, <a href="https://linux.cn/rss.xml" target="_blank" rel="noopener">https://linux.cn/rss.xml</a></li></ul><h3 id="Photography"><a href="#Photography" class="headerlink" title="Photography"></a>Photography</h3><ul><li>The Big Picture, <a href="http://www.boston.com/bigpicture/index.xml" target="_blank" rel="noopener">http://www.boston.com/bigpicture/index.xml</a></li><li>500px: Editors’ Choice, <a href="http://feed.500px.com/500px-editors" target="_blank" rel="noopener">http://feed.500px.com/500px-editors</a></li></ul><h3 id="README"><a href="#README" class="headerlink" title="README"></a>README</h3><ul><li>左岸读书, <a href="http://www.zreading.cn/feed" target="_blank" rel="noopener">http://www.zreading.cn/feed</a></li><li>战隼的学习探索, <a href="http://feed.read.org.cn/" target="_blank" rel="noopener">http://feed.read.org.cn/</a></li><li>徐贲的BLOG, <a href="http://blog.sina.com.cn/rss/1286402547.xml" target="_blank" rel="noopener">http://blog.sina.com.cn/rss/1286402547.xml</a></li><li>阮一峰的网络日志，<a href="http://www.ruanyifeng.com/feed.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/feed.html</a></li><li>月光博客，<a href="http://feed.williamlong.info/" target="_blank" rel="noopener">http://feed.williamlong.info/</a></li><li>腊八粥, <a href="http://www.labazhou.net/feed/" target="_blank" rel="noopener">http://www.labazhou.net/feed/</a></li></ul><h3 id="Questions"><a href="#Questions" class="headerlink" title="Questions"></a>Questions</h3><ul><li>知乎每日精选, <a href="http://www.zhihu.com/rss" target="_blank" rel="noopener">http://www.zhihu.com/rss</a></li><li>知乎日报, <a href="http://feeds.feedburner.com/zhihu-daily" target="_blank" rel="noopener">http://feeds.feedburner.com/zhihu-daily</a></li><li>Quora, <a href="http://www.quora.com/rss" target="_blank" rel="noopener">http://www.quora.com/rss</a></li><li>Engineering on Quora, <a href="http://engineering.quora.com/rss" target="_blank" rel="noopener">http://engineering.quora.com/rss</a></li></ul><h2 id="退订-RSS"><a href="#退订-RSS" class="headerlink" title="退订 RSS"></a>退订 RSS</h2><p>RSS 是获取互联网信息的一大利器，然而如果不能有效地利用 RSS 来订阅资源，反而会成为一种信息负担，因此 RSS 订阅源必须保持不断更新，添加新的、感兴趣的、高质量的订阅源，同时也要删减不再更新的、不再感兴趣的、噪声太多的订阅源。</p><p><a href="http://mindhacks.cn/2008/07/20/learning-habits-part2/" target="_blank" rel="noopener">退订RSS</a></p><ul><li>RSS Reader是个时间黑洞。就算mark all as read，在有大量feed的情况下，也会无形中消耗掉大量的时间。</li><li>仔细观察一下reader里面的feeds，有哪些是真正有价值的，把那些没价值的或者价值很小乃至于不值得每天被它骚扰的，全都退订掉。</li><li>别担心你会漏掉什么宝贵信息，真正宝贵的信息，在其他来源你也会接触到的。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我个人很喜欢RSS，少数量、高质量的RSS订阅，使人可以在纷繁杂乱的互联网潮流中，及时获取到真正有阅读价值的文章。&lt;br&gt;这里不做RSS的科普，网上已经有很多，善用搜索引擎就能找到。&lt;br&gt;关于RSS阅读器，我使用的是&lt;a href=&quot;https://feedly.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;feedly&lt;/a&gt;，客户端使用&lt;a href=&quot;http://reederapp.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Reeder&lt;/a&gt;。&lt;br&gt;良好的客户端阅读体验必不可少，但更重要的是RSS的订阅质量。&lt;/p&gt;
    
    </summary>
    
      <category term="Tutorial" scheme="http://seanxp.com/categories/Tutorial/"/>
    
    
      <category term="Tutorial" scheme="http://seanxp.com/tags/Tutorial/"/>
    
      <category term="Efficiency" scheme="http://seanxp.com/tags/Efficiency/"/>
    
      <category term="List" scheme="http://seanxp.com/tags/List/"/>
    
  </entry>
  
  <entry>
    <title>日剧：JIN-仁(仁医)</title>
    <link href="http://seanxp.com/2016/04/TV-Jin/"/>
    <id>http://seanxp.com/2016/04/TV-Jin/</id>
    <published>2016-04-05T07:05:27.000Z</published>
    <updated>2018-03-11T02:29:34.403Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ww2.sinaimg.cn/large/006tNbRwly1fdmdakvrz0j30zk0k00wz.jpg" alt="JIN-1"><br>我生君未生，君生我已老。<br>我恨君生迟，君恨我生早。<br>唯留书一封，寸心以相表。<br>若得生同时，誓拟与君好。<br><a id="more"></a></p><h1 id="日剧《仁医》"><a href="#日剧《仁医》" class="headerlink" title="日剧《仁医》"></a>日剧《仁医》</h1><p>在我们看来，一切都是理所当然的。<br>可以想去就去到地球的另一面，<br>任何时候都能传达自己的思念，<br>每天过着平凡而又充实的生活，<br>以及这个会让人忘记白天黑夜的世界。<br>然而，这一切都是先人赐予我们的，<br>是历史中的每个人战斗，挣扎，牺牲所赢得的，<br>更是由无数的生命奇迹编织而成的，<br>所以，我们必须给予后人更加光明的未来，用我们的双手。</p><ul><li><a href="https://movie.douban.com/subject/3892394/" target="_blank" rel="noopener">豆瓣 - 仁医</a></li><li><a href="https://movie.douban.com/subject/4881202/" target="_blank" rel="noopener">豆瓣 - 仁医2</a></li><li><a href="https://www.zhihu.com/question/25381157" target="_blank" rel="noopener">知乎 - 向爱与历史致敬！仁医简评</a></li></ul><iframe width="560" height="315" src="https://www.youtube.com/embed/WzvJnUB7F8I" frameborder="0" allowfullscreen></iframe><h1 id="橘咲：给遗忘世界的未知情书"><a href="#橘咲：给遗忘世界的未知情书" class="headerlink" title="橘咲：给遗忘世界的未知情书"></a>橘咲：给遗忘世界的未知情书</h1><pre><code>〇〇大夫：○○先生へ    大夫，您还好吗？    先生 お元気でいらっしゃいますでしょうか    写了奇怪的开头，非常抱歉。    おかしな书き出しでございますこと 深くお诧び申し上げます    其实，在感染病中保住一命之后，无论如何也想不起大夫您的名字。    実は 感染症から一命を取り留めたあと どうしても先生の名が思い出せず    我询问了其他的大夫们，大家却说仁友堂并没有那样的大夫。    先生方に确かめたところ 仁友堂には そのような先生などおいでにならず    而这里是我们创建起来的诊所。    ここは わたくし达がおこした治疗所だと言われました    我虽觉得事有蹊跷，但也不由自主的想。    何かがおかしい そう思いながらも わたくしもまた 次第にそのように思うようになりました    那是在做梦吧。    梦でも见ていたのであろうと    然而，有一天，我找到了一枚从未见过的奇怪的铜质圆片。    なれど ある日のこと 见たこともない 奇妙な铜の丸い板を见つけたのでございます    看着那圆片，我隐约回想了起来。    その板を见ているうちに わたくしは おぼろげに思い出しました    这里，曾有一位被称作大夫的人。    ここには 先生と呼ばれたお方がいたことを    那位大人，喜欢吃油炸豆腐，容易流泪。    そのお方は 扬げだし豆腐がお好きであったこと 涙もろいお方であったこと    拥有神一般的妙手，却绝不是神。    神のごとき手を持ち なれど 决して神などではなく    他会迷茫，会受伤，会心碎，一心扑在治疗上。    迷い伤つき お心を砕かれ ひたすら悬命に治疗に当たられる    是位拥有仁心的人。    仁をお持ちの人であったこと    我记起了，因为他。    わたくしはそのお方に    让我曾看见了这世上最美丽的夕阳。    この世で 一番美しい夕日をいただきましたことを 思い出しました    记起了，我对这位连名字和样貌都不记得了的人，怀有思慕之情。    もう名も お颜も 思い出せぬそのお方に 恋をしておりましたことを    可是，这样下去的话。一定会，终有一天，我会忘记一切。    なれど きっとこのままでは わたくしは いつか全てを忘れてしまう    连这流泪的理由也一并遗忘。    この涙のわけまでも失ってしまう    不知为何我耳边残留着修正力这个词。    なぜか耳に残っている 修正力という言叶    让我觉得这段回忆会消失。    わたくしは この思い出を无きものとされてしまう気がいたしました    既然这样，我不由自主地就拿起了笔。    ならば と 笔をとった次第にございます    我能与此抗争的方法只有一个。就是把这回忆记录下来。    わたくしがこの出来事にあらがうすべはひとつ この思いを记すことでございます    〇〇大夫    ○○先生    请容许我在此重新记下。    改めて ここに书き留めさせていただきます    橘咲，一直都爱慕大夫。    橘咲は 先生を お慕い申しておりました                                                                        橘咲</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ww2.sinaimg.cn/large/006tNbRwly1fdmdakvrz0j30zk0k00wz.jpg&quot; alt=&quot;JIN-1&quot;&gt;&lt;br&gt;我生君未生，君生我已老。&lt;br&gt;我恨君生迟，君恨我生早。&lt;br&gt;唯留书一封，寸心以相表。&lt;br&gt;若得生同时，誓拟与君好。&lt;br&gt;
    
    </summary>
    
      <category term="TV" scheme="http://seanxp.com/categories/TV/"/>
    
    
      <category term="Review" scheme="http://seanxp.com/tags/Review/"/>
    
      <category term="TV" scheme="http://seanxp.com/tags/TV/"/>
    
  </entry>
  
  <entry>
    <title>猴子王国 Monkey Kingdom</title>
    <link href="http://seanxp.com/2015/09/monkey-kingdom/"/>
    <id>http://seanxp.com/2015/09/monkey-kingdom/</id>
    <published>2015-09-23T04:55:33.000Z</published>
    <updated>2018-03-11T02:29:34.395Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://images-na.ssl-images-amazon.com/images/M/MV5BMzIxNDc1MDg0MF5BMl5BanBnXkFtZTgwNTI3ODE4MzE@._V1_SY1000_SX676_AL_.jpg" alt="Monkey Kingdom"><br><a id="more"></a></p><ul><li><a href="http://nature.disney.com/monkey-kingdom" target="_blank" rel="noopener">Disney - Monkey Kingdom</a></li><li><a href="https://movie.douban.com/subject/25865526/" target="_blank" rel="noopener">Douban - Monkey Kingdom</a></li></ul><p>超赞的自然纪录片！好莱坞大片既视感、时而大气时而欢快的配乐、趣味的旁白配音，自由广阔的视角，这部纪录片样样出色。<br>猴子社会的等级制度、权利的争夺与守护、贵族阶级与平民阶级在遭遇社会重大变故的反应，共同谱写出一篇不收待见的下层女青年凭借远大眼光扶持平民屌丝青年帮助其凭借社会变故翻身做贵族的故事。<br>天地不仁，以万物为刍狗；圣人不仁，以百姓为刍狗。<br>这种无为而治的拍摄手法完完全全地还原了猴子社会，亦是人类社会的缩影。<br>有能力，才有被利用的价值，才会在新的环境和趋势来临之际，把握机会，改变阶级构成。<br>纵观人类社会历史，莫不是乱世出英雄，末代立皇帝。<br>我等平民阶级，唯有“藏器于身，待时而动”。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images-na.ssl-images-amazon.com/images/M/MV5BMzIxNDc1MDg0MF5BMl5BanBnXkFtZTgwNTI3ODE4MzE@._V1_SY1000_SX676_AL_.jpg&quot; alt=&quot;Monkey Kingdom&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Documentary" scheme="http://seanxp.com/categories/Documentary/"/>
    
    
      <category term="Review" scheme="http://seanxp.com/tags/Review/"/>
    
      <category term="Documentary" scheme="http://seanxp.com/tags/Documentary/"/>
    
      <category term="Social" scheme="http://seanxp.com/tags/Social/"/>
    
  </entry>
  
  <entry>
    <title>《醉步男》</title>
    <link href="http://seanxp.com/2015/09/drunk-man/"/>
    <id>http://seanxp.com/2015/09/drunk-man/</id>
    <published>2015-09-20T04:47:47.000Z</published>
    <updated>2018-03-11T02:29:34.391Z</updated>
    
    <content type="html"><![CDATA[<p>“为什么人可以安定地生活？”<br>因为波函数可以坍缩。<br>“折磨我的是什么？”<br>是无法抗拒的命运。<br>“为什么人不能舍弃希望？”<br>因为波函数可以发散。<br>“你是谁？”<br>我是手儿奈。</p><p>——《醉步男》<br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;“为什么人可以安定地生活？”&lt;br&gt;因为波函数可以坍缩。&lt;br&gt;“折磨我的是什么？”&lt;br&gt;是无法抗拒的命运。&lt;br&gt;“为什么人不能舍弃希望？”&lt;br&gt;因为波函数可以发散。&lt;br&gt;“你是谁？”&lt;br&gt;我是手儿奈。&lt;/p&gt;
&lt;p&gt;——《醉步男》&lt;br&gt;
    
    </summary>
    
      <category term="Reproduce" scheme="http://seanxp.com/categories/Reproduce/"/>
    
    
      <category term="Poetry" scheme="http://seanxp.com/tags/Poetry/"/>
    
  </entry>
  
</feed>
